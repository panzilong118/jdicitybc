{"version":3,"sources":["../src/routes/asyncMatchRoutes.js"],"names":["getComponents","match","map","v","route","component","reduce","result","preload","res","concat","ret","getParams","params","asyncMatchRoutes","routes","pathname","components"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC5B,SAAOA,MAAMC,GAAN,CAAU;AAAA,WAAKC,EAAEC,KAAF,CAAQC,SAAb;AAAA,GAAV,EAAkCC,MAAlC;AAAA,wFAAyC,iBAAOC,MAAP,EAAeF,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC1CA,UAAUG,OADgC;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAE1BH,UAAUG,OAAV,EAF0B;;AAAA;AAEtCC,iBAFsC;AAAA;AAAA;AAAA;AAAA,qBAGrBF,MAHqB;;AAAA;AAAA;AAAA;AAAA,6BAGZF,SAHY;AAAA,6DAGE,GAAGK,MAAH,CAAUD,GAAV,CAHF;AAGtCE,iBAHsC;AAAA,+CAIrCA,GAJqC;;AAAA;AAAA;AAAA;AAAA;AAAA,qBAM5BJ,MAN4B;;AAAA;AAAA;AAAA;AAAA,8BAMnBF,SANmB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAzC;;AAAA;AAAA;AAAA;AAAA,OAOJ,EAPI,CAAP;AAQD;;AAED,SAASO,SAAT,CAAmBX,KAAnB,EAA0B;AACxB,SAAOA,MAAMK,MAAN,CAAa,UAACC,MAAD,EAASF,SAAT,EAAuB;AACzC,QAAIA,UAAUJ,KAAV,IAAmBI,UAAUJ,KAAV,CAAgBY,MAAvC,EAA+C;AAC7C,wCAAYN,MAAZ,EAAuBF,UAAUJ,KAAV,CAAgBY,MAAvC;AACD;AACD,WAAON,MAAP;AACD,GALM,EAKJ,EALI,CAAP;AAMD;;AAED,IAAMO;AAAA,uFAAmB,kBAAOC,MAAP,EAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBf,iBADiB,GACT,oCAAYc,MAAZ,EAAoBC,QAApB,CADS;AAEjBH,kBAFiB,GAERD,UAAUX,KAAV,CAFQ;AAAA;AAAA,mBAGED,cAAcC,KAAd,CAHF;;AAAA;AAGjBgB,sBAHiB;AAAA,8CAKhB,EAAEA,sBAAF,EAAchB,YAAd,EAAqBY,cAArB,EALgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA,GAAN;;kBAQeC,gB;;AAGf","file":"asyncMatchRoutes.js","sourcesContent":["import { matchRoutes } from 'react-router-config';\n\nfunction getComponents(match) {\n  return match.map(v => v.route.component).reduce(async (result, component) => {\n    if (component.preload) {\n      const res = await component.preload();\n      const ret = [...(await result), component, ...[].concat(res)];\n      return ret;\n    }\n    return [...(await result), component];\n  }, []);\n}\n\nfunction getParams(match) {\n  return match.reduce((result, component) => {\n    if (component.match && component.match.params) {\n      return { ...result, ...component.match.params };\n    }\n    return result;\n  }, {});\n}\n\nconst asyncMatchRoutes = async (routes, pathname) => {\n  const match = matchRoutes(routes, pathname);\n  const params = getParams(match);\n  const components = await getComponents(match);\n\n  return { components, match, params };\n};\n\nexport default asyncMatchRoutes;\n\n\n/*\nimport asyncMatchRoutes from 'jdcloudecc/routes/asyncMatchRoutes'\nexport default function() {\n    return asyncMatchRoutes;\n}*/\n"]}