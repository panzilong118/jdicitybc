{"version":3,"sources":["../src/routes/ssrrender.js"],"names":["req","res","template","routes","reducer","data","config","render","assets","webpackIsomorphicTools","css","styles","js","javascript","micro_service_name","replace","_b2b_static_server_","__DEVELOPMENT__","refresh","client","providers","history","initialEntries","originalUrl","store","helpers","__DISABLE_SSR__","baseUrl","path","components","match","params","location","modules","context","component","push","moduleName","content","renderToString","url","redirect","locationState","getState","router","pathname","search","bundles","console","log","serverData","mode","error","status"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;sFAEe,iBAAeA,GAAf,EAAmBC,GAAnB,EAAwBC,QAAxB,EAAkCC,MAAlC;AAAA,QAAyCC,OAAzC,uEAAmD,EAAnD;AAAA,QAAsDC,IAAtD,uEAA6D,EAA7D;AAAA,QAAiEC,MAAjE;;AAAA,+DAYFC,MAZE;;AAAA;AAAA;AAAA;AAAA;AAYFA,kBAZE,YAYFA,MAZE,GAYO;AAChB;AACA,kBAAMC,SAASC,uBAAuBD,MAAvB,EAAf;AACAP,kBAAIM,MAAJ,CAAWL,QAAX,2BAAsBQ,KAAIF,OAAOG,MAAjC,EAAwCC,IAAGJ,OAAOK,UAAlD,IAAgER,IAAhE;AACD,aAhBU;;AACLS,8BADK,GACgBR,OAAOQ,kBAAP,CAA0BC,OAA1B,CAAkC,MAAlC,EAAyC,EAAzC,CADhB;;AAEX,kCAAcV,IAAd,EAAmB,EAACW,qBAAoBV,OAAOU,mBAAP,GAA2B,GAA3B,GAA+BF,kBAA/B,GAAkD,GAAvE,EAAnB;AACAG,+BAAmBR,uBAAuBS,OAAvB,EAAnB;AACIC,kBAJO,GAIE,wBAAcb,MAAd,EAAsBN,GAAtB,EAA2BC,GAA3B,CAJF;AAKLmB,qBALK,8BAMJD,MANI;AAQX;;AACME,mBATK,GASK,mCAAoB,EAAEC,gBAAgB,CAACtB,IAAIuB,WAAL,CAAlB,EAApB,CATL;AAULC,iBAVK,GAUG,sBAAY,EAAEH,gBAAF,EAAWhB,UAAX,EAAiBoB,SAASL,SAA1B,EAAoChB,gBAApC,EAAZ,CAVH;;AAAA,iBAkBPsB,eAlBO;AAAA;AAAA;AAAA;;AAAA,6CAmBFnB,QAnBE;;AAAA;AAAA;AAAA;AAAA,mBAsBmC,gCAAiBJ,MAAjB,EAAyBH,IAAI2B,OAAJ,GAAY3B,IAAI4B,IAAzC,CAtBnC;;AAAA;AAAA;AAsBDC,sBAtBC,SAsBDA,UAtBC;AAsBWC,iBAtBX,SAsBWA,KAtBX;AAsBkBC,kBAtBlB,SAsBkBA,MAtBlB;AAAA;AAAA,mBAuBH,qBAAQ,OAAR,EAAiBF,UAAjB,6BACDT,SADC;AAEJI,0BAFI;AAGJM,0BAHI;AAIJC,4BAJI;AAKJV,8BALI;AAMJW,wBAAUX,QAAQW;AANd,eAvBG;;AAAA;AAgCHC,mBAhCG,GAgCO,EAhCP;AAiCHC,mBAjCG,GAiCO,EAjCP;AAkCHC,qBAlCG,GAmCP;AAAA,sCAAU,OAAV;AAAA,gBAAkB,QAAQ;AAAA,yBAAcF,QAAQG,IAAR,CAAaC,UAAb,CAAd;AAAA,iBAA1B;AACE;AAAA;AAAA,yCAAU,OAAOb,KAAjB,IAA4BJ,SAA5B;AACE;AAAA;AAAA,oBAAiB,SAASC,OAA1B;AACE;AAAA;AAAA,sBAAc,UAAUrB,IAAIuB,WAA5B,EAAyC,SAASW,OAAlD;AACE;AAAA;AAAA,wBAAmB,QAAQ/B,MAA3B,EAAmC,OAAOqB,KAA1C,EAAiD,SAASJ,SAA1D;AACG,2DAAajB,MAAb;AADH;AADF;AADF;AADF;AADF,aAnCO;AA+CHmC,mBA/CG,GA+CO,iBAASC,cAAT,CAAwBJ,SAAxB,CA/CP;;AAAA,iBAgDLD,QAAQM,GAhDH;AAAA;AAAA;AAAA;;AAAA,6CAiDAvC,IAAIwC,QAAJ,CAAa,GAAb,EAAkBP,QAAQM,GAA1B,CAjDA;;AAAA;AAoDHE,yBApDG,GAoDalB,MAAMmB,QAAN,GAAiBC,MAAjB,CAAwBZ,QApDrC;;AAAA,kBAqDLhC,IAAIuB,WAAJ,KAAoBmB,cAAcG,QAAd,GAAyBH,cAAcI,MArDtD;AAAA;AAAA;AAAA;;AAAA,6CAsDA7C,IAAIwC,QAAJ,CAAa,GAAb,EAAkBC,cAAcG,QAAhC,CAtDA;;AAAA;AAyDHE,mBAzDG,GAyDO,yBAAW,0BAAX,EAAwBd,OAAxB,CAzDP;;AA0DTe,oBAAQC,GAAR,CAAY,cAAZ,EAA2BhB,OAA3B,EAAmCc,OAAnC;AACMvC,kBA3DG,GA2DMC,uBAAuBD,MAAvB,EA3DN;AA4DH0C,sBA5DG,GA4DU,mBAAiB,mCAAU1B,MAAMmB,QAAN,EAAV,CA5D3B;;AA6DPK,oBAAQC,GAAR,CAAY,wBAAZ,EAAqC,EAACnC,sCAAD,EAArC;AACFb,gBAAIM,MAAJ,CAAWL,QAAX,2BAAsBQ,KAAIF,OAAOG,MAAjC,EAAwCC,IAAGJ,OAAOK,UAAlD,EAA6DyB,gBAA7D,EAAqEY,sBAArE,EAAgFC,MAAKlC,eAArF,EAAqGH,sCAArG,IAA2HT,IAA3H;;AA9DS;AAAA;;AAAA;AAAA;AAAA;;AAiET2C,oBAAQI,KAAR,CAAc,cAAd;AACAnD,gBAAIoD,MAAJ,CAAW,GAAX;AACA9C;;AAnES;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"ssrrender.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/server';\nimport path from 'path';\nimport createMemoryHistory from 'history/createMemoryHistory';\nimport { Provider } from 'react-redux';\nimport Loadable from 'react-loadable';\nimport { getBundles } from 'react-loadable/webpack';\nimport { StaticRouter } from 'react-router';\nimport { ConnectedRouter } from 'react-router-redux';\nimport { renderRoutes } from 'react-router-config';\nimport { trigger } from 'redial';\nimport serialize from 'serialize-javascript';\nimport asyncMatchRoutes from './asyncMatchRoutes';\nimport ReduxAsyncConnect from './ReduxAsyncConnect';\nimport getChunks, { waitChunks } from '../helpers/getChunks';\nimport ApiClient from '../apiClient/ApiClient';\nimport createStore from '../redux/create';\n\nexport default async function(req,res, template, routes,reducer = {},data = {}, config) {\n    const micro_service_name = config.micro_service_name.replace(\"b2b-\",\"\")\n    Object.assign(data,{_b2b_static_server_:config._b2b_static_server_+\"/\"+micro_service_name+\"/\"});\n    __DEVELOPMENT__ && webpackIsomorphicTools.refresh();\n    var client = new ApiClient(config, req, res);\n    const providers = {\n        ...client\n    };\n    //const client = new ApiClient(req,res); //TODO\n    const history = createMemoryHistory({ initialEntries: [req.originalUrl] });\n    const store = createStore({ history, data, helpers: providers,reducer });\n\n    function render() {\n      //const script = \"window.__data=\"+serialize(store.getState()); //TODO\n      const assets = webpackIsomorphicTools.assets();\n      res.render(template, {css:assets.styles,js:assets.javascript,...data});\n    }\n\n    if (__DISABLE_SSR__) {\n      return render();\n    }\n    try {\n      const { components, match, params } = await asyncMatchRoutes(routes, req.baseUrl+req.path);\n      await trigger('fetch', components, {\n        ...providers,\n        store,\n        match,\n        params,\n        history,\n        location: history.location\n      });\n\n      const modules = [];\n      const context = {};\n      const component = (\n        <Loadable.Capture report={moduleName => modules.push(moduleName)}>\n          <Provider store={store} {...providers}>\n            <ConnectedRouter history={history}>\n              <StaticRouter location={req.originalUrl} context={context}>\n                <ReduxAsyncConnect routes={routes} store={store} helpers={providers}>\n                  {renderRoutes(routes)}\n                </ReduxAsyncConnect>\n              </StaticRouter>\n            </ConnectedRouter>\n          </Provider>\n        </Loadable.Capture>\n      );\n      const content = ReactDOM.renderToString(component);\n      if (context.url) {\n        return res.redirect(301, context.url);\n      }\n\n      const locationState = store.getState().router.location;\n      if (req.originalUrl !== locationState.pathname + locationState.search) {\n        return res.redirect(301, locationState.pathname);\n      }\n\n      const bundles = getBundles(getChunks(), modules);\n      console.log(\"------------\",modules,bundles)\n      const assets = webpackIsomorphicTools.assets();\n      const serverData = \"window.__data=\"+serialize(store.getState());\n        console.log('&&&&&&&&&&&&&&&&&&&&&&',{micro_service_name});\n      res.render(template, {css:assets.styles,js:assets.javascript,content,serverData,mode:__DEVELOPMENT__,micro_service_name,...data});\n\n    } catch (mountError) {\n      console.error('MOUNT ERROR:', mountError);\n      res.status(500);\n      render();\n    }\n};"]}