{"version":3,"sources":["../../../src/components/Buyer/Header/Header.js"],"names":["company","CompanyLayer","Header","getTitleForHookAction","props","context","state","mainDomain","title","getMainDomainForLogo","then","JSON","parse","rs","config","buyer","setState","client","ApiClient","get","res","code","data","map","_item","domainType","domain","err","isCompanyId","titleNName","type","typeKey","menuType","titleName","menus","selectKey","horizontal","menu","id","href","target","name","logo","noFirstLevelMenu","String","lineHeight","float","Component"],"mappings":"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","file":"Header.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Badge, Icon, Menu, Dropdown} from 'jdcloudui';\r\nimport {Link} from 'react-router';\r\nimport logo from './style/logo.png';\r\nimport \"./style/templateHader.css\";\r\nimport ApiClient from '../../../apiClient/ApiClient';\r\nimport CompanyLayer from '../../TopTools/CompanyLayer/CompanyLayer';\r\nconst company = new CompanyLayer();\r\n\r\n/* ****  ajax  **** */\r\nimport {connect} from 'react-redux';\r\nimport getTitleForHook, {getTitleForHookAction} from '../get_components_redux';\r\n@connect(state => ({}), {getTitleForHookAction})\r\n\r\nexport default class Header extends Component {\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = {\r\n            mainDomain: '/',\r\n            title: ''\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getMainDomainForLogo();\r\n        this.props.getTitleForHookAction().then(rs => {\r\n            if (JSON.parse(rs[0].config).buyer) {\r\n                this.setState({title: JSON.parse(rs[0].config).buyer})\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    // 获取域名\r\n    getMainDomainForLogo() {\r\n        var client = new ApiClient();\r\n        client.get('/passport/logout')\r\n            .then(\r\n                (res) => {\r\n                    if (res.code == 0 && res.data) {\r\n                        res.data.map(_item => {\r\n                            if (_item.domainType == 1) {\r\n                                let mainDomain = `//${_item.domain}`;\r\n                                this.setState({mainDomain: mainDomain});\r\n                            }\r\n                        });\r\n                    }\r\n                },\r\n                (err) => {\r\n                }\r\n            );\r\n        // client.get('/platform-service/mallInfo/getMallInfo')\r\n        //   .then(\r\n        //     (res) => {\r\n        //       if(res.code == 0 && res.data) {\r\n        //         this.priceUrl = res.data.userLogo;\r\n        //       }\r\n        //     },\r\n        //     (err) => {\r\n        //     }\r\n        //   );\r\n    }\r\n\r\n    //\r\n    render() {\r\n        company.isCompanyId();\r\n        // 优先级3\r\n        let titleNName = this.props.type && this.props.type == 'subaccount' ? '组织架构' : this.state.title;\r\n        // 优先级2\r\n        if (this.props.typeKey && this.props.typeKey == 'companymanage') {\r\n            titleNName = '账号管理'\r\n        }\r\n        // 优先级1\r\n        if (this.props.menuType && this.props.menuType == 'companymanage') {\r\n            titleNName = '公司店铺/财务管理';\r\n        }\r\n        // 优先级0\r\n        if (this.props.titleName) {\r\n            titleNName = this.props.titleName;\r\n        }\r\n        const {menus, selectKey} = this.props;\r\n        const horizontal = menus.map((menu) => {\r\n            return <Menu.Item key={menu.id}><a href={menu.href} target={menu.target}>{menu.name}</a></Menu.Item>;\r\n        });\r\n        return (\r\n            <div className=\"buyer-framework-header\">\r\n                <div className=\"buyer-framework-container\">\r\n                    <ul>\r\n                        <li><a className=\"buyer-framework-logo company-a\" href={this.state.mainDomain}\r\n                               target=\"_blank\">{this.props.logo ? <img src={this.props.logo}/> : ''}</a></li>\r\n                        <li><span className=\"buyer-framework-title\">{titleNName}</span></li>\r\n                    </ul>\r\n                    {\r\n                        (this.props.type && this.props.type == 'subaccount') || (this.props.typeKey && this.props.typeKey == 'companymanage') || (this.props.noFirstLevelMenu) ?\r\n                            ''\r\n                            :\r\n                            <Menu\r\n                                theme=\"light\"\r\n                                mode=\"horizontal\"\r\n                                selectedKeys={[String(selectKey)]}\r\n                                style={{lineHeight: '62px', float: 'right'}}\r\n                            >\r\n                                {horizontal}\r\n                            </Menu>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}"]}