{"version":3,"sources":["../../../../../src/components/Release/BasicIndustryTag/v1.0.0/view/BasicIndustryTag.js"],"names":["BasicIndustryTag","props","handelCheckChange","e","checked","target","value","itemTmplPublishVo","JSON","parse","industryArr","industryLabel","split","push","join","splice","indexOf","updateItemTmplAction","state","checkboxData","cid","getIndustryTagData","cId","type","nextProps","industryTagData","data","checkboxArr","editData","edit","ifValid","newCheckboxArr","filter","item","id","setEditData","console","log","length","flag","map","_item","setState","params","styles","labelWrap","labelTitle","labelCont","index","tagName","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;;;;AAEA;;;;AACA;;;;IAEMA,gB;;;AACF,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA,8JACTA,KADS;;AAAA,cAwDnBC,iBAxDmB,GAwDC,UAACC,CAAD,EAAO;AACvB,gBAAMC,UAAUD,EAAEE,MAAF,CAASD,OAAzB;AACA,gBAAME,QAAQH,EAAEE,MAAF,CAASC,KAAvB;AACA,gBAAMC,oBAAoBC,KAAKC,KAAL,CAAW,yBAAe,MAAKR,KAAL,CAAWM,iBAA1B,CAAX,CAA1B;AACA,gBAAMG,cAAc,MAAKT,KAAL,CAAWM,iBAAX,CAA6BI,aAA7B,GAA6C,MAAKV,KAAL,CAAWM,iBAAX,CAA6BI,aAA7B,CAA2CC,KAA3C,CAAiD,GAAjD,CAA7C,GAAqG,EAAzH;;AAEA,gBAAIR,OAAJ,EAAa;AACTM,4BAAYG,IAAZ,CAAiBP,KAAjB;AACAC,kCAAkBI,aAAlB,GAAkCD,YAAYI,IAAZ,CAAiB,GAAjB,CAAlC;AACH,aAHD,MAGO;AACHJ,4BAAYK,MAAZ,CAAmBL,YAAYM,OAAZ,CAAqBV,QAAQ,EAA7B,CAAnB,EAAsD,CAAtD;AACAC,kCAAkBI,aAAlB,GAAkCD,YAAYI,IAAZ,CAAiB,GAAjB,CAAlC;AACH;AACD,kBAAKb,KAAL,CAAWgB,oBAAX,CAAgCV,iBAAhC;AAEH,SAvEkB;;AAEf,cAAKW,KAAL,GAAa;AACTC,0BAAc;AADL,SAAb;AAGA,cAAKC,GAAL,GAAY,MAAKnB,KAAL,CAAWM,iBAAX,IAAgC,MAAKN,KAAL,CAAWM,iBAAX,CAA6Ba,GAAzE;AALe;AAMlB;;;;4CAEkB;AACf;AACA,gBAAG,KAAKA,GAAR,EAAY;AACR,qBAAKnB,KAAL,CAAWoB,kBAAX,CAA8B,EAACC,KAAK,KAAKF,GAAX,EAA9B,EAA8C,KAAKnB,KAAL,CAAWsB,IAAzD;AACH;AAEJ;;;kDAEyBC,S,EAAU;AAChC,gBAAGA,UAAUjB,iBAAV,CAA4Ba,GAA5B,IAAmCI,UAAUjB,iBAAV,CAA4Ba,GAA5B,IAAkC,KAAKA,GAA7E,EAAiF;AAC7E,qBAAKA,GAAL,GAAWI,UAAUjB,iBAAV,CAA4Ba,GAAvC;AACA,qBAAKnB,KAAL,CAAWoB,kBAAX,CAA8B,EAACC,KAAI,KAAKF,GAAV,EAA9B,EAA6CI,UAAUD,IAAvD;AACH;AACD,gBAAGC,UAAUC,eAAV,IAA6BD,UAAUC,eAAV,CAA0BC,IAAvD,IAA+DF,UAAUC,eAAV,CAA0BC,IAA1B,CAA+BA,IAAjG,EAAsG;AAClG,oBAAIC,cAAc,EAAlB;AACA,oBAAG,CAAC,KAAK1B,KAAL,CAAW2B,QAAX,CAAoBD,WAArB,IAAoC,KAAK1B,KAAL,CAAW4B,IAA/C,IAAuD,KAAK5B,KAAL,CAAW6B,OAArE,EAA8E;AAC1E,wBAAInB,gBAAgBa,UAAUjB,iBAAV,CAA4BI,aAA5B,IAA6C,EAAjE;AACA,wBAAIoB,iBAAiB,EAArB;AACA,wBAAGpB,aAAH,EAAkB;AACdoB,yCAAiBP,UAAUC,eAAV,CAA0BC,IAA1B,CAA+BA,IAA/B,CAAoCM,MAApC,CAA2C;AAAA,mCAAQrB,cAAcK,OAAd,CAAsBiB,KAAKC,EAAL,GAAU,EAAhC,MAAwC,CAAC,CAAjD;AAAA,yBAA3C,CAAjB;AACH;AACD,yBAAKjC,KAAL,CAAWkC,WAAX,CAAuB,aAAvB,EAAsCJ,cAAtC;AACH;AACDK,wBAAQC,GAAR,CAAY,KAAKpC,KAAL,CAAW2B,QAAX,CAAoBD,WAAhC;AACA,oBAAG,KAAK1B,KAAL,CAAW2B,QAAX,CAAoBD,WAApB,IAAmC,KAAK1B,KAAL,CAAW2B,QAAX,CAAoBD,WAApB,CAAgCW,MAAhC,GAAyC,CAA/E,EAAkF;AAC9E,wBAAIC,OAAO,KAAX;AACA,yBAAKtC,KAAL,CAAW2B,QAAX,CAAoBD,WAApB,CAAgCa,GAAhC,CAAoC,gBAAQ;AACxChB,kCAAUC,eAAV,CAA0BC,IAA1B,CAA+BA,IAA/B,CAAoCc,GAApC,CAAwC,iBAAS;AAC7C,gCAAGP,KAAKC,EAAL,IAAWO,MAAMP,EAApB,EAAwB;AACpBK,uCAAO,IAAP;AACH;AACJ,yBAJD;AAKA,4BAAG,CAACA,IAAJ,EAAU;AACNZ,wCAAYd,IAAZ,CAAiBoB,IAAjB;AACH;AACJ,qBATD;AAUAN,6EAAkBH,UAAUC,eAAV,CAA0BC,IAA1B,CAA+BA,IAAjD,oCAA0DC,WAA1D;AACH,iBAbD,MAaO;AACHA,kCAAcH,UAAUC,eAAV,CAA0BC,IAA1B,CAA+BA,IAA7C;AACH;AACD,qBAAKgB,QAAL,CAAc;AACVvB,kCAAcQ;AADJ,iBAAd;AAGH;AAEJ;;;iCAqBQ;AAAA;;AAAA,gBACCR,YADD,GACkB,KAAKD,KADvB,CACCC,YADD;;AAEL,gBAAMwB,SAAS,KAAK1C,KAAL,CAAWM,iBAA1B;AACA,iBAAK2B,EAAL,GAAW,KAAKjC,KAAL,CAAWM,iBAAX,IAAgC,KAAKN,KAAL,CAAWM,iBAAX,CAA6Ba,GAAxE;AACA,mBACI;AAAA;AAAA,kBAAK,WAAWwB,gBAAOC,SAAvB;AACI;AAAA;AAAA,sBAAO,SAAQ,0BAAf,EAAsB,WAAWD,gBAAOE,UAAxC;AAAA;AAAA,iBADJ;AAEI;AAAA;AAAA,sBAAK,WAAWF,gBAAOG,SAAvB;AAEQ5B,iCAAaqB,GAAb,CAAiB,UAACC,KAAD,EAAQO,KAAR,EAAkB;AAC/B,+BACA;AAAA;AAAA,8BAAU,KAAKA,KAAf,EAAsB,OAAOP,MAAMP,EAAnC,EAAuC,UAAU,kBAAC/B,CAAD;AAAA,2CAAO,OAAKD,iBAAL,CAAuBC,CAAvB,CAAP;AAAA,iCAAjD,EAAmF,SAASwC,OAAOhC,aAAP,GAAuBgC,OAAOhC,aAAP,CAAqBK,OAArB,CAA6ByB,MAAMP,EAAN,GAAW,EAAxC,MAAgD,CAAC,CAAxE,GAA4E,KAAxK;AACKO,kCAAMQ;AADX,yBADA;AAKH,qBAND;AAFR;AAFJ,aADJ;AAgBH;;;EA/F0BC,gB,GAT/B;;;;kBA4GelD,gB","file":"BasicIndustryTag.js","sourcesContent":["/**\r\n * @file 发布商品-基础设置- 商品名称\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport { Checkbox ,message} from \"jdcloudui\";\r\nimport styles from \"./style/basic.less\";\r\nimport { getIndustryTagData } from \"./redux/queryData\";\r\n\r\nclass BasicIndustryTag extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checkboxData: []\r\n        };\r\n        this.cid =  this.props.itemTmplPublishVo && this.props.itemTmplPublishVo.cid;\r\n    }\r\n\r\n    componentDidMount(){\r\n        //查询行业标签接口\r\n        if(this.cid){\r\n            this.props.getIndustryTagData({cId: this.cid},this.props.type);\r\n        }\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.itemTmplPublishVo.cid && nextProps.itemTmplPublishVo.cid !=this.cid){\r\n            this.cid = nextProps.itemTmplPublishVo.cid;\r\n            this.props.getIndustryTagData({cId:this.cid},nextProps.type)\r\n        }\r\n        if(nextProps.industryTagData && nextProps.industryTagData.data && nextProps.industryTagData.data.data){\r\n            let checkboxArr = [];\r\n            if(!this.props.editData.checkboxArr && this.props.edit && this.props.ifValid) {\r\n                let industryLabel = nextProps.itemTmplPublishVo.industryLabel || '';\r\n                let newCheckboxArr = [];\r\n                if(industryLabel) {\r\n                    newCheckboxArr = nextProps.industryTagData.data.data.filter(item => industryLabel.indexOf(item.id + '') !== -1);\r\n                }\r\n                this.props.setEditData('checkboxArr', newCheckboxArr);\r\n            }\r\n            console.log(this.props.editData.checkboxArr);\r\n            if(this.props.editData.checkboxArr && this.props.editData.checkboxArr.length > 0) {\r\n                let flag = false;\r\n                this.props.editData.checkboxArr.map(item => {\r\n                    nextProps.industryTagData.data.data.map(_item => {\r\n                        if(item.id == _item.id) {\r\n                            flag = true;\r\n                        }\r\n                    });\r\n                    if(!flag) {\r\n                        checkboxArr.push(item);\r\n                    }\r\n                });\r\n                checkboxArr = [...nextProps.industryTagData.data.data, ...checkboxArr]\r\n            } else {\r\n                checkboxArr = nextProps.industryTagData.data.data;\r\n            }\r\n            this.setState({\r\n                checkboxData: checkboxArr\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n\r\n    handelCheckChange = (e) => {\r\n        const checked = e.target.checked;\r\n        const value = e.target.value;\r\n        const itemTmplPublishVo = JSON.parse(JSON.stringify(this.props.itemTmplPublishVo));\r\n        const industryArr = this.props.itemTmplPublishVo.industryLabel ? this.props.itemTmplPublishVo.industryLabel.split(';') : [];\r\n\r\n        if (checked) {\r\n            industryArr.push(value);\r\n            itemTmplPublishVo.industryLabel = industryArr.join(';');\r\n        } else {\r\n            industryArr.splice(industryArr.indexOf((value + '')), 1);\r\n            itemTmplPublishVo.industryLabel = industryArr.join(';')\r\n        }\r\n        this.props.updateItemTmplAction(itemTmplPublishVo);\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        let { checkboxData } = this.state;\r\n        const params = this.props.itemTmplPublishVo;\r\n        this.id  = this.props.itemTmplPublishVo && this.props.itemTmplPublishVo.cid;\r\n        return(\r\n            <div className={styles.labelWrap}>\r\n                <label htmlFor=\"行业标签\" className={styles.labelTitle}>行业标签：</label>\r\n                <div className={styles.labelCont}>\r\n                    {\r\n                        checkboxData.map((_item, index) => {\r\n                            return (\r\n                            <Checkbox key={index} value={_item.id} onChange={(e) => this.handelCheckChange(e)} checked={params.industryLabel ? params.industryLabel.indexOf(_item.id + '') !== -1 : false}>\r\n                                {_item.tagName}\r\n                            </Checkbox>\r\n                         )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default BasicIndustryTag;\r\n"]}