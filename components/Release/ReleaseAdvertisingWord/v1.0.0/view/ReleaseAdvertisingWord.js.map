{"version":3,"sources":["../../../../../src/components/Release/ReleaseAdvertisingWord/v1.0.0/view/ReleaseAdvertisingWord.js"],"names":["CheckboxGroup","Group","ReleaseAdvertisingWord","props","ad","getAdDataSource","state","validAdUrl","nextProps","setState","adUrl","adColor","adText","styles","labelWrap","labelTitle","labelCont","e","onStateChange","target","value","updateAdDataSource","labelChildWrap","labelChildTitle","labelChildCont","width","errorTips","verticalMiddle","colors","color","length","Component","extendFields","JSON","parse","itemTmplPublishVo","has_adText","has_adUrl","has_adColor","map","item","label","push","field","reg","test","forEach","updateItemTmplAction"],"mappings":"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","file":"ReleaseAdvertisingWord.js","sourcesContent":["/**\r\n * @author chenyanhua\r\n * @date 2018-08-06\r\n * @file 发布商品-广告词\r\n * 包含字体颜色和链接\r\n * 链接做校验\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Checkbox, Row, Col } from 'jdcloudui';\r\nimport { Input, Button } from 'jdcloudui';\r\nimport 'rc-color-picker/assets/index.css';\r\nimport ColorPicker from 'rc-color-picker';\r\nimport styles from \"./style/index.less\";\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\nexport default class ReleaseAdvertisingWord extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const ad = this.getAdDataSource(props);\r\n        this.state = {\r\n            ...ad,\r\n            validAdUrl: true // 广告词链接是否有效\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        const ad = this.getAdDataSource(nextProps);\r\n        this.setState({\r\n            ...ad\r\n        });\r\n    }\r\n    /**\r\n     * 获取广告词相关数据\r\n     */\r\n    getAdDataSource = (props)=>{\r\n        let extendFields = JSON.parse(JSON.stringify(props.itemTmplPublishVo && props.itemTmplPublishVo.extendFields || []));\r\n        let ad = {\r\n            adText: null, // 广告词\r\n            adUrl: null, // 链接\r\n            adColor: null // 颜色\r\n        };\r\n\r\n        // 以免数据中不存在这些字段\r\n        let has_adText = false;\r\n        let has_adUrl = false;\r\n        let has_adColor = false;\r\n        extendFields.map((item)=>{\r\n            if(item.label == 'adText'){\r\n                has_adText = true;\r\n                ad.adText = item.value;\r\n            }\r\n            if(item.label == 'adUrl'){\r\n                has_adUrl = true;\r\n                ad.adUrl = item.value;\r\n            }\r\n            if(item.label == 'adColor'){\r\n                has_adColor = true;\r\n                ad.adColor = item.value;\r\n            }\r\n        });\r\n\r\n        if(!has_adText){\r\n            extendFields.push({ label: 'adText', value: null });\r\n        }\r\n        if(!has_adUrl){\r\n            extendFields.push({ label: 'adUrl', value: null });\r\n        }\r\n        if(!has_adColor){\r\n            extendFields.push({ label: 'adColor', value: null });\r\n        }\r\n        return ad;\r\n    }\r\n    render() {\r\n        const { adUrl, adColor, adText } = this.state;\r\n        return (\r\n            <div className={styles.labelWrap}>\r\n                <label htmlFor=\"广告词\" className={styles.labelTitle}>广告词：</label>\r\n                <div className={styles.labelCont}>\r\n                    <Input\r\n                        size=\"large\"\r\n                        placeholder=\"请输入广告词\"\r\n                        value={adText}\r\n                        onChange={(e) => { this.onStateChange('adText',e.target.value); }}\r\n                        onBlur={(e) => { this.updateAdDataSource('adText', e.target.value); }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className={styles.labelChildWrap}>\r\n                        <label className={styles.labelChildTitle}>链接：</label>\r\n                        <p className={styles.labelChildCont}>\r\n                            <Input\r\n                                size=\"large\"\r\n                                placeholder='(http|https|ftp)://a.b.com'\r\n                                style={{ width: '515px' }}\r\n                                value={adUrl}\r\n                                onChange={(e) => { this.onStateChange('adUrl',e.target.value); }}\r\n                                onBlur={(e) => { this.updateAdDataSource('adUrl', e.target.value); }}\r\n                            />\r\n                        </p>\r\n                        {\r\n                            !this.state.validAdUrl ?\r\n                                <div className={styles.errorTips}>\r\n                                    请输入有效的链接，否则数据不会保存\r\n                                </div> : null\r\n                        }\r\n                    </div>\r\n                    <div className={styles.labelChildWrap}>\r\n                        <label className={styles.labelChildTitle}>颜色：</label>\r\n                        <p className={styles.labelChildCont}>\r\n                            {adColor}\r\n                        </p>\r\n                        <p className={styles.labelChildCont}>\r\n                            <span className={styles.verticalMiddle}>\r\n                                <ColorPicker\r\n                                    enableAlpha={false}\r\n                                    color={adColor}\r\n                                    onClose={(colors)=>{ this.updateAdDataSource('adColor', colors.color); }}\r\n                                    onChange={(colors) => { this.onStateChange('adColor', colors.color); }}\r\n                                />\r\n                            </span>\r\n                        </p>\r\n                        {\r\n                            typeof adColor == 'string' && adColor.length>0?\r\n                            <p className={styles.labelChildCont}>\r\n                                <Button size='small' onClick={()=>{ this.updateAdDataSource('adColor', null); }}>重置</Button>\r\n                            </p>:null\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    /**\r\n     * 更新state\r\n     */\r\n    onStateChange = (field, value) => {\r\n        this.setState({\r\n            [field]: value\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 更新数据源\r\n     */\r\n    updateAdDataSource = (field, value) => {\r\n        const reg = /^(((ht|f)tps?):)?\\/\\/([\\w-]+(\\.[\\w-]+)*\\/?)+(\\?([\\w\\-\\.,@?^=%&:\\/~\\+#]*)+)?$/;;\r\n\r\n        // 如果是广告词链接，则作校验\r\n        if (field == 'adUrl' && value.length > 0 ) {\r\n            if (reg.test(value)) {\r\n                this.setState({\r\n                    validAdUrl: true\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    validAdUrl: false\r\n                });\r\n                return false;\r\n            }\r\n        } else if(field == 'adUrl'){\r\n            this.setState({\r\n                validAdUrl: true\r\n            });\r\n        }\r\n        \r\n        // 更新广告词 extendFields \r\n        let extendFields = JSON.parse(JSON.stringify(this.props.itemTmplPublishVo && this.props.itemTmplPublishVo.extendFields || []));\r\n         \r\n        // 以免数据中不存在这些字段\r\n        let has_adText = false;\r\n        let has_adUrl = false;\r\n        let has_adColor = false;\r\n        extendFields.map((item)=>{\r\n            if(item.label == 'adText'){\r\n                has_adText = true;\r\n            }\r\n            if(item.label == 'adUrl'){\r\n                has_adUrl = true;\r\n            }\r\n            if(item.label == 'adColor'){\r\n                has_adColor = true;\r\n            }\r\n        });\r\n \r\n        if(!has_adText){\r\n            extendFields.push({ label: 'adText', value: null });\r\n        }\r\n        if(!has_adUrl){\r\n            extendFields.push({ label: 'adUrl', value: null });\r\n        }\r\n        if(!has_adColor){\r\n            extendFields.push({ label: 'adColor', value: null });\r\n        }\r\n\r\n        extendFields.forEach((item)=>{\r\n            if(item.label == field){\r\n                item.value = value;\r\n            }\r\n        });\r\n\r\n        let itemTmplPublishVo = JSON.parse(JSON.stringify(this.props.itemTmplPublishVo));\r\n        itemTmplPublishVo.extendFields = extendFields;\r\n        this.props.updateItemTmplAction(itemTmplPublishVo);\r\n    }\r\n}\r\n"]}