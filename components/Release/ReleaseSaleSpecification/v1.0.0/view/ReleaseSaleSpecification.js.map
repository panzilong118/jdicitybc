{"version":3,"sources":["../../../../../src/components/Release/ReleaseSaleSpecification/v1.0.0/view/ReleaseSaleSpecification.js"],"names":["ReleaseSaleSpecification","props","stateData","getInitStateData","db_checked","getDBChecked","state","nextProps","editData","saleData","edit","ifValid","saleAttributeData","length","JSON","parse","map","item","platformCategoryAttributeValues","filter","attrValueArr","checked","push","setEditData","attrbuteData","attributeData","data","specAttributeData","specAttributes","itemTmplPublishVo","itemTmplSkuVoList","flag","attrId","_item","aid","setState","disabledAttrIds","forEach","attrValueItem","columns","title","dataIndex","key","width","render","text","record","ifSave","disabled","indexOf","attrValueId","onChange","attrValueName","Component","componentDidMount","cid","console","log","type","getAttributeByCategoryIdForPlatform","getAttributeByCategoryIdForShop","checkedAttributes","attrId_item","attrValueIds","ds","status","index","baseAttrId","_attrItem","_index","attrItem","baseAttrValueId","getDisabledAttrIds","checkedAttrIds","getCheckedAttrIds","e","value","target","error","checkedAttr","checkboxItem","updateSaleAttributeAction","old_itemTmplSkuVoList","new_itemTmplPublishVo","old_itemSkuPicVo","itemSkuPicVoList","new_itemSkuPicVo","old_preSkuPriceVoList","itemPerfectVo","preSkuPriceVoList","new_preSkuPriceVoList","updateItemTmplAction"],"mappings":"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","file":"ReleaseSaleSpecification.js","sourcesContent":["/**\r\n * @author chenyanhua\r\n * @date 2018-07-26\r\n * @file 销售规格组件\r\n * 逻辑：父组件传递 数据源以及修改数据源的方法\r\n * 当ifSave为false时，表示商品处于发布后状态，那么有数据回显（checked=true）的行可编辑，且必须至少有一个选中项\r\n * 其他行不可编辑\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Table, Checkbox, message } from 'jdcloudui';\r\nimport getNewItemTmplSkuVoList from './getNewDataFun/getNewItemTmplSkuVoList';\r\nimport getNewItemSkuPicVoList from \"./getNewDataFun/getNewItemSkuPicVoList\";\r\nimport getNewPreSkuPriceVoList from \"./getNewDataFun/getNewPreSkuPriceVoList\";\r\n\r\nimport './style/index.css';\r\n\r\nexport default class ReleaseSaleSpecification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const stateData = this.getInitStateData(props);\r\n    const db_checked = this.getDBChecked(props);\r\n    this.state = {\r\n      ...stateData,\r\n      ...db_checked\r\n    };\r\n  }\r\n\r\n  componentDidMount=()=>{\r\n      if(this.props.edit && this.props.ifValid && this.props.itemTmplPublishVo && this.props.itemTmplPublishVo.cid){\r\n          console.log('mytest didmount,has cid');\r\n          if(this.props.type==1){\r\n              this.props.getAttributeByCategoryIdForPlatform(this.props.itemTmplPublishVo.cid);\r\n          }else if (this.props.type==2 || this.props.type==3){\r\n              this.props.getAttributeByCategoryIdForShop(this.props.itemTmplPublishVo.cid);\r\n          }\r\n      }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    const stateData = this.getInitStateData(nextProps);\r\n    const db_checked = this.getDBChecked(nextProps);\r\n\r\n    //编辑时保存回显的销售规格属性\r\n    if(!this.props.editData.saleData && this.props.edit && this.props.ifValid && nextProps.saleAttributeData && nextProps.saleAttributeData.length > 0) {\r\n        let saleData = [];\r\n        let saleAttributeData = JSON.parse(JSON.stringify(nextProps.saleAttributeData || []));\r\n        saleAttributeData.map(item => {\r\n          if(item.platformCategoryAttributeValues) {\r\n            item.platformCategoryAttributeValues = item.platformCategoryAttributeValues.filter(attrValueArr => attrValueArr.checked);\r\n            if(item.platformCategoryAttributeValues.length > 0) {\r\n              saleData.push(item);\r\n            }\r\n          }\r\n        });\r\n        this.props.setEditData('saleData', saleData);\r\n    }\r\n\r\n    //编辑时保存回显的规格参数\r\n    if(!this.props.editData.attrbuteData && this.props.edit && this.props.ifValid && nextProps.attributeData && nextProps.attributeData.data && nextProps.attributeData.data.data) {\r\n        let attrbuteData = [];\r\n        let specAttributeData = JSON.parse(JSON.stringify(nextProps.attributeData.data.data));\r\n        let specAttributes = nextProps.itemTmplPublishVo.itemTmplSkuVoList && nextProps.itemTmplPublishVo.itemTmplSkuVoList[0] && nextProps.itemTmplPublishVo.itemTmplSkuVoList[0].specAttributes || [];\r\n        specAttributeData.map(item => {\r\n            let flag = false;\r\n            specAttributes.map(_item => {\r\n                if(item.attrId == _item.aid) {\r\n                    flag = true;\r\n                }\r\n            });\r\n            if(flag) {\r\n                attrbuteData.push(item);\r\n            }\r\n        });\r\n        this.props.setEditData('attrbuteData', attrbuteData);\r\n    }\r\n    this.setState({\r\n      ...stateData,\r\n      ...db_checked\r\n    });\r\n  }\r\n\r\n  /**\r\n   * 数据库中已选中的数据\r\n   * @return 返回格式 db_checked=['attrId_attrValueId']，\r\n   * 用于在发布回显编辑的时候，已选数据置灰\r\n   */\r\n  getDBChecked = (props) => {\r\n    let { checkedAttributes = [] } = props.itemTmplPublishVo;\r\n\r\n    // 数据库中保存的已选中的数据\r\n    let db_checked = [];\r\n    checkedAttributes.forEach((attrId_item)=>{\r\n      (attrId_item.attrValueIds || []).forEach((attrValueId)=>{\r\n        db_checked.push(`${attrId_item.attrId}_${attrValueId}`);\r\n      });\r\n    });\r\n    return {\r\n      db_checked: db_checked\r\n    };\r\n  }\r\n\r\n  // 设置state值\r\n  getInitStateData = (props) => {\r\n    let ds = props.saleAttributeData || [];\r\n    let saleAttributeData = JSON.parse(JSON.stringify(ds));\r\n    if(this.props.editData.saleData) {\r\n        console.log(this.props.editData.saleData, saleAttributeData);\r\n        this.props.editData.saleData.map(item => {\r\n            let status = false;\r\n            ds.map((_item, index) => {\r\n              if((item.baseAttrId && _item.baseAttrId && item.baseAttrId == _item.baseAttrId) || item.attrId == _item.attrId) {\r\n                  status = true;\r\n                  saleAttributeData[index].attrId = item.attrId;\r\n                  item.platformCategoryAttributeValues.map(attrItem => {\r\n                    let flag = false;\r\n                    _item.platformCategoryAttributeValues.map((_attrItem, _index) => {\r\n                      if((attrItem.baseAttrValueId && _attrItem.baseAttrValueId && attrItem.baseAttrValueId == _attrItem.baseAttrValueId) || attrItem.attrValueId == _attrItem.attrValueId) {\r\n                        flag = true;\r\n                        saleAttributeData[index].platformCategoryAttributeValues[_index].attrValueId = attrItem.attrValueId;\r\n                        if(!saleAttributeData[index].platformCategoryAttributeValues[_index].checked) {\r\n                          saleAttributeData[index].platformCategoryAttributeValues[_index].checked = true;\r\n                        }\r\n                      }\r\n                    });\r\n                    if(!flag) {\r\n                      saleAttributeData[index].platformCategoryAttributeValues.push(attrItem);\r\n                    }\r\n                  });\r\n              }\r\n            });\r\n            if(!status) {\r\n                saleAttributeData.push(item);\r\n            }\r\n        });\r\n    }\r\n    let stateData = {\r\n      ifSave: props.ifSave, // 默认发布前，有\r\n      saleAttributeData: saleAttributeData // 销售规格 数据源\r\n    };\r\n\r\n    // false时，需要设置不可选中项目\r\n    if(!props.ifSave){\r\n      stateData.disabledAttrIds = this.getDisabledAttrIds(saleAttributeData);\r\n    }\r\n\r\n    // 已选的销售规格id\r\n    stateData.checkedAttrIds = this.getCheckedAttrIds(saleAttributeData);\r\n\r\n    return stateData;\r\n  }\r\n  /**\r\n   * 获取已选的attrId\r\n   * 最多只能选择三种属性信息\r\n   */\r\n  getCheckedAttrIds = (saleAttributeData) => {\r\n    let checkedAttrIds = [];\r\n    saleAttributeData.forEach((attrValueArr) => {\r\n      let checked = false;\r\n      attrValueArr.platformCategoryAttributeValues.forEach((attrValueItem) => {\r\n        if(attrValueItem.checked){\r\n          checked = true;\r\n          return;\r\n        }\r\n      });\r\n      if(checked){\r\n        checkedAttrIds.push(attrValueArr.attrId);\r\n      }\r\n    });\r\n    return checkedAttrIds;\r\n  }\r\n\r\n  /**\r\n   * 提供给ifSave为false时使用：需设置不可编辑项目\r\n   * 获取需要设置disabled的attrId数据\r\n   * 剩余的attrId：checked=true时，disabled=true,否则disabld=false\r\n   */\r\n  getDisabledAttrIds(saleAttributeData){\r\n    var disabledAttrIds = [];\r\n    saleAttributeData.forEach((attrValueArr) => {\r\n      let checked = false;\r\n      // 判断是否有checked=true的值\r\n      attrValueArr.platformCategoryAttributeValues.forEach((attrValueItem) => {\r\n        if(attrValueItem.checked){\r\n          checked = true;\r\n          return false;\r\n        }\r\n      });\r\n\r\n      // 该条数据中没有选中的值，则该条数据应该全部 disabled = true\r\n      if(!checked){\r\n        disabledAttrIds.push(attrValueArr.attrId);\r\n      }\r\n    });\r\n\r\n    return disabledAttrIds;\r\n  }\r\n\r\n  /**\r\n   * 将变化的数据保存到数据源里\r\n   * 根据attrId，更新 销售规格 数据源 checked属性\r\n   * 当ifSave = false时，可操作的属性行（有数据回显），必须至少保留一个属性值\r\n   * e.target.value = {\r\n   *  \"attrValueId\":13223,\r\n   *  \"attrId\":10971,\r\n   *  \"attrValueName\":\"R16\",\r\n   *  \"status\":1,\r\n   *  \"checked\": true/false\r\n   * }\r\n   */\r\n  onChange = (e) => {\r\n    // 数据对象\r\n    let value = e.target.value;\r\n    let checked = e.target.checked;\r\n\r\n    let checkedAttrIds = JSON.parse(JSON.stringify(this.state.checkedAttrIds));\r\n\r\n    // 当要选中销售规格属性值时，最多只能选择三种属性信息\r\n    if(checked && checkedAttrIds.indexOf(value.attrId) < 0){\r\n      if(checkedAttrIds.length>=3){\r\n        message.error(\"只能选择三种属性信息\");\r\n        return;\r\n      } else {\r\n        checkedAttrIds.push(value.attrId);\r\n        this.setState({\r\n          checkedAttrIds: checkedAttrIds\r\n        });\r\n      }\r\n    }\r\n\r\n    let saleAttributeData = JSON.parse(JSON.stringify(this.state.saleAttributeData));\r\n\r\n    saleAttributeData.forEach((item) => {\r\n      if(item.attrId == value.attrId){ // 操作的哪行属性\r\n\r\n        // ifSave为false时，可操作的属性行，最少保留一个属性\r\n        if(!this.state.ifSave && !checked){\r\n          let checkedAttr = item.platformCategoryAttributeValues.filter((checkboxItem) => {\r\n            return checkboxItem.checked == true;\r\n          });\r\n          if(checkedAttr.length <= 1){\r\n            message.error(\"至少要保留一种属性信息\");\r\n            return;\r\n          }\r\n        }\r\n\r\n        item.platformCategoryAttributeValues.forEach((checkboxItem) => {\r\n          if(checkboxItem.attrValueId == value.attrValueId) {\r\n            checkboxItem.checked = checked;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    // 更新销售规格数据\r\n    this.props.updateSaleAttributeAction(saleAttributeData);\r\n\r\n    let itemTmplPublishVo = JSON.parse(JSON.stringify(this.props.itemTmplPublishVo));\r\n    let old_itemTmplSkuVoList = JSON.parse(JSON.stringify(itemTmplPublishVo.itemTmplSkuVoList));\r\n\r\n    // 新的销售信息表格数据\r\n\r\n    const new_itemTmplPublishVo = getNewItemTmplSkuVoList(old_itemTmplSkuVoList, saleAttributeData);\r\n    itemTmplPublishVo.itemTmplSkuVoList = new_itemTmplPublishVo;\r\n\r\n    //更新图片数据\r\n    const old_itemSkuPicVo = this.props.itemTmplPublishVo.itemSkuPicVoList;\r\n    // 新的图片数据\r\n    const new_itemSkuPicVo = getNewItemSkuPicVoList(old_itemSkuPicVo, saleAttributeData);\r\n    itemTmplPublishVo.itemSkuPicVoList = new_itemSkuPicVo;\r\n\r\n    // 店铺和供应商才有第六个tab\r\n    if(this.props.type=='2' || this.props.type=='3'){\r\n      //更新供货信息或者价格及库存数据\r\n      const old_preSkuPriceVoList = this.props.itemTmplPublishVo.itemPerfectVo.preSkuPriceVoList;\r\n      // 新的供货信息或者价格及库存数据\r\n      const new_preSkuPriceVoList = getNewPreSkuPriceVoList(old_preSkuPriceVoList, saleAttributeData);\r\n      itemTmplPublishVo.itemPerfectVo.preSkuPriceVoList = new_preSkuPriceVoList;\r\n    }\r\n\r\n    // 更新总数据源\r\n    this.props.updateItemTmplAction(itemTmplPublishVo);\r\n  }\r\n\r\n  render() {\r\n\r\n    const columns = [{\r\n      title: '属性名称',\r\n      dataIndex: 'attrName',\r\n      key: 'attrName',\r\n      width: 200\r\n    },{\r\n      title: '属性值',\r\n      key: 'attrValue',\r\n      render: (text, record) => (\r\n        record.platformCategoryAttributeValues.map((item)=>{\r\n          const { disabledAttrIds = [], ifSave = true } = this.state;\r\n          let disabled = false;\r\n          if(!ifSave){\r\n            if(disabledAttrIds.indexOf(record.attrId) >=0){\r\n              disabled=true;\r\n            } else if(this.state.db_checked.indexOf(`${record.attrId}_${item.attrValueId}`)>=0){\r\n              disabled=true;\r\n            }\r\n          }\r\n          return (\r\n            <Checkbox value={item} onChange={this.onChange} checked={item.checked} disabled={disabled}>\r\n              {item.attrValueName}\r\n            </Checkbox>\r\n          )\r\n        })\r\n      ),\r\n    }];\r\n    return (\r\n      [\r\n        <h3 className = 'h3-title'>销售规格</h3>,\r\n        <div className = 'table-bordered'>\r\n          <Table\r\n            columns = {columns}\r\n            dataSource = {this.state.saleAttributeData}\r\n            pagination = {false}\r\n          />\r\n        </div>\r\n      ]\r\n    );\r\n  }\r\n}\r\n"]}