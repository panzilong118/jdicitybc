{"version":3,"sources":["../../../../../../src/components/Release/ReleaseSaleSpecification/v1.0.0/view/getNewDataFun/getNewItemTmplSkuVoList.js"],"names":["getNewItemTmplSkuVoList","itemTmplSkuVoList","saleAttributeData","combinedSaleAttributeData","getCombinedDataFromChecked","skuAttributesData","forEach","item","push","attributes","combineStrArr","changeToStrArray","skuStrArr","newItemTmplSkuVoList","index","skuStrArr_index","indexOf","specAttrData","JSON","parse","specAttributes","map","aid","vid","length","two_array","attrItem","array","platformCategoryAttributeValues","attrValueItem","checked","checkedItem","attrId","aName","attrName","attrValueId","vName","attrValueName","doExchange","strArr","itemArr","arr","itemObj","sort","toString","doubleArrays","len","results","indexs","specialSort","start","Array","temp","i"],"mappings":"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","file":"getNewItemTmplSkuVoList.js","sourcesContent":["\r\n/**\r\n * 遍历已选的销售规格数据saleAttributeData，重新组合itemTmplSkuVoList数据\r\n * 对比saleAttributeData与itemTmplPublishVo.itemTmplSkuVoList\r\n * 已有的保留，没有的删除，新增的添加\r\n * 超出column列的数据不展示，少于column列的数据默认为空\r\n * @param itemTmplSkuVoList ： 已有sku表格列表\r\n * @param saleAttributeData :  销售规格数据源\r\n * @return 新的销售信息表格数据源\r\n */\r\nfunction getNewItemTmplSkuVoList(itemTmplSkuVoList, saleAttributeData) {\r\n    let combinedSaleAttributeData = getCombinedDataFromChecked(saleAttributeData); // 组合当前已选销售规格数据\r\n    // 遍历旧sku数据，得到其attributes\r\n    let skuAttributesData = [];\r\n    itemTmplSkuVoList.forEach((item) => {\r\n        skuAttributesData.push(item.attributes || []);\r\n    });\r\n\r\n    let combineStrArr = changeToStrArray(combinedSaleAttributeData); // 已选规格数据 转换为 字符串数组\r\n    let skuStrArr = changeToStrArray(skuAttributesData); // 已有sku列表数据 转换为 字符串数组\r\n    \r\n    let newItemTmplSkuVoList = []; // 对比后数据\r\n\r\n    combineStrArr.forEach((item, index) => {\r\n        let skuStrArr_index = skuStrArr.indexOf(item);\r\n        if (skuStrArr_index >= 0) { // sku列表里数据已存在\r\n            newItemTmplSkuVoList.push({\r\n                ...itemTmplSkuVoList[skuStrArr_index],\r\n                \"key\": index\r\n            });\r\n        } else { // 新增数据\r\n            // 规格参数 \r\n            let specAttrData = JSON.parse(JSON.stringify(combinedSaleAttributeData[index]));\r\n            let specAttributes = (specAttrData || []).map((item)=>{\r\n                return {\r\n                    \"aid\": item.aid,\r\n                    \"vid\": item.vid,\r\n                    \"desc\": ''\r\n                }\r\n            });\r\n            newItemTmplSkuVoList.push({\r\n                \"weightUnit\": 'g',\r\n                \"specAttributes\": specAttributes,\r\n                \"attributes\": combinedSaleAttributeData[index],\r\n                \"skuStatus\": 1,\r\n                \"key\": index\r\n            });\r\n        }\r\n    });\r\n\r\n    // 添加默认数据\r\n    if(newItemTmplSkuVoList.length<=0){\r\n        newItemTmplSkuVoList.push({\r\n            \"weightUnit\": 'g',\r\n            \"specAttributes\": null,\r\n            \"attributes\": null,\r\n            \"skuStatus\": 1,\r\n            \"key\": 0\r\n        });\r\n    }\r\n    return newItemTmplSkuVoList;\r\n}\r\n\r\n/**\r\n * 组合选中的销售规格数据\r\n * 销售规格最多只允许选择三种\r\n * @return  = \r\n * [[\r\n *  {\"aName\":\"颜值\",\"aid\":\"175041\",\"desc\":\"\",\"vName\":\"101\",\"vid\":\"330661\"},\r\n *  {\"aName\":\"大小\",\"aid\":\"175041\",\"desc\":\"\",\"vName\":\"101\",\"vid\":\"330661\"}\r\n * ],[\r\n *  {\"aName\":\"颜值\",\"aid\":\"175042\",\"desc\":\"\",\"vName\":\"102\",\"vid\":\"330662\"},\r\n *  {\"aName\":\"大小\",\"aid\":\"175042\",\"desc\":\"\",\"vName\":\"102\",\"vid\":\"330662\"}\r\n * ]]\r\n */\r\nfunction getCombinedDataFromChecked(saleAttributeData) {\r\n    let two_array = [];\r\n\r\n    // 每一种销售规格数据checked的数据组合成一个数组\r\n    saleAttributeData.forEach((attrItem) => {\r\n        let array = [];\r\n        attrItem.platformCategoryAttributeValues.forEach((attrValueItem) => {\r\n            if (attrValueItem.checked) {\r\n                const checkedItem = {\r\n                    aid: attrItem.attrId,\r\n                    aName: attrItem.attrName,\r\n                    vid: attrValueItem.attrValueId,\r\n                    vName: attrValueItem.attrValueName\r\n                }\r\n                array.push(checkedItem);\r\n            }\r\n        });\r\n        if (array.length > 0) {\r\n            two_array.push(array);\r\n        }\r\n    });\r\n    // two_array 二维数组，销售规格最多只允许选择三种，因此 length <= 3\r\n    // two_array = [[{\"aName\":\"颜值\",\"aid\":\"1\",\"desc\":\"\",\"vName\":\"11\",\"vid\":\"11\"},{\"aName\":\"颜值\",\"aid\":\"1\",\"desc\":\"\",\"vName\":\"12\",\"vid\":\"12\"}], [{\"aName\":\"大小\",\"aid\":\"2\",\"desc\":\"\",\"vName\":\"21\",\"vid\":\"22\"}]]\r\n    // two_array = [[{销售规格1+属性值对象}], [销售规格2数组], [销售规格3数组]]\r\n    return doExchange(two_array);\r\n}\r\n/**\r\n * 转换对象二维数组为字符串一维数组\r\n * [[{aid:**, aName:**, vid:**,vName:**},{}],[{},{}]] => ['aid_vid,aid1_vid1','aid2_vid2'];\r\n */\r\nfunction changeToStrArray(array) {\r\n    let strArr = [];\r\n    array.forEach((itemArr) => {\r\n        let arr = [];\r\n        itemArr.forEach((itemObj) => {\r\n            arr.push(`${itemObj.aid}_${itemObj.vid}`);\r\n        });\r\n        strArr.push(arr.sort().toString());\r\n    });\r\n    return strArr;\r\n}\r\n\r\n// 二维数组的排列组合\r\nfunction doExchange(doubleArrays) {\r\n    var array = doubleArrays;\r\n    var len = array.length;\r\n    var results = [];\r\n    var indexs = {};\r\n    function specialSort(start) {\r\n        start++;\r\n        if (start > len - 1) {\r\n            return;\r\n        }\r\n        if (!indexs[start]) {\r\n            indexs[start] = 0;\r\n        }\r\n        if (!(array[start] instanceof Array)) {\r\n            array[start] = [array[start]];\r\n        }\r\n        for (indexs[start] = 0; indexs[start] < array[start].length; indexs[start]++) {\r\n            specialSort(start);\r\n            if (start == len - 1) {\r\n                var temp = [];\r\n                for (var i = len - 1; i >= 0; i--) {\r\n                    if (!(array[start - i] instanceof Array)) {\r\n                        array[start - i] = [array[start - i]];\r\n                    }\r\n                    temp.push(array[start - i][indexs[start - i]]);\r\n                }\r\n                results.push(temp);\r\n            }\r\n        }\r\n    }\r\n\r\n    specialSort(-1);\r\n    return results;\r\n}\r\n\r\nexport default getNewItemTmplSkuVoList;"]}