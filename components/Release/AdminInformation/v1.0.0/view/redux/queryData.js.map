{"version":3,"sources":["../../../../../../src/components/Release/AdminInformation/v1.0.0/view/redux/queryData.js"],"names":["state","action","type","QUERY_LEFT_ATTR_LOADING","QUERY_LEFT_ATTR_SUCCESS","dataA","result","QUERY_LEFT_ATTR_FAIL","error","msg","QUERY_LEFT_ATTR_LIST_SUCCESS","dataB","QUERY_LEFT_ATTR_LIST_FAIL","queryLoginInfo","queryAllAdminUser","values","url","types","promise","client","get","params"],"mappings":";;;;;;;;;;kBAQe,YAAmC;AAAA,QAAzBA,KAAyB,uEAAjB,EAAiB;AAAA,QAAbC,MAAa,uEAAJ,EAAI;;AAC9C,YAAQA,OAAOC,IAAf;AACI,aAAKC,uBAAL;AACI,8CACOH,KADP;AAGJ,aAAKI,uBAAL;AACI,8CACOJ,KADP;AAEIK,uBAAOJ,OAAOK;AAFlB;AAIJ,aAAKC,oBAAL;AACI,8CACOP,KADP;AAEIQ,uBAAOP,OAAOQ;AAFlB;AAIJ,aAAKC,4BAAL;AACI,8CACOV,KADP;AAEIW,uBAAOV,OAAOK;AAFlB;AAIJ,aAAKM,yBAAL;AACI,8CACOZ,KADP;AAEIQ,uBAAOP,OAAOQ;AAFlB;AAIJ;AACI,mBAAOT,KAAP;AA1BR;AA4BH,C;;QAEea,c,GAAAA,c;QAcAC,iB,GAAAA,iB;;;;AApDhB,IAAMX,0BAA0B,yBAAhC;AACA,IAAMI,uBAAuB,sBAA7B;AACA,IAAMH,0BAA0B,yBAAhC;;AAEA,IAAMM,+BAA+B,8BAArC;AACA,IAAME,4BAA4B,2BAAlC;;AAiCO,SAASC,cAAT,CAAwBE,MAAxB,EAA+Bb,IAA/B,EAAqC;;AAExC;AACA,QAAIc,MAAM,uCAAV;AACA;AACA,QAAId,QAAQ,GAAZ,EAAgB;AACZc,cAAM,kDAAN;AACH;AACD,WAAO;AACHC,eAAO,CAACd,uBAAD,EAA0BC,uBAA1B,EAAmDG,oBAAnD,CADJ;AAEHW,iBAAS,iBAACC,MAAD;AAAA,mBAAYA,OAAOC,GAAP,CAAWJ,GAAX,EAAgB,EAACK,QAAQN,MAAT,EAAhB,CAAZ;AAAA;AAFN,KAAP;AAIH;;AAEM,SAASD,iBAAT,CAA2BC,MAA3B,EAAmC;AACtC,WAAO;AACHE,eAAO,CAACd,uBAAD,EAA0BO,4BAA1B,EAAwDE,yBAAxD,CADJ;AAEHM,iBAAS,iBAACC,MAAD;AAAA,mBAAYA,OAAOC,GAAP,CAAW,2CAAX,EAAwD,EAACC,QAAQN,MAAT,EAAxD,CAAZ;AAAA;AAFN,KAAP;AAIH","file":"queryData.js","sourcesContent":["\r\nconst QUERY_LEFT_ATTR_LOADING = 'QUERY_LEFT_ATTR_LOADING';\r\nconst QUERY_LEFT_ATTR_FAIL = 'QUERY_LEFT_ATTR_FAIL';\r\nconst QUERY_LEFT_ATTR_SUCCESS = 'QUERY_LEFT_ATTR_SUCCESS';\r\n\r\nconst QUERY_LEFT_ATTR_LIST_SUCCESS = 'QUERY_LEFT_ATTR_LIST_SUCCESS';\r\nconst QUERY_LEFT_ATTR_LIST_FAIL = 'QUERY_LEFT_ATTR_LIST_FAIL';\r\n\r\nexport default function (state = {}, action = {}) {\r\n    switch (action.type) {\r\n        case QUERY_LEFT_ATTR_LOADING:\r\n            return {\r\n                ...state,\r\n            };\r\n        case QUERY_LEFT_ATTR_SUCCESS:\r\n            return {\r\n                ...state,\r\n                dataA: action.result\r\n            };\r\n        case QUERY_LEFT_ATTR_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.msg\r\n            };\r\n        case QUERY_LEFT_ATTR_LIST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                dataB: action.result\r\n            };\r\n        case QUERY_LEFT_ATTR_LIST_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.msg\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport function queryLoginInfo(values,type) {\r\n\r\n    // shop\r\n    let url = \"/passport/mall/account/queryLoginInfo\";\r\n    // Platform\r\n    if( type == '1'){\r\n        url = \"/platform-passport/platform/Login/queryLoginInfo\";\r\n    }\r\n    return {\r\n        types: [QUERY_LEFT_ATTR_LOADING, QUERY_LEFT_ATTR_SUCCESS, QUERY_LEFT_ATTR_FAIL],\r\n        promise: (client) => client.get(url, {params: values})\r\n    };\r\n}\r\n\r\nexport function queryAllAdminUser(values) {\r\n    return {\r\n        types: [QUERY_LEFT_ATTR_LOADING, QUERY_LEFT_ATTR_LIST_SUCCESS, QUERY_LEFT_ATTR_LIST_FAIL],\r\n        promise: (client) => client.get('/platform-passport/user/queryAllAdminUser', {params: values})\r\n    };\r\n}\r\n"]}