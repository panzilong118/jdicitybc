{"version":3,"sources":["../../../../../../src/components/Release/BasicBrand/v1.0.0/view/redux/queryData.js"],"names":["state","action","type","QUERY_BASE_BRAND_LOADING","QUERY_BASE_BRAND_SUCCESS","data","result","QUERY_BASE_BRAND_FAIL","error","msg","getShopBrandData","values","url","types","promise","client","get","params"],"mappings":";;;;;;;;;;kBAKe,YAAmC;AAAA,QAAzBA,KAAyB,uEAAjB,EAAiB;AAAA,QAAbC,MAAa,uEAAJ,EAAI;;AAC9C,YAAQA,OAAOC,IAAf;AACI,aAAKC,wBAAL;AACI,8CACOH,KADP;AAGJ,aAAKI,wBAAL;AACI,8CACOJ,KADP;AAEIK,sBAAMJ,OAAOK;AAFjB;AAIJ,aAAKC,qBAAL;AACI,8CACOP,KADP;AAEIQ,uBAAOP,OAAOQ;AAFlB;AAIJ;AACI,mBAAOT,KAAP;AAhBR;AAkBH,C;;QAIeU,gB,GAAAA,gB;;;;AA5BhB,IAAMP,2BAA2B,0BAAjC;AACA,IAAMC,2BAA2B,0BAAjC;AACA,IAAMG,wBAAwB,uBAA9B;;AAyBA;AACO,SAASG,gBAAT,CAA0BC,MAA1B,EAAiCT,IAAjC,EAAuC;AAC1C;AACA,QAAIU,MAAM,0DAAV;AACA;AACA,QAAIV,QAAQ,GAAZ,EAAgB;AACZU,cAAM,qDAAN;AACH;AACD,WAAO;AACHC,eAAO,CAACV,wBAAD,EAA2BC,wBAA3B,EAAqDG,qBAArD,CADJ;AAEHO,iBAAS,iBAACC,MAAD;AAAA,mBAAYA,OAAOC,GAAP,CAAWJ,GAAX,EAAgB,EAACK,QAAQN,MAAT,EAAhB,CAAZ;AAAA;AAFN,KAAP;AAIH","file":"queryData.js","sourcesContent":["const QUERY_BASE_BRAND_LOADING = 'QUERY_BASE_BRAND_LOADING';\r\nconst QUERY_BASE_BRAND_SUCCESS = 'QUERY_BASE_BRAND_SUCCESS';\r\nconst QUERY_BASE_BRAND_FAIL = 'QUERY_BASE_BRAND_FAIL';\r\n\r\n\r\nexport default function (state = {}, action = {}) {\r\n    switch (action.type) {\r\n        case QUERY_BASE_BRAND_LOADING:\r\n            return {\r\n                ...state,\r\n            };\r\n        case QUERY_BASE_BRAND_SUCCESS:\r\n            return {\r\n                ...state,\r\n                data: action.result\r\n            };\r\n        case QUERY_BASE_BRAND_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.msg\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n//店铺    添加时查询品牌\r\nexport function getShopBrandData(values,type) {\r\n    // shop\r\n    let url = '/shop-service/seller/shopBrand/getAuditBrandByCategoryId';\r\n    // Platform\r\n    if( type == '1'){\r\n        url = '/item/platform/brandController/getBrandByCategoryId';\r\n    }\r\n    return {\r\n        types: [QUERY_BASE_BRAND_LOADING, QUERY_BASE_BRAND_SUCCESS, QUERY_BASE_BRAND_FAIL],\r\n        promise: (client) => client.get(url, {params: values})\r\n    };\r\n}\r\n\r\n\r\n"]}