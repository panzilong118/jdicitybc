{"version":3,"sources":["../../../../../src/components/Release/BasicBrand/v1.0.0/view/BasicBrand.js"],"names":["Option","BasicBrand","props","handelChange","e","key","itemTmplPublishVo","JSON","parse","value","target","reg","test","setState","ifBrandNameCh","brandNameCh","ifBrandNameEn","brandNameEn","brandId","updateItemTmplAction","handelSelectChange","flag","undefined","state","brandArr","cid","params","categoryId","getShopBrandData","type","nextProps","brandData","data","editData","brand","edit","ifValid","id","setEditData","map","item","setPlaceholder","placeholder","onChange","length","result","index","num","styles","labelWrap","labelTitle","labelCont","width","marginTop","marginRight","brandcn","branden","Component"],"mappings":"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","file":"BasicBrand.js","sourcesContent":["/**\r\n * @file 发布商品-基础设置- 商品名称\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport { Input,Select,message } from \"jdcloudui\";\r\nOption = Select.Option;\r\nimport styles from \"./style/basic.less\";\r\nimport { getShopBrandData } from \"./redux/queryData\";\r\nimport brandData from \"./redux/queryData\";\r\n\r\nclass BasicBrand extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            brandArr: [],\r\n            flag: false,\r\n            ifBrandNameCh: true, //中文品牌名称符合校验规则\r\n            ifBrandNameEn: true, //英文品牌名称符合校验规则\r\n        };\r\n        this.cid =  this.props.itemTmplPublishVo && this.props.itemTmplPublishVo.cid;\r\n    }\r\n    componentDidMount(){\r\n        if(this.cid){\r\n            let params = {\r\n                categoryId: this.cid\r\n            };\r\n            // if(this.props.type == 1) {\r\n            //     params.itemId = this.props.itemTmplPublishVo && this.props.itemTmplPublishVo.id || null;\r\n            // }\r\n            this.props.getShopBrandData(params,this.props.type);\r\n        }\r\n        // const params = this.props.itemTmplPublishVo;\r\n        // if(!params.brandId && params.brandNameEn && params.brandNameCh){\r\n        //     this.setState({\r\n        //         flag:true,\r\n        //         brandNameEn:params.brandNameEn,\r\n        //         brandNameCh:params.brandNameCh\r\n        //     })\r\n        // }\r\n    }\r\n\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.itemTmplPublishVo.cid && nextProps.itemTmplPublishVo.cid !=this.cid){\r\n            this.cid = nextProps.itemTmplPublishVo.cid;\r\n            nextProps.getShopBrandData({categoryId: this.cid},nextProps.type)\r\n        }\r\n\r\n        if(nextProps.brandData && nextProps.brandData.data && nextProps.brandData.data.data){\r\n            let brandArr = nextProps.brandData.data.data;\r\n            if(!this.props.editData.brand && this.props.edit && this.props.ifValid) {\r\n                let brand = {\r\n                    id: nextProps.itemTmplPublishVo.brandId || null,\r\n                    brandNameCh: nextProps.itemTmplPublishVo.brandNameCh || null,\r\n                    brandNameEn: nextProps.itemTmplPublishVo.brandNameEn || null,\r\n                };\r\n                //nextProps.brandData.data.data.filter(item => item.id == nextProps.itemTmplPublishVo.brandId)[0] || null;\r\n                this.props.setEditData('brand', brand);\r\n            }\r\n\r\n            if(this.props.editData.brand) {\r\n                let flag = false;\r\n                nextProps.brandData.data.data.map(item => {\r\n                    if(this.props.editData.brand.id == item.id) {\r\n                        flag = true;\r\n                    }\r\n                });\r\n                if(!flag) {\r\n                    brandArr = [...nextProps.brandData.data.data, this.props.editData.brand];\r\n                }\r\n            }\r\n            this.setState({\r\n                brandArr\r\n            });\r\n        }\r\n\r\n    }\r\n    //保存用户操作数据\r\n    handelChange = (e, key) => {\r\n        const itemTmplPublishVo = JSON.parse(JSON.stringify(this.props.itemTmplPublishVo));\r\n        let value = e.target.value;\r\n        if(key ==\"brandNameCh\" ){\r\n            let reg = /^[\\u4e00-\\u9fa5]+$/\r\n            if(value && !reg.test(value[0])){\r\n                this.setState({\r\n                    ifBrandNameCh : false\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    ifBrandNameCh : true\r\n                })\r\n                itemTmplPublishVo.brandNameCh = value;\r\n            }\r\n        }else if( key == \"brandNameEn\" ){\r\n            let reg = /^[^\\u4e00-\\u9fa5]+$/;\r\n            if(value && !reg.test(value)){\r\n                this.setState({\r\n                    ifBrandNameEn : false\r\n                })\r\n            } else {\r\n                this.setState({\r\n                    ifBrandNameEn : true\r\n                })\r\n                itemTmplPublishVo.brandNameEn = value;\r\n            }\r\n        }\r\n        itemTmplPublishVo.brandId = -1;\r\n        this.props.updateItemTmplAction(itemTmplPublishVo);\r\n    };\r\n    //用户操作更改数据\r\n    handelSelectChange = (key, value) => {\r\n        if(value == 'a999') {\r\n            this.setState({\r\n                flag: true\r\n            })\r\n        } else {\r\n            if(value == undefined){\r\n                value = null\r\n            }\r\n            this.setState({\r\n                flag: false\r\n            });\r\n            const itemTmplPublishVo = JSON.parse(JSON.stringify(this.props.itemTmplPublishVo));\r\n            itemTmplPublishVo.brandId = value;\r\n            this.props.updateItemTmplAction(itemTmplPublishVo);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let { flag, brandArr } = this.state;\r\n        const params = this.props.itemTmplPublishVo;\r\n        let setPlaceholder = {\r\n            placeholder: '请选择',\r\n            onChange: (value) => this.handelSelectChange('brandId', value)\r\n        };\r\n        if(params.brandId) {\r\n            brandArr.length>0 && brandArr.map((result,index)=>{\r\n                if(result.id == params.brandId ){\r\n                    setPlaceholder.value = result.id;\r\n                }\r\n            })\r\n        } else if(flag) {\r\n            setPlaceholder.value = 'a999';\r\n        } else {\r\n            this.num ++;\r\n            setPlaceholder.value = null;\r\n        }\r\n\r\n        return (\r\n            <div className={styles.labelWrap}>\r\n                <label htmlFor=\"品牌\" className={styles.labelTitle}>品牌：</label>\r\n                <div className={styles.labelCont}>\r\n                    <Select size=\"large\" className=\"\" key={this.num} {...setPlaceholder} style={{width:'100%'}} allowClear = {true}>\r\n                        {\r\n                            brandArr.map((item, index) => <Option key={index} value={item.id}>{item.brandNameCh ? item.brandNameCh : item.brandNameEn}</Option>)\r\n                        }\r\n                        <Option key={'a999'} value='a999'>其他</Option>\r\n                    </Select>\r\n                    {\r\n                        flag ?\r\n                            <div style={{marginTop: \"15px\"}}>\r\n                                <label>中文名称：</label>\r\n                                <Input placeholder=\"输入品牌中文名称\" size='large' onBlur={(e) => this.handelChange(e, 'brandNameCh')} style={{width: '120px', marginRight: '20px'}}/>\r\n                                <label>英文名称：</label>\r\n                                <Input placeholder=\"输入品牌英文名称\" size='large' onBlur={(e) => this.handelChange(e, 'brandNameEn')} style={{width: '120px'}}/>\r\n                            </div>\r\n                            : null\r\n                    }\r\n                    {\r\n                        flag && (!this.state.ifBrandNameCh || !this.state.ifBrandNameEn) ?\r\n                            <div className={styles.brand}>\r\n                                {!this.state.ifBrandNameCh?<span className={styles.brandcn} >请输入中文品牌,否则不会保存</span>:null}\r\n                                {!this.state.ifBrandNameEn?<span className={styles.branden} >请输入英文品牌，否则不会保存</span>:null}\r\n                            </div>\r\n                            :null\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default BasicBrand;\r\n"]}