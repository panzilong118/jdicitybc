{"version":3,"sources":["../../../../../../src/components/Release/ReleaseSaleInfo/v1.0.0/config/Container/ExtendFieldsFormItem.js"],"names":["Option","ExtendFieldsFormItem","props","default","label","labelName","type","extendColumnFields","JSON","parse","getFieldValue","state","nextProps","setState","length","styles","mb","map","item","index","spanTitle","inputWrap","e","onFieldChange","target","value","width","iconFont","handleMinus","ml","handlePlus","Component","push","onFormSetFieldsValue","splice","field","changedValue","setFieldsValue"],"mappings":"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","file":"ExtendFieldsFormItem.js","sourcesContent":["/**\r\n * @author chenyanhua\r\n * @file form自定义表单: 扩展销售信息自定义列 \r\n * @date 2018-08-03\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Button, Input, Select, Icon } from 'jdcloudui';\r\nconst Option = Select.Option;\r\nimport styles from './index.less';\r\nexport default class ExtendFieldsFormItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.default = {\r\n            label: '',\r\n            labelName: '',\r\n            type: 'input'\r\n        };\r\n        const extendColumnFields = JSON.parse(JSON.stringify(props.getFieldValue(\"extendColumnFields\") || []));\r\n        this.state = {\r\n            extendColumnFields: extendColumnFields\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        const extendColumnFields = JSON.parse(JSON.stringify(nextProps.getFieldValue(\"extendColumnFields\") || []));\r\n        this.setState({\r\n            extendColumnFields: extendColumnFields\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { extendColumnFields = [] } = this.state;\r\n        const length = extendColumnFields.length;\r\n        return (\r\n            <div className={styles.mb}>\r\n                {\r\n                    extendColumnFields.map((item, index) => {\r\n                        return (\r\n                            <div key={index}>\r\n                                <span className={styles.spanTitle}>\r\n                                    列字段:\r\n                                </span>\r\n                                <div className={styles.inputWrap}>\r\n                                    <Input \r\n                                        type='text' \r\n                                        value={item.label} \r\n                                        onChange={(e)=>{ this.onFieldChange('label', e.target.value, index); }} \r\n                                    />\r\n                                </div>\r\n                                <span className={styles.spanTitle}>\r\n                                    列名称:\r\n                                </span>\r\n                                <div className={styles.inputWrap}>\r\n                                    <Input \r\n                                        type='text' \r\n                                        value={item.labelName} \r\n                                        onChange={(e)=>{ this.onFieldChange('labelName', e.target.value, index); }} \r\n                                    />\r\n                                </div>\r\n                                <span className={styles.spanTitle}>\r\n                                    列类型:\r\n                                </span>\r\n                                <Select \r\n                                    value={item.type} \r\n                                    style={{width: 80}}\r\n                                    onChange={ (value) => { this.onFieldChange('type', value, index); } }\r\n                                >\r\n                                    <Option value='input'>文本</Option>\r\n                                    <Option value='image'>图片</Option>\r\n                                    <Option value='file'>文件</Option>\r\n                                </Select>\r\n                                <Button className={styles.iconFont} onClick={()=>{ this.handleMinus(index); }} >\r\n                                    <Icon type=\"minus\" />\r\n                                </Button>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n                <div className={length>0?styles.ml:\"\"}>\r\n                    <Button className={styles.iconFont} onClick={this.handlePlus} >\r\n                        <Icon type=\"plus\" />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    /**\r\n     * 添加新列\r\n     */\r\n    handlePlus = () => {\r\n        const extendColumnFields = JSON.parse(JSON.stringify(this.state.extendColumnFields || []));\r\n        extendColumnFields.push(this.default);\r\n        this.onFormSetFieldsValue(extendColumnFields);\r\n    }\r\n    /**\r\n     * 减去列\r\n     */\r\n    handleMinus = (index) => {\r\n        const extendColumnFields = JSON.parse(JSON.stringify(this.state.extendColumnFields || []));\r\n        extendColumnFields.splice(index, 1);\r\n        this.onFormSetFieldsValue(extendColumnFields);\r\n    }\r\n\r\n    /**\r\n     * 变化字段值\r\n     */ \r\n    onFieldChange = (field, value, index) => {\r\n        const extendColumnFields = JSON.parse(JSON.stringify(this.state.extendColumnFields || []));\r\n        extendColumnFields[index][field] = value;\r\n        this.setState({\r\n            extendColumnFields: extendColumnFields\r\n        });\r\n        this.onFormSetFieldsValue(extendColumnFields);\r\n    }\r\n\r\n    \r\n  // 自定义组件，pass value to Form\r\n  onFormSetFieldsValue = (changedValue) => {\r\n    const setFieldsValue = this.props.setFieldsValue;\r\n    if (setFieldsValue) {\r\n      setFieldsValue({\r\n        extendColumnFields: changedValue\r\n      });\r\n    }\r\n  }\r\n}\r\n"]}