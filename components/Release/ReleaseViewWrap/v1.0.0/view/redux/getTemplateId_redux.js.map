{"version":3,"sources":["../../../../../../src/components/Release/ReleaseViewWrap/v1.0.0/view/redux/getTemplateId_redux.js"],"names":["state","loaded","action","type","TEMPLATE_ID_LOADING","loading","TEMPLATE_ID_SUCCESS","data","result","TEMPLATE_ID_FAIL","error","queryGetTemplateId","params","url","types","promise","client","get"],"mappings":";;;;;;;;;;kBAQe,YAAkD;AAAA,QAAxCA,KAAwC,uEAAhC,EAAEC,QAAQ,KAAV,EAAgC;AAAA,QAAbC,MAAa,uEAAJ,EAAI;;AAC7D,YAAQA,OAAOC,IAAf;AACI,aAAKC,mBAAL;AACI,8CACOJ,KADP;AAEIK,yBAAS;AAFb;AAIJ,aAAKC,mBAAL;AACI,8CACON,KADP;AAEIO,sBAAML,OAAOM,MAFjB;AAGIH,yBAAS,KAHb;AAIIJ,wBAAQ;AAJZ;AAMJ,aAAKQ,gBAAL;AACI,8CACOT,KADP;AAEIK,yBAAS,KAFb;AAGIJ,wBAAQ,KAHZ;AAIIS,uBAAOR,OAAOQ;AAJlB;AAMJ;AACI,mBAAOV,KAAP;AArBR;AAuBH,C;;QAEeW,kB,GAAAA,kB;;;;AAlChB;;;;AAIA,IAAMP,sBAAsB,qBAA5B;AACA,IAAME,sBAAsB,qBAA5B;AACA,IAAMG,mBAAmB,kBAAzB;;AA4BO,SAASE,kBAAT,CAA4BC,MAA5B,EAAmCT,IAAnC,EAAyC;AAC5C,QAAIU,MAAM,+CAAV;AACA,QAAGV,QAAQ,CAAX,EAAa;AACTU,cAAM,6CAAN;AACH,KAFD,MAEO,IAAGV,QAAQ,CAAX,EAAa;AAChBU,cAAM,2CAAN;AACH;AACD,WAAO;AACHC,eAAO,CAACV,mBAAD,EAAsBE,mBAAtB,EAA2CG,gBAA3C,CADJ;AAEHM,iBAAS,iBAACC,MAAD;AAAA,mBAAYA,OAAOC,GAAP,CAAWJ,GAAX,EAAgB,EAAED,QAAQA,MAAV,EAAhB,CAAZ;AAAA;AAFN,KAAP;AAIH","file":"getTemplateId_redux.js","sourcesContent":["/**\r\n * 根据cid查询TemplateId\r\n */\r\n\r\nconst TEMPLATE_ID_LOADING = 'TEMPLATE_ID_LOADING';\r\nconst TEMPLATE_ID_SUCCESS = 'TEMPLATE_ID_SUCCESS';\r\nconst TEMPLATE_ID_FAIL = 'TEMPLATE_ID_FAIL';\r\n\r\nexport default function (state = { loaded: false }, action = {}) {\r\n    switch (action.type) {\r\n        case TEMPLATE_ID_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        case TEMPLATE_ID_SUCCESS:\r\n            return {\r\n                ...state,\r\n                data: action.result,\r\n                loading: false,\r\n                loaded: true\r\n            };\r\n        case TEMPLATE_ID_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded: false,\r\n                error: action.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function queryGetTemplateId(params,type) {\r\n    let url = '/item/platform/itemTmplPublish/queryUsingTmpl';\r\n    if(type == 2){\r\n        url = '/item/seller/itemTmplPublish/queryUsingTmpl';\r\n    } else if(type == 3){\r\n        url = '/item/shop/itemTmplPublish/queryUsingTmpl';\r\n    }\r\n    return {\r\n        types: [TEMPLATE_ID_LOADING, TEMPLATE_ID_SUCCESS, TEMPLATE_ID_FAIL],\r\n        promise: (client) => client.get(url, { params: params })\r\n    };\r\n}"]}