{"version":3,"sources":["../../../../../../src/components/Release/ReleaseViewWrap/v1.0.0/view/redux/deliveryFareTemplate_redux.js"],"names":["state","temp_loaded","action","type","TEMP_LOAD","temp_loading","TEMP_LOAD_SUCCESS","data","result","shopFareTemplateForItemVo","TEMP_LOAD_FAIL","temp_error","error","queryDeliveryFareTemplate","params","types","promise","client","get"],"mappings":";;;;;;;;;;kBAgBe,YAAuD;AAAA,QAA7CA,KAA6C,uEAArC,EAAEC,aAAa,KAAf,EAAqC;AAAA,QAAbC,MAAa,uEAAJ,EAAI;;AAClE,YAAQA,OAAOC,IAAf;AACI,aAAKC,SAAL;AACI,8CACOJ,KADP;AAEIK,8BAAc;AAFlB;AAIJ,aAAKC,iBAAL;AACI,8CACON,KADP;AAEIO,sBAAML,OAAOM,MAAP,IAAiBN,OAAOM,MAAP,CAAcD,IAA/B,IAAuCL,OAAOM,MAAP,CAAcD,IAAd,CAAmBE,yBAA1D,IAAuF,EAFjG;AAGIJ,8BAAc,KAHlB;AAIIJ,6BAAa;AAJjB;AAMJ,aAAKS,cAAL;AACI,8CACOV,KADP;AAEIK,8BAAc,KAFlB;AAGIJ,6BAAa,KAHjB;AAIIU,4BAAYT,OAAOU;AAJvB;AAMJ;AACI,mBAAOZ,KAAP;AArBR;AAuBH,C;;QAEea,yB,GAAAA,yB;;;;AA1ChB;;;;;;;;;;;AAWC;AACD,IAAMT,YAAY,WAAlB;AACA,IAAME,oBAAoB,mBAA1B;AACA,IAAMI,iBAAiB,gBAAvB;;AA4BO,SAASG,yBAAT,CAAmCC,MAAnC,EAA2C;AAC9C,WAAO;AACHC,eAAO,CAACX,SAAD,EAAYE,iBAAZ,EAA+BI,cAA/B,CADJ;AAEHM,iBAAS,iBAACC,MAAD;AAAA,mBAAYA,OAAOC,GAAP,CAAW,kDAAX,EAA+D,EAAEJ,QAAQA,MAAV,EAA/D,CAAZ;AAAA;AAFN,KAAP;AAIH","file":"deliveryFareTemplate_redux.js","sourcesContent":["/**\r\n * 其他设置/配送设置/商品运费模板 redux\r\n * 只有店铺有这个需求，供应商和运营平台不需要\r\n * \r\n * 编辑状态下，销售信息表格组件的列根据哪个模板进行校验\r\n * 对比总数据源中 运费模板 是哪个类型\r\n * \"calcRule\":3 -- 按体积校验\r\n * \"calcRule\":2 -- 按件数校验\r\n * \"calcRule\":1 -- 按重量校验\r\n */\r\n\r\n // 查询单位\r\nconst TEMP_LOAD = 'TEMP_LOAD';\r\nconst TEMP_LOAD_SUCCESS = 'TEMP_LOAD_SUCCESS';\r\nconst TEMP_LOAD_FAIL = 'TEMP_LOAD_FAIL';\r\n\r\nexport default function (state = { temp_loaded: false }, action = {}) {\r\n    switch (action.type) {\r\n        case TEMP_LOAD:\r\n            return {\r\n                ...state,\r\n                temp_loading: true\r\n            };\r\n        case TEMP_LOAD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                data: action.result && action.result.data && action.result.data.shopFareTemplateForItemVo || [],\r\n                temp_loading: false,\r\n                temp_loaded: true\r\n            };\r\n        case TEMP_LOAD_FAIL:\r\n            return {\r\n                ...state,\r\n                temp_loading: false,\r\n                temp_loaded: false,\r\n                temp_error: action.error\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport function queryDeliveryFareTemplate(params) {\r\n    return {\r\n        types: [TEMP_LOAD, TEMP_LOAD_SUCCESS, TEMP_LOAD_FAIL],\r\n        promise: (client) => client.get('/shop-service/delivery/queryDeliveryFareTemplate', { params: params })\r\n    };\r\n}\r\n\r\n"]}