{"version":3,"sources":["../../../../../src/components/Release/ReleaseChannel/v1.0.0/view/ReleaseChannel.js"],"names":["CheckboxGroup","Group","ReleaseChannel","props","state","value","getValue","nextProps","setState","channelOptions","label","styles","labelWrap","labelTitle","colorRed","labelCont","checkedValues","onChange","Component","old_value","itemTmplPublishVo","channelArr","indexOf","push","length","warn","concat","JSON","parse","updateItemTmplAction"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qCAAA;;;;;;;;;;;;;;;AASA;;;;AAEA;;;;;;AAEA,IAAMA,gBAAgB,mBAASC,KAA/B;IACqBC,c;;;AACjB,4BAAYC,KAAZ,EAAmB;AAAA;;AAAA,0JACTA,KADS;;AAAA;;AAEf,cAAKC,KAAL,GAAa;AACTC,mBAAO,MAAKC,QAAL,CAAcH,KAAd;AADE,SAAb;AAFe;AAKlB;;;;kDACyBI,S,EAAU;AAChC,iBAAKC,QAAL,CAAc;AACVH,uBAAO,KAAKC,QAAL,CAAcC,SAAd;AADG,aAAd;AAGH;AACD;;;;;;;iCAeS;AAAA;;AACL,gBAAME,iBAAiB,CACnB,EAAEC,OAAO,KAAT,EAAgBL,OAAO,GAAvB,EADmB,EAEnB,EAAEK,OAAO,KAAT,EAAgBL,OAAO,IAAvB,EAFmB,CAAvB;AAIA,mBACI;AAAA;AAAA,kBAAK,WAAWM,gBAAOC,SAAvB;AACI;AAAA;AAAA,sBAAO,SAAQ,0BAAf,EAAsB,WAAWD,gBAAOE,UAAxC;AACI;AAAA;AAAA,0BAAM,WAAWF,gBAAOG,QAAxB;AAAA;AAAA,qBADJ;AAAA;AAAA,iBADJ;AAII;AAAA;AAAA,sBAAK,WAAWH,gBAAOI,SAAvB;AACI,kDAAC,aAAD;AACI,iCAASN,cADb;AAEI,+BAAO,KAAKL,KAAL,CAAWC,KAFtB;AAGI,kCAAU,kBAACW,aAAD,EAAiB;AAAE,mCAAKC,QAAL,CAAcD,aAAd;AAA+B;AAHhE;AADJ;AAJJ,aADJ;AAcH;;AAED;;;;;;;EAhDwCE,gB;;;SAgBxCZ,Q,GAAW,UAACH,KAAD,EAAS;AAChB,YAAIE,QAAQ,EAAZ;AACA,YAAIc,YAAYhB,MAAMiB,iBAAN,IAA2BjB,MAAMiB,iBAAN,CAAwBC,UAAnD,IAAiE,CAAC,GAAD,EAAM,IAAN,CAAjF;AACA,YAAGF,UAAUG,OAAV,CAAkB,CAAlB,KAAwB,CAA3B,EAA6B;AACzBjB,kBAAMkB,IAAN,CAAW,GAAX;AACH;AACD,YAAGJ,UAAUG,OAAV,CAAkB,CAAlB,KAAwB,CAA3B,EAA6B;AACzBjB,kBAAMkB,IAAN,CAAW,IAAX;AACH;AACD,eAAOlB,KAAP;AACH,K;;SA0BDY,Q,GAAW,UAACD,aAAD,EAAiB;AACxB,YAAGA,cAAcQ,MAAd,IAAsB,CAAzB,EAA2B;AACvB,8BAAQC,IAAR,CAAa,WAAb;AACH,SAFD,MAEO;AACH,mBAAKjB,QAAL,CAAc;AACVH,uBAAOW;AADG,aAAd;AAGA,gBAAIK,aAAa,EAAjB;AACA,gBAAGL,cAAcM,OAAd,CAAsB,GAAtB,KAA4B,CAA/B,EAAiC;AAC7BD,6BAAaA,WAAWK,MAAX,CAAkB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,CAAlB,CAAb;AACH;AACD,gBAAGV,cAAcM,OAAd,CAAsB,IAAtB,KAA6B,CAAhC,EAAkC;AAC9BD,2BAAWE,IAAX,CAAgB,CAAhB;AACH;AACD,gBAAIH,oBAAoBO,KAAKC,KAAL,CAAW,yBAAe,OAAKzB,KAAL,CAAWiB,iBAA1B,CAAX,CAAxB;AACAA,8BAAkBC,UAAlB,GAA+BA,UAA/B;AACA,mBAAKlB,KAAL,CAAW0B,oBAAX,CAAgCT,iBAAhC;AACH;AACJ,K;;kBAtEgBlB,c","file":"ReleaseChannel.js","sourcesContent":["/**\r\n * @author chenyanhua\r\n * @date 2018-08-06\r\n * @file 发布商品-商品介绍 Tab组件\r\n * 运营平台/店铺/供应商 用的该组件代码都一样\r\n * 除模板引用的static下的ueditor文件不一样\r\n * shop引用的是ueditor.all.js\r\n * platform引用的是ueditor.all.min.js\r\n */\r\nimport React, { Component } from 'react';\r\nimport { Checkbox, message } from 'jdcloudui';\r\nimport styles from \"./style/index.less\";\r\n\r\nconst CheckboxGroup = Checkbox.Group;\r\nexport default class ReleaseChannel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: this.getValue(props)\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps){\r\n        this.setState({\r\n            value: this.getValue(nextProps)\r\n        });\r\n    }\r\n    /**\r\n     * 根据edit确定是新发布还是编辑\r\n     * 新发布默认选中全部\r\n     */\r\n    getValue = (props)=>{\r\n        let value = [];\r\n        let old_value = props.itemTmplPublishVo && props.itemTmplPublishVo.channelArr || ['m', 'pc'];\r\n        if(old_value.indexOf(1) >= 0){\r\n            value.push('m');\r\n        }\r\n        if(old_value.indexOf(6) >= 0){\r\n            value.push('pc');\r\n        }\r\n        return value;\r\n    }\r\n    render() {\r\n        const channelOptions = [\r\n            { label: '移动端', value: 'm' },\r\n            { label: 'PC端', value: 'pc' },\r\n        ];\r\n        return (\r\n            <div className={styles.labelWrap}>\r\n                <label htmlFor=\"适用渠道\" className={styles.labelTitle}>\r\n                    <span className={styles.colorRed}>*</span>适用渠道：\r\n                </label>\r\n                <div className={styles.labelCont}>\r\n                    <CheckboxGroup \r\n                        options={channelOptions} \r\n                        value={this.state.value}\r\n                        onChange={(checkedValues)=>{ this.onChange(checkedValues); }} \r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 选择销售渠道,组合数据,并更新数据源\r\n     * PC端传6，移动端传1~5\r\n     */\r\n    onChange = (checkedValues)=>{\r\n        if(checkedValues.length<=0){\r\n            message.warn('适用渠道不能为空!');\r\n        } else {\r\n            this.setState({\r\n                value: checkedValues\r\n            });\r\n            let channelArr = [];\r\n            if(checkedValues.indexOf('m')>=0){\r\n                channelArr = channelArr.concat([1,2,3,4,5]);\r\n            }\r\n            if(checkedValues.indexOf('pc')>=0){\r\n                channelArr.push(6);\r\n            }\r\n            let itemTmplPublishVo = JSON.parse(JSON.stringify(this.props.itemTmplPublishVo));\r\n            itemTmplPublishVo.channelArr = channelArr;\r\n            this.props.updateItemTmplAction(itemTmplPublishVo); \r\n        }\r\n    }\r\n}\r\n"]}