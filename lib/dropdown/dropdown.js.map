{"version":3,"sources":["../../components/dropdown/dropdown.js"],"names":["React","Dropdown","props","placement","transitionName","undefined","indexOf","overlay","overlayProps","children","prefixCls","overlayElements","trigger","disabled","child","Children","only","dropdownTrigger","cloneElement","className","selectable","fixedModeOverlay","mode","getTransitionName","Component","defaultProps","mouseEnterDelay","mouseLeaveDelay"],"mappings":";;;;;;;;;;;AAGA;;IAAYA,K;;AACZ;;;;AACA;;;;;;;;;;;;+eALA;;;;;AAMA;IACqBC,Q;;;;;;;;;;;4CACG;AAAA,yBAC2B,KAAKC,KADhC;AAAA,0CACRC,SADQ;AAAA,gBACRA,SADQ,oCACI,EADJ;AAAA,gBACQC,cADR,UACQA,cADR;;AAEhB,gBAAIA,mBAAmBC,SAAvB,EAAkC;AAC9B,uBAAOD,cAAP;AACH;AACD,gBAAID,UAAUG,OAAV,CAAkB,KAAlB,KAA4B,CAAhC,EAAmC;AAC/B,uBAAO,YAAP;AACH;AACD,mBAAO,UAAP;AACH;;;4CACmB;AAAA,gBACRC,OADQ,GACI,KAAKL,KADT,CACRK,OADQ;;AAEhB,gBAAMC,eAAeD,QAAQL,KAA7B;AACA;AACH;;;iCACQ;AAAA,0BACwE,KAAKA,KAD7E;AAAA,gBACGO,QADH,WACGA,QADH;AAAA,gBACaC,SADb,WACaA,SADb;AAAA,gBACiCC,eADjC,WACwBJ,OADxB;AAAA,gBACkDK,OADlD,WACkDA,OADlD;AAAA,gBAC2DC,QAD3D,WAC2DA,QAD3D;;AAEL,gBAAMC,QAAQd,MAAMe,QAAN,CAAeC,IAAf,CAAoBP,QAApB,CAAd;AACA,gBAAMF,UAAUP,MAAMe,QAAN,CAAeC,IAAf,CAAoBL,eAApB,CAAhB;AACA,gBAAMM,kBAAkBjB,MAAMkB,YAAN,CAAmBJ,KAAnB,EAA0B;AAC9CK,2BAAW,0BAAWL,MAAMZ,KAAN,CAAYiB,SAAvB,EAAqCT,SAArC,cADmC;AAE9CG;AAF8C,aAA1B,CAAxB;AAIA;AACA,gBAAMO,aAAab,QAAQL,KAAR,CAAckB,UAAd,IAA4B,KAA/C;AACA,gBAAMC,mBAAmBrB,MAAMkB,YAAN,CAAmBX,OAAnB,EAA4B;AACjDe,sBAAM,UAD2C;AAEjDF;AAFiD,aAA5B,CAAzB;AAIA,mBAAQ;AAAA;AAAA,6BAAgB,KAAKlB,KAArB,IAA4B,gBAAgB,KAAKqB,iBAAL,EAA5C,EAAsE,SAASV,WAAW,EAAX,GAAgBD,OAA/F,EAAwG,SAASS,gBAAjH;AACHJ;AADG,aAAR;AAGH;;;;EAjCiCjB,MAAMwB,S;;kBAAvBvB,Q;;AAmCrBA,SAASwB,YAAT,GAAwB;AACpBf,eAAW,aADS;AAEpBgB,qBAAiB,IAFG;AAGpBC,qBAAiB,GAHG;AAIpBxB,eAAW;AAJS,CAAxB","file":"dropdown.js","sourcesContent":["/**\r\n * Created by huangxiao3 on 2018/3/27.\r\n */\r\nimport * as React from 'react';\r\nimport RcDropdown from 'rc-dropdown';\r\nimport classNames from 'classnames';\r\n// import warning from '../_util/warning';\r\nexport default class Dropdown extends React.Component {\r\n    getTransitionName() {\r\n        const { placement = '', transitionName } = this.props;\r\n        if (transitionName !== undefined) {\r\n            return transitionName;\r\n        }\r\n        if (placement.indexOf('top') >= 0) {\r\n            return 'slide-down';\r\n        }\r\n        return 'slide-up';\r\n    }\r\n    componentDidMount() {\r\n        const { overlay } = this.props;\r\n        const overlayProps = overlay.props;\r\n        // warning(!overlayProps.mode || overlayProps.mode === 'vertical', `mode=\"${overlayProps.mode}\" is not supported for Dropdown\\'s Menu.`);\r\n    }\r\n    render() {\r\n        const { children, prefixCls, overlay: overlayElements, trigger, disabled } = this.props;\r\n        const child = React.Children.only(children);\r\n        const overlay = React.Children.only(overlayElements);\r\n        const dropdownTrigger = React.cloneElement(child, {\r\n            className: classNames(child.props.className, `${prefixCls}-trigger`),\r\n            disabled,\r\n        });\r\n        // menu cannot be selectable in dropdown defaultly\r\n        const selectable = overlay.props.selectable || false;\r\n        const fixedModeOverlay = React.cloneElement(overlay, {\r\n            mode: 'vertical',\r\n            selectable,\r\n        });\r\n        return (<RcDropdown {...this.props} transitionName={this.getTransitionName()} trigger={disabled ? [] : trigger} overlay={fixedModeOverlay}>\r\n            {dropdownTrigger}\r\n        </RcDropdown>);\r\n    }\r\n}\r\nDropdown.defaultProps = {\r\n    prefixCls: 'jc-dropdown',\r\n    mouseEnterDelay: 0.15,\r\n    mouseLeaveDelay: 0.1,\r\n    placement: 'bottomLeft',\r\n};\r\n"]}