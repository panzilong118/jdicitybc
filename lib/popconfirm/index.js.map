{"version":3,"sources":["../../components/popconfirm/index.js"],"names":["React","Popconfirm","props","onConfirm","e","setVisible","call","onCancel","onVisibleChange","visible","saveTooltip","node","tooltip","renderOverlay","popconfirmLocale","prefixCls","title","cancelText","okText","okType","state","undefined","nextProps","setState","getPopupDomNode","placement","restProps","overlay","Component","defaultProps","transitionName","trigger"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @author panzilong\n * @version 1.0.0\n */\nimport * as React from 'react';\nimport Tooltip from '../tooltip';\nimport Icon from '../icon';\nimport Button from '../button';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale-provider/default';\n\nexport default class Popconfirm extends React.Component {\n    static defaultProps = {\n        prefixCls: 'jc-popover',\n        transitionName: 'zoom-big',\n        placement: 'top',\n        trigger: 'click',\n        okType: 'primary',\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            visible: props.visible,\n        };\n        this.tooltip = undefined;\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if ('visible' in nextProps) {\n            this.setState({ visible: nextProps.visible });\n        }\n    }\n\n    getPopupDomNode() {\n        return this.tooltip.getPopupDomNode();\n    }\n\n    onConfirm = (e) => {\n        this.setVisible(false);\n\n        const { onConfirm } = this.props;\n        if (onConfirm) {\n            onConfirm.call(this, e);\n        }\n    }\n\n    onCancel = (e) => {\n        this.setVisible(false);\n\n        const { onCancel } = this.props;\n        if (onCancel) {\n            onCancel.call(this, e);\n        }\n    }\n\n    onVisibleChange = (visible) => {\n        this.setVisible(visible);\n    }\n\n    setVisible(visible) {\n        const props = this.props;\n        if (!('visible' in props)) {\n            this.setState({ visible });\n        }\n\n        const { onVisibleChange } = props;\n        if (onVisibleChange) {\n            onVisibleChange(visible);\n        }\n    }\n\n    saveTooltip = (node) => {\n        this.tooltip = node;\n    }\n\n    renderOverlay = (popconfirmLocale) => {\n        const { prefixCls, title, cancelText, okText, okType } = this.props;\n        return (\n            <div>\n                <div className={`${prefixCls}-inner-content`}>\n                    <div className={`${prefixCls}-message`}>\n                        <Icon type='exclamation-circle' />\n                        <div className={`${prefixCls}-message-title`}>{title}</div>\n                    </div>\n                    <div className={`${prefixCls}-buttons`}>\n                        <Button onClick={this.onCancel} size='small'>\n                            { cancelText || popconfirmLocale.cancelText }\n                        </Button>\n                        <Button onClick={this.onConfirm} type={okType} size='small'>\n                            { okText || popconfirmLocale.okText }\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        const { prefixCls, placement, ...restProps } = this.props;\n\n        const overlay = (\n            <LocaleReceiver\n                componentName='Popconfirm'\n                defaultLocale={defaultLocale.Popconfirm}\n            >\n                {this.renderOverlay}\n            </LocaleReceiver>\n        );\n\n        return (\n            <Tooltip\n                {...restProps}\n                prefixCls={prefixCls}\n                placement={placement}\n                onVisibleChange={this.onVisibleChange}\n                visible={this.state.visible}\n                overlay={overlay}\n                ref={this.saveTooltip}\n            />\n        );\n    }\n}\n"]}