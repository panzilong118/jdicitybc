{"version":3,"sources":["../../components/tabs/index.js"],"names":["React","ReactDOM","Tabs","createNewTab","targetKey","onEdit","props","removeTab","e","stopPropagation","handleChange","activeKey","onChange","NO_FLEX","tabNode","findDOMNode","className","indexOf","prefixCls","size","type","tabPosition","children","tabBarStyle","hideAdd","onTabClick","onPrevClick","onNextClick","animated","tabBarGutter","tabBarExtraContent","inkBarAnimated","inkBar","tabPaneAnimated","tabPane","cls","childrenWithClose","Children","forEach","child","index","closable","closeIcon","key","push","cloneElement","tab","undefined","renderTabBar","length","Component","TabPane","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["/**\r\n * Created by gaoqingli on 2018/4/10.\r\n */\r\nimport * as React from 'react';\r\n\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport RcTabs, { TabPane } from 'rc-tabs';\r\n\r\nimport ScrollableInkTabBar from 'rc-tabs/lib/ScrollableInkTabBar';\r\n\r\nimport TabContent from 'rc-tabs/lib/TabContent';\r\n\r\nimport classNames from 'classnames';\r\n\r\nimport Icon from '../icon';\r\n\r\nimport warning from '../_util/warning';\r\n\r\nimport isFlexSupported from '../_util/isFlexSupported';\r\n\r\nexport default class Tabs extends React.Component {\r\n  static TabPane = TabPane;\r\n\r\n  static defaultProps = {\r\n      prefixCls: 'jc-tabs',\r\n      hideAdd: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n      const NO_FLEX = ' no-flex';\r\n      const tabNode = ReactDOM.findDOMNode(this);\r\n      if (tabNode && !isFlexSupported() && tabNode.className.indexOf(NO_FLEX) === -1) {\r\n          tabNode.className += NO_FLEX;\r\n      }\r\n  }\r\n\r\n  createNewTab = (targetKey) => {\r\n      const { onEdit } = this.props;\r\n      if (onEdit) {\r\n          onEdit(targetKey, 'add');\r\n      }\r\n  }\r\n\r\n  removeTab = (targetKey, e) => {\r\n      e.stopPropagation();\r\n      if (!targetKey) {\r\n          return;\r\n      }\r\n\r\n      const { onEdit } = this.props;\r\n      if (onEdit) {\r\n          onEdit(targetKey, 'remove');\r\n      }\r\n  }\r\n\r\n  handleChange = (activeKey) => {\r\n      const { onChange } = this.props;\r\n      if (onChange) {\r\n          onChange(activeKey);\r\n      }\r\n  }\r\n\r\n  render() {\r\n      const {\r\n          prefixCls,\r\n          className = '',\r\n          size,\r\n          type = 'line',\r\n          tabPosition,\r\n          children,\r\n          tabBarStyle,\r\n          hideAdd,\r\n          onTabClick,\r\n          onPrevClick,\r\n          onNextClick,\r\n          animated = true,\r\n          tabBarGutter,\r\n      } = this.props;\r\n      let {\r\n          tabBarExtraContent,\r\n      } = this.props;\r\n\r\n      const { inkBarAnimated } = typeof animated === 'object' ? {\r\n          inkBarAnimated: animated.inkBar,\r\n      } : {\r\n          inkBarAnimated: animated,\r\n      };\r\n      let { tabPaneAnimated } = typeof animated === 'object' ? {\r\n          tabPaneAnimated: animated.tabPane,\r\n      } : {\r\n          tabPaneAnimated: animated,\r\n      };\r\n\r\n      // card tabs should not have animation\r\n      if (type !== 'line') {\r\n          tabPaneAnimated = 'animated' in this.props ? tabPaneAnimated : false;\r\n      }\r\n\r\n      warning(\r\n          !(type.indexOf('card') >= 0 && (size === 'small' || size === 'large')),\r\n          'Tabs[type=card|editable-card] doesn\\'t have small or large size, it\\'s by designed.',\r\n      );\r\n      const cls = classNames(className, {\r\n          [`${prefixCls}-vertical`]: tabPosition === 'left' || tabPosition === 'right',\r\n          [`${prefixCls}-${size}`]: !!size,\r\n          [`${prefixCls}-card`]: type.indexOf('card') >= 0,\r\n          [`${prefixCls}-${type}`]: true,\r\n          [`${prefixCls}-no-animation`]: !tabPaneAnimated,\r\n      });\r\n      // only card type tabs can be added and closed\r\n      let childrenWithClose: React.ReactElement[] = [];\r\n\r\n      tabBarExtraContent = tabBarExtraContent ? (\r\n          <div className={`${prefixCls}-extra-content`}>\r\n              {tabBarExtraContent}\r\n          </div>\r\n      ) : null;\r\n\r\n      if (type === 'editable-card') {\r\n          childrenWithClose = [];\r\n          React.Children.forEach(children, (child, index) => {\r\n              let { closable } = child.props;\r\n              closable = typeof closable === 'undefined' ? true : closable;\r\n              const closeIcon = closable ? (\r\n                  <Icon\r\n                      type='close'\r\n                      onClick={e => this.removeTab(child.key, e)}\r\n                  />\r\n              ) : null;\r\n              childrenWithClose.push(React.cloneElement(child, {\r\n                  tab: (\r\n                      <div className={closable ? undefined : `${prefixCls}-tab-unclosable`}>\r\n                          {child.props.tab}\r\n                          {closeIcon}\r\n                      </div>\r\n                  ),\r\n                  key: child.key || index,\r\n              }));\r\n          });\r\n          // Add new tab handler\r\n          if (!hideAdd) {\r\n              tabBarExtraContent = (\r\n                  <span>\r\n                      <Icon type='plus' className={`${prefixCls}-new-tab`} onClick={this.createNewTab} />\r\n                      {tabBarExtraContent}\r\n                  </span>\r\n              );\r\n          }\r\n      }\r\n\r\n      const renderTabBar = () => (\r\n          <ScrollableInkTabBar\r\n              inkBarAnimated={inkBarAnimated}\r\n              extraContent={tabBarExtraContent}\r\n              onTabClick={onTabClick}\r\n              onPrevClick={onPrevClick}\r\n              onNextClick={onNextClick}\r\n              style={tabBarStyle}\r\n              tabBarGutter={tabBarGutter}\r\n          />\r\n      );\r\n\r\n      return (\r\n          <RcTabs\r\n              {...this.props}\r\n              className={cls}\r\n              tabBarPosition={tabPosition}\r\n              renderTabBar={renderTabBar}\r\n              renderTabContent={() => <TabContent animated={tabPaneAnimated} animatedWithMargin />}\r\n              onChange={this.handleChange}\r\n          >\r\n              {childrenWithClose.length > 0 ? childrenWithClose : children}\r\n          </RcTabs>\r\n      );\r\n  }\r\n}\r\n"]}