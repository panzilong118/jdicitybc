{"version":3,"sources":["../../components/card/index.js"],"names":["CardGridProps","CardMetaProps","React","CardType","CardTabListType","key","string","tab","node","CardProps","prefixCls","title","extra","bordered","bool","bodyStyle","object","style","loading","noHovering","hoverable","children","id","className","type","oneOf","cover","actions","arrayOf","tabList","array","onTabChange","func","activeTabKey","defaultActiveTabKey","Card","props","saveRef","container","getAction","length","actionList","map","action","index","width","resizeEvent","updateWiderPaddingCalled","undefined","state","widerPadding","updateWiderPadding","window","remove","cancel","WIDTH_BOUNDARY_PX","offsetWidth","setState","containGrid","Children","forEach","element","others","classString","getCompatibleHoverable","isContainGrid","loadingBlock","hasActiveTabKey","extraProps","head","tabs","item","coverDom","body","actionDom","divProps","Component","Grid","Meta","propTypes"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @author: chenyanhua\n * @version: 3.4.1\n */\nimport * as React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport addEventListener from 'rc-util/lib/Dom/addEventListener';\n\nimport omit from 'omit.js';\n\nimport Grid from './Grid';\n\nimport Meta from './Meta';\n\nimport Tabs from '../tabs';\n\nimport { throttleByAnimationFrameDecorator } from '../_util/throttleByAnimationFrame';\n\nimport warning from '../_util/warning';\n\n// import { Omit } from '../_util/type';\n\nexport { CardGridProps } from './Grid';\n\nexport { CardMetaProps } from './Meta';\n\nexport const CardType = 'inner';\n\nexport const CardTabListType = {\n    key: PropTypes.string,\n    tab: PropTypes.node\n};\n\nexport const CardProps = {\n    prefixCls: PropTypes.string,\n    title: PropTypes.node,\n    extra: PropTypes.node,\n    bordered: PropTypes.bool,\n    bodyStyle: PropTypes.object,\n    style: PropTypes.object,\n    loading: PropTypes.bool,\n    noHovering: PropTypes.bool,\n    hoverable: PropTypes.bool,\n    children: PropTypes.node,\n    id: PropTypes.string,\n    className: PropTypes.string,\n    type: PropTypes.oneOf([CardType]),\n    cover: PropTypes.node,\n    actions: PropTypes.arrayOf(PropTypes.node),\n    tabList: PropTypes.array,\n    onTabChange: PropTypes.func,\n    activeTabKey: PropTypes.string,\n    defaultActiveTabKey: PropTypes.string\n};\n\nexport default class Card extends React.Component {\n    static Grid = Grid;\n    static Meta = Meta;\n\n    static propTypes = { ...CardProps };\n\n    constructor(props) {\n        super(props);\n        this.resizeEvent = () => {};\n        this.updateWiderPaddingCalled = undefined;\n        this.container = undefined;\n        this.state = {\n            widerPadding: false\n        };\n    }\n    componentDidMount() {\n        this.updateWiderPadding();\n        this.resizeEvent = addEventListener(window, 'resize', this.updateWiderPadding);\n\n        if ('noHovering' in this.props) {\n            warning(\n                !this.props.noHovering,\n                '`noHovering` of Card is deprecated, you can remove it safely or use `hoverable` instead.',\n            );\n            warning(!!this.props.noHovering, '`noHovering={false}` of Card is deprecated, use `hoverable` instead.');\n        }\n    }\n    componentWillUnmount() {\n        if (this.resizeEvent) {\n            this.resizeEvent.remove();\n        }\n        this.updateWiderPadding.cancel();\n    }\n    @throttleByAnimationFrameDecorator()\n    updateWiderPadding() {\n        if (!this.container) {\n            return;\n        }\n        // 936 is a magic card width pixel number indicated by designer\n        const WIDTH_BOUNDARY_PX = 936;\n        if (this.container.offsetWidth >= WIDTH_BOUNDARY_PX && !this.state.widerPadding) {\n            this.setState({ widerPadding: true }, () => {\n                this.updateWiderPaddingCalled = true; // first render without css transition\n            });\n        }\n        if (this.container.offsetWidth < WIDTH_BOUNDARY_PX && this.state.widerPadding) {\n            this.setState({ widerPadding: false }, () => {\n                this.updateWiderPaddingCalled = true; // first render without css transition\n            });\n        }\n    }\n    onTabChange = (key) => {\n        if (this.props.onTabChange) {\n            this.props.onTabChange(key);\n        }\n    }\n    saveRef = (node) => {\n        this.container = node;\n    }\n    isContainGrid() {\n        let containGrid;\n        React.Children.forEach(this.props.children, (element) => {\n            if (element && element.type && element.type === Grid) {\n                containGrid = true;\n            }\n        });\n        return containGrid;\n    }\n    getAction = (actions) => {\n        if (!actions || !actions.length) {\n            return null;\n        }\n        const actionList = actions.map((action, index) => {\n            return (\n                <li style={{ width: `${100 / actions.length}%` }} key={`action-${index}`}>\n                    <span>{action}</span>\n                </li>\n            );\n        });\n        return actionList;\n    }\n    // For 2.x compatible\n    getCompatibleHoverable() {\n        const { noHovering, hoverable } = this.props;\n        if ('noHovering' in this.props) {\n            return !noHovering || hoverable;\n        }\n        return !!hoverable;\n    }\n    render() {\n        const {\n            prefixCls = 'jc-card', className, extra, bodyStyle, noHovering, hoverable, title, loading,\n            bordered = true, type, cover, actions, tabList, children, activeTabKey, defaultActiveTabKey,\n            ...others\n        } = this.props;\n\n        const classString = classNames(prefixCls, className, {\n            [`${prefixCls}-loading`]: loading,\n            [`${prefixCls}-bordered`]: bordered,\n            [`${prefixCls}-hoverable`]: this.getCompatibleHoverable(),\n            [`${prefixCls}-wider-padding`]: this.state.widerPadding,\n            [`${prefixCls}-padding-transition`]: this.updateWiderPaddingCalled,\n            [`${prefixCls}-contain-grid`]: this.isContainGrid(),\n            [`${prefixCls}-contain-tabs`]: tabList && tabList.length,\n            [`${prefixCls}-type-${type}`]: !!type\n        });\n\n        const loadingBlock = (\n            <div className={`${prefixCls}-loading-content`}>\n                <p className={`${prefixCls}-loading-block`} style={{ width: '94%' }} />\n                <p>\n                    <span className={`${prefixCls}-loading-block`} style={{ width: '28%' }} />\n                    <span className={`${prefixCls}-loading-block`} style={{ width: '62%' }} />\n                </p>\n                <p>\n                    <span className={`${prefixCls}-loading-block`} style={{ width: '22%' }} />\n                    <span className={`${prefixCls}-loading-block`} style={{ width: '66%' }} />\n                </p>\n                <p>\n                    <span className={`${prefixCls}-loading-block`} style={{ width: '56%' }} />\n                    <span className={`${prefixCls}-loading-block`} style={{ width: '39%' }} />\n                </p>\n                <p>\n                    <span className={`${prefixCls}-loading-block`} style={{ width: '21%' }} />\n                    <span className={`${prefixCls}-loading-block`} style={{ width: '15%' }} />\n                    <span className={`${prefixCls}-loading-block`} style={{ width: '40%' }} />\n                </p>\n            </div>\n        );\n\n        const hasActiveTabKey = activeTabKey !== undefined;\n        const extraProps = {\n            [hasActiveTabKey ? 'activeKey' : 'defaultActiveKey']: hasActiveTabKey ? activeTabKey : defaultActiveTabKey\n        };\n\n        let head;\n        const tabs = tabList && tabList.length ? (\n            <Tabs\n                {...extraProps}\n                className={`${prefixCls}-head-tabs`}\n                size='large'\n                onChange={this.onTabChange}\n            >\n                {tabList.map(item => <Tabs.TabPane tab={item.tab} key={item.key} />)}\n            </Tabs>\n        ) : null;\n        if (title || extra || tabs) {\n            head = (\n                <div className={`${prefixCls}-head`}>\n                    <div className={`${prefixCls}-head-wrapper`}>\n                        {title && <div className={`${prefixCls}-head-title`}>{title}</div>}\n                        {extra && <div className={`${prefixCls}-extra`}>{extra}</div>}\n                    </div>\n                    {tabs}\n                </div>\n            );\n        }\n        const coverDom = cover ? <div className={`${prefixCls}-cover`}>{cover}</div> : null;\n        const body = (\n            <div className={`${prefixCls}-body`} style={bodyStyle}>\n                {loading ? loadingBlock : children}\n            </div>\n        );\n        const actionDom = actions && actions.length ? <ul className={`${prefixCls}-actions`}>{this.getAction(actions)}</ul> : null;\n        const divProps = omit(others, ['onTabChange']);\n        return (\n            <div {...divProps} className={classString} ref={this.saveRef}>\n                {head}\n                {coverDom}\n                {body}\n                {actionDom}\n            </div>\n        );\n    }\n}\n"]}