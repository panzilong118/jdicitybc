{"version":3,"sources":["../../components/tree/index.js"],"names":["React","Tree","props","prefixCls","className","checkable","children","Component","TreeNode","defaultProps","showIcon","openAnimation","propTypes","showLine","bool","string","multiple","autoExpandParent","checkStrictly","defaultExpandAll","draggable","disabled","disableCheckbox","title","key","isLeaf","event","oneOf","checked","selected"],"mappings":";;;;;;;;;;;AAAA;;IAAYA,K;;AACZ;;;;AACA;;;;AACA;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;IAGqBC,I;;;;;;;;;;;iCAGR;AACL,gBAAMC,QAAQ,KAAKA,KAAnB;AADK,gBAEGC,SAFH,GAE4BD,KAF5B,CAEGC,SAFH;AAAA,gBAEcC,SAFd,GAE4BF,KAF5B,CAEcE,SAFd;;AAGL,gBAAMC,YAAYH,MAAMG,SAAxB;AACA,mBACI;AAAA;AAAA,6BACQH,KADR;AAEI,+BAAWE,SAFf;AAGI,+BAAWC,YAAY,8BAAM,WAAcF,SAAd,oBAAN,GAAZ,GAAiEE;AAHhF;AAKK,qBAAKH,KAAL,CAAWI;AALhB,aADJ;AASH;;;;EAhB6BN,MAAMO,S;;AAAnBN,I,CACVO,Q;kBADUP,I;;AAkBrBA,KAAKQ,YAAL,GAAoB;AAChBN,eAAW,SADK;AAEhBE,eAAW,KAFK;AAGhBK,cAAU,KAHM;AAIhBC;AAJgB,CAApB;AAMAV,KAAKW,SAAL,GAAiB;AACbF,cAAU,KADG;AAEbC,0CAFa;AAGbE,cAAU,oBAAUC,IAHP;AAIbV,eAAW,oBAAUW,MAJR;AAKb;AACAC,cAAU,oBAAUF,IANP;AAOb;AACAG,sBAAkB,oBAAUH,IARf;AASb;AACAI,mBAAe,oBAAUJ,IAVZ;AAWb;AACAT,eAAW,oBAAUS,IAZR;AAab;AACAK,sBAAkB,oBAAUL,IAdf;AAeb;AACAM,eAAW,oBAAUN,IAhBR;AAiBbX,eAAW,oBAAUY,MAjBR;AAkBb;AACAM,cAAU,oBAAUP,IAnBP;AAoBbQ,qBAAiB,oBAAUR,IApBd;AAqBbS,WAAO,oBAAUR,MArBJ;AAsBbS,SAAK,oBAAUT,MAtBF;AAuBbU,YAAQ,oBAAUX,IAvBL;AAwBb;AACAY,WAAO,oBAAUC,KAAV,CAAgB,CAAC,OAAD,EAAU,QAAV,CAAhB,CAzBM;AA0BbC,aAAS,oBAAUd,IA1BN;AA2Bbe,cAAU,oBAAUf;AA3BP,CAAjB","file":"index.js","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RcTree, { TreeNode } from 'rc-tree';\r\nimport animation from '../_util/openAnimation';\r\n\r\n// export\r\n// interface\r\n// AntTreeNode\r\n// extends\r\n// React.Component < AntTreeNodeProps, {} > {}\r\n\r\n// export\r\n// interface\r\n// AntTreeNodeMouseEvent\r\n// {\r\n//     node: AntTreeNode;\r\n//     event: React.MouseEventHandler < any >;\r\n// }\r\n\r\n\r\nexport default class Tree extends React.Component {\r\n    static TreeNode = TreeNode;\r\n\r\n    render() {\r\n        const props = this.props;\r\n        const { prefixCls, className } = props;\r\n        const checkable = props.checkable;\r\n        return (\r\n            <RcTree\r\n                {...props}\r\n                className={className}\r\n                checkable={checkable ? <span className={`${prefixCls}-checkbox-inner`} /> : checkable}\r\n            >\r\n                {this.props.children}\r\n            </RcTree>\r\n        );\r\n    }\r\n}\r\nTree.defaultProps = {\r\n    prefixCls: 'jc-tree',\r\n    checkable: false,\r\n    showIcon: false,\r\n    openAnimation: animation,\r\n};\r\nTree.propTypes = {\r\n    showIcon: false,\r\n    openAnimation: animation,\r\n    showLine: PropTypes.bool,\r\n    className: PropTypes.string,\r\n    /** 是否支持多选 */\r\n    multiple: PropTypes.bool,\r\n    /** 是否自动展开父节点 */\r\n    autoExpandParent: PropTypes.bool,\r\n    // checkable状态下节点选择完全受控（父子节点选中状态不再关联）\r\n    checkStrictly: PropTypes.bool,\r\n    /** 是否支持选中 */\r\n    checkable: PropTypes.bool,\r\n    /** 默认展开所有树节点 */\r\n    defaultExpandAll: PropTypes.bool,\r\n    // 设置节点可拖拽（IE>8）*/\r\n    draggable: PropTypes.bool,\r\n    prefixCls: PropTypes.string,\r\n    // AntTreeNodeProps\r\n    disabled: PropTypes.bool,\r\n    disableCheckbox: PropTypes.bool,\r\n    title: PropTypes.string,\r\n    key: PropTypes.string,\r\n    isLeaf: PropTypes.bool,\r\n    // AntTreeNodeEvent\r\n    event: PropTypes.oneOf(['check', 'select']),\r\n    checked: PropTypes.bool,\r\n    selected: PropTypes.bool,\r\n};\r\n"]}