{"version":3,"sources":["../../components/affix/index.js"],"names":["React","ReactDOM","getTargetRect","target","window","getBoundingClientRect","top","left","bottom","getOffset","element","elemRect","targetRect","scrollTop","scrollLeft","docElem","document","body","clientTop","clientLeft","width","height","noop","getDefaultTarget","AffixProps","offsetTop","number","offset","offsetBottom","style","object","onChange","func","prefixCls","string","Affix","props","saveFixedNode","node","fixedNode","savePlaceholderNode","placeholderNode","scrollEvent","undefined","resizeEvent","timeout","events","eventHandlers","state","affixStyle","placeholderStyle","e","originalAffixStyle","isWindow","type","setState","affixed","originalPlaceholderStyle","cssText","setAffixStyle","offsetWidth","setPlaceholderStyle","targetNode","affixNode","findDOMNode","elemOffset","elemSize","offsetHeight","offsetMode","targetInnerHeight","innerHeight","clientHeight","position","targetBottomOffet","syncPlaceholderStyle","setTimeout","setTargetEventListeners","nextProps","clearEventListeners","updatePosition","clearTimeout","cancel","getTarget","forEach","eventName","handler","remove","className","children","Component","propTypes"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @author: chenyanhua\n * @version: 3.4.1\n */\nimport * as React from 'react';\n\nimport * as ReactDOM from 'react-dom';\n\nimport PropTypes from 'prop-types';\n\nimport addEventListener from 'rc-util/lib/Dom/addEventListener';\n\nimport classNames from 'classnames';\n\nimport shallowequal from 'shallowequal';\n\nimport omit from 'omit.js';\n\nimport getScroll from '../_util/getScroll';\n\nimport { throttleByAnimationFrameDecorator } from '../_util/throttleByAnimationFrame';\n\nfunction getTargetRect(target) {\n    return target !== window ? target.getBoundingClientRect() : { top: 0, left: 0, bottom: 0 };\n}\n\nfunction getOffset(element, target) {\n    const elemRect = element.getBoundingClientRect();\n    const targetRect = getTargetRect(target);\n\n    const scrollTop = getScroll(target, true);\n    const scrollLeft = getScroll(target, false);\n\n    const docElem = window.document.body;\n    const clientTop = docElem.clientTop || 0;\n    const clientLeft = docElem.clientLeft || 0;\n\n    return {\n        top: elemRect.top - targetRect.top + scrollTop - clientTop,\n        left: elemRect.left - targetRect.left + scrollLeft - clientLeft,\n        width: elemRect.width,\n        height: elemRect.height\n    };\n}\n\nfunction noop() {}\n\nfunction getDefaultTarget() {\n    return typeof window !== 'undefined' ? window : null;\n}\n\n// Affix\nexport const AffixProps = {\n    /**\n     * 距离窗口顶部达到指定偏移量后触发\n     */\n    offsetTop: PropTypes.number,\n    offset: PropTypes.number,\n    /** 距离窗口底部达到指定偏移量后触发 */\n    offsetBottom: PropTypes.number,\n    style: PropTypes.object,\n    /** 固定状态改变时触发的回调函数 */\n    onChange: PropTypes.func,\n    /** 设置 Affix 需要监听其滚动事件的元素，值为一个返回对应 DOM 元素的函数 */\n    target: PropTypes.func,\n    prefixCls: PropTypes.string\n};\n\nexport default class Affix extends React.Component {\n    static propTypes = {\n        ...AffixProps,\n        offsetTop: PropTypes.number,\n        offsetBottom: PropTypes.number,\n        target: PropTypes.func\n    };\n    \n    constructor(props) {\n        super(props);\n\n        this.scrollEvent = undefined;\n        this.resizeEvent = undefined;\n        this.timeout = undefined;\n\n        this.events = [\n            'resize',\n            'scroll',\n            'touchstart',\n            'touchmove',\n            'touchend',\n            'pageshow',\n            'load'\n        ];\n\n        this.eventHandlers = {};\n\n        this.state = {\n            affixStyle: undefined,\n            placeholderStyle: undefined\n        };\n\n        this.fixedNode = undefined;\n        this.placeholderNode = undefined;\n    }\n\n    setAffixStyle(e, affixStyle) {\n        const { onChange = noop, target = getDefaultTarget } = this.props;\n        const originalAffixStyle = this.state.affixStyle;\n        const isWindow = target() === window;\n        if (e.type === 'scroll' && originalAffixStyle && affixStyle && isWindow) {\n            return;\n        }\n        if (shallowequal(affixStyle, originalAffixStyle)) {\n            return;\n        }\n        this.setState({ affixStyle }, () => {\n            const affixed = !!this.state.affixStyle;\n            if ((affixStyle && !originalAffixStyle) || (!affixStyle && originalAffixStyle)) {\n                onChange(affixed);\n            }\n        });\n    }\n\n    setPlaceholderStyle(placeholderStyle) {\n        const originalPlaceholderStyle = this.state.placeholderStyle;\n        if (shallowequal(placeholderStyle, originalPlaceholderStyle)) {\n            return;\n        }\n        this.setState({ placeholderStyle });\n    }\n\n    syncPlaceholderStyle(e) {\n        const { affixStyle } = this.state;\n        if (!affixStyle) {\n            return;\n        }\n        this.placeholderNode.style.cssText = '';\n        this.setAffixStyle(e, {\n            ...affixStyle,\n            width: this.placeholderNode.offsetWidth,\n        });\n        this.setPlaceholderStyle({\n            width: this.placeholderNode.offsetWidth,\n        });\n    }\n\n    @throttleByAnimationFrameDecorator()\n    updatePosition(e) {\n        const { offsetBottom, offset, target = getDefaultTarget } = this.props;\n        let { offsetTop } = this.props;\n        const targetNode = target();\n\n        // Backwards support\n        offsetTop = offsetTop || offset;\n        const scrollTop = getScroll(targetNode, true);\n        const affixNode = ReactDOM.findDOMNode(this);\n        const elemOffset = getOffset(affixNode, targetNode);\n        const elemSize = {\n            width: this.fixedNode.offsetWidth,\n            height: this.fixedNode.offsetHeight\n        };\n\n        const offsetMode = {\n            top: false,\n            bottom: false\n        };\n        // Default to `offsetTop=0`.\n        if (typeof offsetTop !== 'number' && typeof offsetBottom !== 'number') {\n            offsetMode.top = true;\n            offsetTop = 0;\n        } else {\n            offsetMode.top = typeof offsetTop === 'number';\n            offsetMode.bottom = typeof offsetBottom === 'number';\n        }\n\n        const targetRect = getTargetRect(targetNode);\n        const targetInnerHeight = targetNode.innerHeight || targetNode.clientHeight;\n        if (scrollTop > elemOffset.top - offsetTop && offsetMode.top) {\n            // Fixed Top\n            const width = elemOffset.width;\n            const top = targetRect.top + offsetTop;\n            this.setAffixStyle(e, {\n                position: 'fixed',\n                top,\n                left: targetRect.left + elemOffset.left,\n                width,\n            });\n            this.setPlaceholderStyle({\n                width,\n                height: elemSize.height,\n            });\n        } else if (scrollTop < elemOffset.top + elemSize.height + offsetBottom - targetInnerHeight && offsetMode.bottom) {\n            // Fixed Bottom\n            const targetBottomOffet = targetNode === window ? 0 : (window.innerHeight - targetRect.bottom);\n            const width = elemOffset.width;\n            this.setAffixStyle(e, {\n                position: 'fixed',\n                bottom: targetBottomOffet + offsetBottom,\n                left: targetRect.left + elemOffset.left,\n                width,\n            });\n            this.setPlaceholderStyle({\n                width,\n                height: elemOffset.height,\n            });\n        } else {\n            const { affixStyle } = this.state;\n            if (e.type === 'resize' && affixStyle && affixStyle.position === 'fixed' && affixNode.offsetWidth) {\n                this.setAffixStyle(e, { ...affixStyle, width: affixNode.offsetWidth });\n            } else {\n                this.setAffixStyle(e, null);\n            }\n            this.setPlaceholderStyle(null);\n        }\n\n        if (e.type === 'resize') {\n            this.syncPlaceholderStyle(e);\n        }\n    }\n\n    componentDidMount() {\n        const target = this.props.target || getDefaultTarget;\n        // Wait for parent component ref has its value\n        this.timeout = setTimeout(() => {\n            this.setTargetEventListeners(target);\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.target !== nextProps.target) {\n            this.clearEventListeners();\n            this.setTargetEventListeners(nextProps.target);\n\n            // Mock Event object.\n            this.updatePosition({});\n        }\n    }\n\n    componentWillUnmount() {\n        this.clearEventListeners();\n        clearTimeout(this.timeout);\n        this.updatePosition.cancel();\n    }\n\n    setTargetEventListeners(getTarget) {\n        const target = getTarget();\n        if (!target) {\n            return;\n        }\n        this.clearEventListeners();\n\n        this.events.forEach((eventName) => {\n            this.eventHandlers[eventName] = addEventListener(target, eventName, this.updatePosition);\n        });\n    }\n\n    clearEventListeners() {\n        this.events.forEach((eventName) => {\n            const handler = this.eventHandlers[eventName];\n            if (handler && handler.remove) {\n                handler.remove();\n            }\n        });\n    }\n\n    saveFixedNode = (node) => {\n        this.fixedNode = node;\n    }\n\n    savePlaceholderNode = (node) => {\n        this.placeholderNode = node;\n    }\n\n    render() {\n        const className = classNames({\n            [this.props.prefixCls || 'jc-affix']: this.state.affixStyle\n        });\n\n        const props = omit(this.props, ['prefixCls', 'offsetTop', 'offsetBottom', 'target', 'onChange']);\n        const placeholderStyle = { ...this.state.placeholderStyle, ...this.props.style };\n        return (\n            <div {...props} style={placeholderStyle} ref={this.savePlaceholderNode}>\n                <div className={className} ref={this.saveFixedNode} style={this.state.affixStyle}>\n                    {this.props.children}\n                </div>\n            </div>\n        );\n    }\n}\n"]}