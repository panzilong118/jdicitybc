{"version":3,"sources":["../../components/locale-provider/LocaleReceiver.js"],"names":["React","LocaleReceiverProps","componentName","string","defaultLocale","oneOfType","object","func","children","LocaleReceiverContext","jcLocale","LocaleReceiver","props","context","localeFromContext","localeCode","locale","exist","getLocale","getLocaleCode","Component","contextTypes","propTypes"],"mappings":";;;;;;;;;;;AAIA;;IAAYA,K;;AACZ;;;;;;;;;;;;+eALA;;;;;;AAOO,IAAMC,oDAAsB;AAC/BC,mBAAe,oBAAUC,MADM;AAE/BC,mBAAe,oBAAUC,SAAV,CAAoB,CAAC,oBAAUC,MAAX,EAAmB,oBAAUC,IAA7B,CAApB,CAFgB;AAG/BC,cAAU,oBAAUD;AAHW,CAA5B;;AAMA,IAAME,wDAAwB;AACjCC,cAAU,oBAAUJ;AADa,CAA9B;;IAIcK,c;;;;;;;;;;;oCAOP;AAAA,yBACiC,KAAKC,KADtC;AAAA,gBACAV,aADA,UACAA,aADA;AAAA,gBACeE,aADf,UACeA,aADf;AAAA,gBAEAM,QAFA,GAEa,KAAKG,OAFlB,CAEAH,QAFA;;AAGR,gBAAMI,oBAAoBJ,YAAYA,SAASR,aAAT,CAAtC;AACA,gCACQ,OAAOE,aAAP,KAAyB,UAAzB,GAAsCA,eAAtC,GAAwDA,aADhE,EAEQU,qBAAqB,EAF7B;AAIH;;;wCAEe;AAAA,gBACJJ,QADI,GACS,KAAKG,OADd,CACJH,QADI;;AAEZ,gBAAMK,aAAaL,YAAYA,SAASM,MAAxC;AACA;AACA,gBAAIN,YAAYA,SAASO,KAArB,IAA8B,CAACF,UAAnC,EAA+C;AAC3C,uBAAO,OAAP;AACH;AACD,mBAAOA,UAAP;AACH;;;iCAEQ;AACL,mBAAO,KAAKH,KAAL,CAAWJ,QAAX,CAAoB,KAAKU,SAAL,EAApB,EAAsC,KAAKC,aAAL,EAAtC,CAAP;AACH;;;;EA7ByCnB,MAAMoB,S;;AAA7BT,c,CACZU,Y,GAAe;AAClBX,cAAU,oBAAUJ;AADF,C;AADHK,c,CAKZW,S,gBAAiBrB,mB;kBALLU,c","file":"LocaleReceiver.js","sourcesContent":["/**\r\n * @author chenyanhua\r\n * @version 3.4.1\r\n */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const LocaleReceiverProps = {\r\n    componentName: PropTypes.string,\r\n    defaultLocale: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n    children: PropTypes.func\r\n};\r\n\r\nexport const LocaleReceiverContext = {\r\n    jcLocale: PropTypes.object\r\n};\r\n\r\nexport default class LocaleReceiver extends React.Component {\r\n  static contextTypes = {\r\n      jcLocale: PropTypes.object,\r\n  };\r\n\r\n  static propTypes = { ...LocaleReceiverProps };\r\n\r\n  getLocale() {\r\n      const { componentName, defaultLocale } = this.props;\r\n      const { jcLocale } = this.context;\r\n      const localeFromContext = jcLocale && jcLocale[componentName];\r\n      return {\r\n          ...(typeof defaultLocale === 'function' ? defaultLocale() : defaultLocale),\r\n          ...(localeFromContext || {}),\r\n      };\r\n  }\r\n\r\n  getLocaleCode() {\r\n      const { jcLocale } = this.context;\r\n      const localeCode = jcLocale && jcLocale.locale;\r\n      // Had use LocaleProvide but didn't set locale\r\n      if (jcLocale && jcLocale.exist && !localeCode) {\r\n          return 'en-us';\r\n      }\r\n      return localeCode;\r\n  }\r\n\r\n  render() {\r\n      return this.props.children(this.getLocale(), this.getLocaleCode());\r\n  }\r\n}\r\n"]}