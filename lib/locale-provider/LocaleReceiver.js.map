{"version":3,"sources":["../../components/locale-provider/LocaleReceiver.js"],"names":["React","LocaleReceiverProps","componentName","string","defaultLocale","oneOfType","object","func","children","LocaleReceiverContext","jcLocale","LocaleReceiver","props","context","localeFromContext","localeCode","locale","exist","getLocale","getLocaleCode","Component","contextTypes","propTypes"],"mappings":";;;;;;;;;;;AAIA;;IAAYA,K;;AACZ;;;;;;;;;;;;+eALA;;;;;;AAOO,IAAMC,oDAAsB;AAC/BC,mBAAe,oBAAUC,MADM;AAE/BC,mBAAe,oBAAUC,SAAV,CAAoB,CAAC,oBAAUC,MAAX,EAAmB,oBAAUC,IAA7B,CAApB,CAFgB;AAG/BC,cAAU,oBAAUD;AAHW,CAA5B;;AAMA,IAAME,wDAAwB;AACjCC,cAAU,oBAAUJ;AADa,CAA9B;;IAIcK,c;;;;;;;;;;;oCAOP;AAAA,yBACiC,KAAKC,KADtC;AAAA,gBACAV,aADA,UACAA,aADA;AAAA,gBACeE,aADf,UACeA,aADf;AAAA,gBAEAM,QAFA,GAEa,KAAKG,OAFlB,CAEAH,QAFA;;AAGR,gBAAMI,oBAAoBJ,YAAYA,SAASR,aAAT,CAAtC;AACA,gCACQ,OAAOE,aAAP,KAAyB,UAAzB,GAAsCA,eAAtC,GAAwDA,aADhE,EAEQU,qBAAqB,EAF7B;AAIH;;;wCAEe;AAAA,gBACJJ,QADI,GACS,KAAKG,OADd,CACJH,QADI;;AAEZ,gBAAMK,aAAaL,YAAYA,SAASM,MAAxC;AACA;AACA,gBAAIN,YAAYA,SAASO,KAArB,IAA8B,CAACF,UAAnC,EAA+C;AAC3C,uBAAO,OAAP;AACH;AACD,mBAAOA,UAAP;AACH;;;iCAEQ;AACL,mBAAO,KAAKH,KAAL,CAAWJ,QAAX,CAAoB,KAAKU,SAAL,EAApB,EAAsC,KAAKC,aAAL,EAAtC,CAAP;AACH;;;;EA7ByCnB,MAAMoB,S;;AAA7BT,c,CACZU,Y,GAAe;AAClBX,cAAU,oBAAUJ;AADF,C;AADHK,c,CAKZW,S,gBAAiBrB,mB;kBALLU,c","file":"LocaleReceiver.js","sourcesContent":["/**\n * @author chenyanhua\n * @version 3.4.1\n */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const LocaleReceiverProps = {\n    componentName: PropTypes.string,\n    defaultLocale: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n    children: PropTypes.func\n};\n\nexport const LocaleReceiverContext = {\n    jcLocale: PropTypes.object\n};\n\nexport default class LocaleReceiver extends React.Component {\n  static contextTypes = {\n      jcLocale: PropTypes.object,\n  };\n\n  static propTypes = { ...LocaleReceiverProps };\n\n  getLocale() {\n      const { componentName, defaultLocale } = this.props;\n      const { jcLocale } = this.context;\n      const localeFromContext = jcLocale && jcLocale[componentName];\n      return {\n          ...(typeof defaultLocale === 'function' ? defaultLocale() : defaultLocale),\n          ...(localeFromContext || {}),\n      };\n  }\n\n  getLocaleCode() {\n      const { jcLocale } = this.context;\n      const localeCode = jcLocale && jcLocale.locale;\n      // Had use LocaleProvide but didn't set locale\n      if (jcLocale && jcLocale.exist && !localeCode) {\n          return 'en-us';\n      }\n      return localeCode;\n  }\n\n  render() {\n      return this.props.children(this.getLocale(), this.getLocaleCode());\n  }\n}\n"]}