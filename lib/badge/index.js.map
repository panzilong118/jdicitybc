{"version":3,"sources":["../../components/badge/index.js"],"names":["statusArray","Badge","props","state","count","showZero","prefixCls","scrollNumberPrefixCls","overflowCount","className","style","children","dot","status","text","offset","restProps","displayCount","isZero","isDot","isEmpty","undefined","hidden","statusCls","scrollNumberCls","toString","length","badgeCls","styleWithOffset","marginTop","marginLeft","scrollNumber","statusText","Component","defaultProps","propTypes","oneOfType","string","number","bool","oneOf","array","object"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport classNames from 'classnames';\n\nimport Animate from 'rc-animate';\n\nimport ScrollNumber from './ScrollNumber';\n\nconst statusArray = ['success', 'processing', 'default', 'error', 'warning'];\n\nexport default class Badge extends React.Component {\n     // 默认props\n     static defaultProps = {\n         prefixCls: 'jc-badge', // class前缀\n         scrollNumberPrefixCls: 'jc-scroll-number',\n         count: null,\n         showZero: false,\n         dot: false,\n         overflowCount: 99,\n         className: '',\n         style: {},\n         status: undefined,\n         text: undefined,\n         offset: [],\n     };\n    // props 类型\n    static propTypes = {\n        count: PropTypes.oneOfType([\n            PropTypes.string,\n            PropTypes.number,\n        ]),\n        showZero: PropTypes.bool,\n        dot: PropTypes.bool,\n        overflowCount: PropTypes.number,\n        status: PropTypes.oneOf(statusArray),\n        text: PropTypes.string,\n        offset: PropTypes.array,\n        className: PropTypes.string,\n        style: PropTypes.object,\n        prefixCls: PropTypes.string,\n        scrollNumberPrefixCls: PropTypes.string,\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    render() {\n        const {\n            count,\n            showZero,\n            prefixCls,\n            scrollNumberPrefixCls,\n            overflowCount,\n            className,\n            style,\n            children,\n            dot,\n            status,\n            text,\n            offset,\n            ...restProps\n        } = this.props;\n\n        let displayCount = (count) > (overflowCount) ? `${overflowCount}+` : count;\n        const isZero = displayCount === '0' || displayCount === 0;\n        const isDot = (dot && !isZero) || status;\n\n        // dot mode don't need count\n        if (isDot) {\n            displayCount = '';\n        }\n\n        const isEmpty = displayCount === null || displayCount === undefined || displayCount === '';\n        const hidden = (isEmpty || (isZero && !showZero)) && !isDot;\n\n        const statusCls = classNames({\n            [`${prefixCls}-status-dot`]: !!status,\n            [`${prefixCls}-status-${status}`]: !!status,\n        });\n        const scrollNumberCls = classNames({\n            [`${prefixCls}-dot`]: isDot,\n            [`${prefixCls}-count`]: !isDot,\n            [`${prefixCls}-multiple-words`]: !isDot && count && count.toString && count.toString().length > 1,\n            [`${prefixCls}-status-${status}`]: !!status,\n        });\n        const badgeCls = classNames(className, prefixCls, {\n            [`${prefixCls}-status`]: !!status,\n            [`${prefixCls}-not-a-wrapper`]: !children,\n        });\n        const styleWithOffset = offset ? {\n            marginTop: offset[0],\n            marginLeft: offset[1],\n            ...style,\n        } : style;\n        // <Badge status=\"success\" />\n        if (!children && status) {\n            return (\n                <span className={badgeCls} style={styleWithOffset}>\n                    <span className={statusCls} />\n                    <span className={`${prefixCls}-status-text`}>{text}</span>\n                </span>\n            );\n        }\n    \n        const scrollNumber = hidden ? null : (\n            <ScrollNumber\n                prefixCls={scrollNumberPrefixCls}\n                data-show={!hidden}\n                className={scrollNumberCls}\n                count={displayCount}\n                title={count}\n                style={styleWithOffset}\n            />\n        );\n    \n        const statusText = (hidden || !text) ? null : (\n            <span className={`${prefixCls}-status-text`}>{text}</span>\n        );\n    \n        return (\n            <span {...restProps} className={badgeCls}>\n                {children}\n                <Animate\n                    component=''\n                    showProp='data-show'\n                    transitionName={children ? `${prefixCls}-zoom` : ''}\n                    transitionAppear\n                >\n                    {scrollNumber}\n                </Animate>\n                {statusText}\n            </span>\n        );\n    }\n}\n"]}