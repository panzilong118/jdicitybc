{"version":3,"sources":["../../../components/flow/util/computePosition.js"],"names":["justifyTarget","getAnchorOffset","getAnchorPosition","source","target","getDistance","type","distanceX","distanceY","getValue","origin","offset","distance","Math","abs","x","y","anchorIdx","anchors","width","height","temp","length","Object","assign","getInLineRange","num","small","large","getInRectRange","point","rect","left","right","top","bottom"],"mappings":";;;;;QAKgBA,a,GAAAA,a;QAqBAC,e,GAAAA,e;QAgBAC,iB,GAAAA,iB;;;;AA1ChB;;;;AAIA;AACO,SAASF,aAAT,CAAuBG,MAAvB,EAA+BC,MAA/B,EAAuC;AAC5C,MAAMC,cAAc,SAAdA,WAAc;AAAA,WAAQD,OAAOE,IAAP,IAAeH,OAAOG,IAAP,CAAvB;AAAA,GAApB;AACA,MAAMC,YAAYF,YAAY,GAAZ,CAAlB;AACA,MAAMG,YAAYH,YAAY,GAAZ,CAAlB;;AAEA,MAAMI,WAAW,SAAXA,QAAW,CAACC,MAAD,EAASC,MAAT,EAAiBC,QAAjB;AAAA,WACfA,WAAW,CAAX,GAAeF,SAASC,MAAxB,GAAiCD,SAASC,MAD3B;AAAA,GAAjB;;AAIA,MAAIE,KAAKC,GAAL,CAASP,SAAT,IAAsBM,KAAKC,GAAL,CAASN,SAAT,CAA1B,EAA+C;AAC7C,WAAO;AACLO,SAAGN,SAASL,OAAOW,CAAhB,EAAmB,CAAnB,EAAsBR,SAAtB,CADE;AAELS,SAAGZ,OAAOY;AAFL,KAAP;AAID;AACD,SAAO;AACLD,OAAGX,OAAOW,CADL;AAELC,OAAGP,SAASL,OAAOY,CAAhB,EAAmB,CAAnB,EAAsBR,SAAtB;AAFE,GAAP;AAID;;AAEM,SAASP,eAAT,CAAyBgB,SAAzB,QAAuDC,OAAvD,EAAgE;AAAA,MAA1BC,KAA0B,QAA1BA,KAA0B;AAAA,MAAnBC,MAAmB,QAAnBA,MAAmB;;AACrE,MAAMC,OAAO,CAACJ,YAAY,CAAb,IAAkBE,KAA/B;AACA,MAAMR,SAAS;AACbI,OAAGM,QAAQH,QAAQI,MAAR,GAAiB,CAAzB,CADU;AAEbN,OAAGI;AAFU,GAAf;AAIA;AACAG,SAAOC,MAAP,CAAcN,OAAd,kCAAoCD,SAApC,EAAkDN,MAAlD;AACA,SAAOA,MAAP;AACD;AACD;;;;;;AAMO,SAAST,iBAAT,CAA2Be,SAA3B,EAAsCC,OAAtC,SAAyD;AAAA,MAARH,CAAQ,SAARA,CAAQ;AAAA,MAALC,CAAK,SAALA,CAAK;;AAC9D,MAAML,SAASO,oBAAkBD,SAAlB,CAAf;AACA,MAAI,CAACN,MAAL,EAAa;AACb,SAAO;AACLI,OAAGA,IAAIJ,OAAOI,CADT;AAELC,OAAGA,IAAIL,OAAOK;AAFT,GAAP;AAID;;AAEM,IAAMS,0CAAiB,SAAjBA,cAAiB,CAACC,GAAD,EAAMC,KAAN,EAAaC,KAAb,EAAuB;AACnD,MAAIF,MAAMC,KAAV,EAAiB,OAAOA,KAAP;AACjB,MAAID,MAAME,KAAV,EAAiB,OAAOA,KAAP;AACjB,SAAOF,GAAP;AACD,CAJM;;AAMP;;;;;AAKO,IAAMG,0CAAiB,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,IAAR;AAAA,SAAkB;AAC9ChB,OAAGU,eAAeK,MAAMf,CAArB,EAAwBgB,KAAKC,IAA7B,EAAmCD,KAAKE,KAAxC,CAD2C;AAE9CjB,OAAGS,eAAeK,MAAMd,CAArB,EAAwBe,KAAKG,GAA7B,EAAkCH,KAAKI,MAAvC;AAF2C,GAAlB;AAAA,CAAvB","file":"computePosition.js","sourcesContent":["/**\n * 计算位置参数\n */\n\n// 计算箭头落点\nexport function justifyTarget(source, target) {\n  const getDistance = type => target[type] - source[type];\n  const distanceX = getDistance('x');\n  const distanceY = getDistance('y');\n\n  const getValue = (origin, offset, distance) => (\n    distance > 0 ? origin - offset : origin + offset\n  );\n\n  if (Math.abs(distanceX) > Math.abs(distanceY)) {\n    return {\n      x: getValue(target.x, 0, distanceX),\n      y: target.y\n    };\n  }\n  return {\n    x: target.x,\n    y: getValue(target.y, 0, distanceY)\n  };\n}\n\nexport function getAnchorOffset(anchorIdx, { width, height }, anchors) {\n  const temp = (anchorIdx + 1) * width;\n  const offset = {\n    x: temp / (anchors.length + 1),\n    y: height\n  };\n  // 向宿主节点埋一个属性\n  Object.assign(anchors, { [`offset-${anchorIdx}`]: offset });\n  return offset;\n}\n/**\n *\n * @param {*} anchorIdx\n * @param {*} anchors\n * @param {*} {x, y} node position\n */\nexport function getAnchorPosition(anchorIdx, anchors, { x, y }) {\n  const offset = anchors[`offset-${anchorIdx}`];\n  if (!offset) return;\n  return {\n    x: x + offset.x,\n    y: y + offset.y\n  };\n}\n\nexport const getInLineRange = (num, small, large) => {\n  if (num < small) return small;\n  if (num > large) return large;\n  return num;\n};\n\n/**\n * @param {int} x\n * @param {int} y\n * @param {object} rect {top, bottom, left, right}\n */\nexport const getInRectRange = (point, rect) => ({\n  x: getInLineRange(point.x, rect.left, rect.right),\n  y: getInLineRange(point.y, rect.top, rect.bottom),\n});\n"]}