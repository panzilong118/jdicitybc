{"version":3,"sources":["../../../components/flow/util/drag.js"],"names":["d3","getTranslate","x","y","transform","dragHandler","scale","selector","collection","onEnd","stopPropagation","event","sourceEvent","onDrag","select","call","drag","on","CURVE_TENSION","getLinePath","start","end","startY","endY","line","i","curve","curveCatmullRom"],"mappings":";;;;;;;;;AAAA;;IAAYA,E;;;;AAEL,IAAMC,sCAAe,SAAfA,YAAe;AAAA,MAAGC,CAAH,QAAGA,CAAH;AAAA,MAAMC,CAAN,QAAMA,CAAN;AAAA,SAAe,EAAEC,4BAA0BF,CAA1B,YAAkCC,CAAlC,WAAF,EAAf;AAAA,CAArB;;AAEA,IAAME,oCAAc,SAAdA,WAAc;AAAA,MAACC,KAAD,uEAAS,CAAT;AAAA,SAAe,UAACC,QAAD,EAAWC,UAAX,EAAuBC,KAAvB,EAAiC;AACzE,aAASC,eAAT,GAA2B;AACzBV,SAAGW,KAAH,CAASC,WAAT,CAAqBF,eAArB;AACD;AACD,aAASG,MAAT,GAAkB;AAChB,UAAI,CAACL,UAAL,EAAiB;AADD,sBAECR,GAAGW,KAFJ;AAAA,UAERT,CAFQ,aAERA,CAFQ;AAAA,UAELC,CAFK,aAELA,CAFK;;AAGhBK,iBAAW,EAAEN,GAAGA,IAAII,KAAT,EAAgBH,GAAGA,IAAIG,KAAvB,EAAX;AACD;AACDN,OAAGc,MAAH,CAAUP,QAAV,EAAoBQ,IAApB,CACEf,GAAGgB,IAAH;AACE;AADF,KAEGC,EAFH,CAEM,OAFN,EAEeP,eAFf,EAGGO,EAHH,CAGM,MAHN,EAGcJ,MAHd,EAIGI,EAJH,CAIM,KAJN,EAIaR,KAJb,CADF;AAOD,GAhB0B;AAAA,CAApB;;AAkBP,IAAMS,gBAAgB,EAAtB;AACO,IAAMC,oCAAc,SAAdA,WAAc,QAAkB;AAAA;AAAA,MAAhBC,KAAgB;AAAA,MAATC,GAAS;;AAC3C,MAAI,CAACD,KAAD,IAAU,CAACC,GAAf,EAAoB;;AAEpB,MAAMC,SAAS;AACbpB,OAAGkB,MAAMlB,CADI;AAEbC,OAAGiB,MAAMjB,CAAN,GAAUe;AAFA,GAAf;;AAKA,MAAMK,OAAO;AACXrB,OAAGmB,IAAInB,CADI;AAEXC,OAAGkB,IAAIlB,CAAJ,GAAQe;AAFA,GAAb;;AAKA,SAAOlB,GAAGwB,IAAH,GACJtB,CADI,CACF;AAAA,WAAKuB,EAAEvB,CAAP;AAAA,GADE,EACQC,CADR,CACU;AAAA,WAAKsB,EAAEtB,CAAP;AAAA,GADV,EAEJuB,KAFI,CAEE1B,GAAG2B,eAFL,EAGH,CAACP,KAAD,EAAQE,MAAR,EAAgBC,IAAhB,EAAsBF,GAAtB,CAHG,CAAP;AAKD,CAlBM","file":"drag.js","sourcesContent":["import * as d3 from './d3';\n\nexport const getTranslate = ({ x, y }) => ({ transform: `translate3d(${x}px, ${y}px, 0)` });\n\nexport const dragHandler = (scale = 1) => (selector, collection, onEnd) => {\n  function stopPropagation() {\n    d3.event.sourceEvent.stopPropagation();\n  }\n  function onDrag() {\n    if (!collection) return;\n    const { x, y } = d3.event;\n    collection({ x: x / scale, y: y / scale });\n  }\n  d3.select(selector).call(\n    d3.drag()\n      // .subject(subject)\n      .on('start', stopPropagation)\n      .on('drag', onDrag)\n      .on('end', onEnd)\n  );\n};\n\nconst CURVE_TENSION = 20;\nexport const getLinePath = ([start, end]) => {\n  if (!start || !end) return;\n\n  const startY = {\n    x: start.x,\n    y: start.y + CURVE_TENSION\n  };\n\n  const endY = {\n    x: end.x,\n    y: end.y - CURVE_TENSION\n  };\n\n  return d3.line()\n    .x(i => i.x).y(i => i.y)\n    .curve(d3.curveCatmullRom)(\n      [start, startY, endY, end]\n    );\n};\n"]}