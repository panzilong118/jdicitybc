{"version":3,"sources":["../../components/form/FormItem.js"],"names":["React","ReactDOM","FormItem","arguments","onLabelClick","e","label","props","id","getId","controls","document","querySelectorAll","length","preventDefault","control","findDOMNode","querySelector","focus","args","shouldComponentUpdate","apply","onlyControl","getOnlyControl","help","undefined","errors","getField","map","message","join","children","recursively","childrenArray","Children","toArray","i","child","type","displayName","push","concat","getControls","prop","getChildProp","prefixCls","getHelpMsg","extra","field","validating","fieldValue","value","getMeta","initialValue","c1","c2","c3","validateStatus","getValidateStatus","classes","hasFeedback","wrapperCol","className","required","meta","validate","filter","item","rules","some","rule","labelCol","colon","context","isRequired","labelColClassName","labelClassName","labelChildren","haveColon","vertical","trim","replace","renderLabel","renderWrapper","renderValidateWrapper","renderHelp","renderExtra","style","itemClassName","renderChildren","renderFormItem","Component","defaultProps","propTypes","string","oneOfType","node","object","bool","oneOf","contextTypes"],"mappings":"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","file":"FormItem.js","sourcesContent":["/**\n * Created by huangxiao3 on 2018/3/20.\n */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Animate from 'rc-animate';\nimport PureRenderMixin from 'rc-util/lib/PureRenderMixin';\nimport Row from '../grid/row';\nimport Col from '../grid/col';\n// import warning from '../_util/warning';\n// FIELD_META_PROP : 元数据 通过getFieldDecarater绑定过的组件,在props中会增加FIELD_META_PROP字段\n// 存储了name(唯一ID),initialValue,rules(array),originalProps(disabled,prefixCls,style,type),trigger(:String),validate([{rules,trigger}]),valuePropName,value\n// data-__field 存储:validating,errors,value\nimport { FIELD_META_PROP, FIELD_DATA_PROP } from './constants';\nexport default class FormItem extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Resolve duplicated ids bug between different forms\n        // https://github.com/ant-design/ant-design/issues/7351\n        this.onLabelClick = (e) => {\n            const { label } = this.props;\n            const id = this.props.id || this.getId();\n            if (!id) {\n                return;\n            }\n            const controls = document.querySelectorAll(`[id=\"${id}\"]`);\n            if (controls.length !== 1) {\n                // Only prevent in default situation\n                // Avoid preventing event in `label={<a href=\"xx\">link</a>}``\n                if (typeof label === 'string') {\n                    e.preventDefault();\n                }\n                const control = ReactDOM.findDOMNode(this).querySelector(`[id=\"${id}\"]`);\n                if (control && control.focus) {\n                    control.focus();\n                }\n            }\n        };\n    }\n    componentDidMount() {\n        // warning(this.getControls(this.props.children, true).length <= 1, '`Form.Item` cannot generate `validateStatus` and `help` automatically, ' +\n        //     'while there are more than one `getFieldDecorator` in it.');\n    }\n    shouldComponentUpdate(...args) {\n        return PureRenderMixin.shouldComponentUpdate.apply(this, args);\n    }\n\n    // 获取错误时的帮助信息。\n    getHelpMsg() {\n        const props = this.props;\n        // onlyControl->React-element\n        const onlyControl = this.getOnlyControl();\n        if (props.help === undefined && onlyControl) {\n            const errors = this.getField().errors;\n            return errors ? errors.map((e) => e.message).join(', ') : '';\n        }\n        return props.help;\n    }\n    // 遍历找到受控(getFieldDecorator)组件,返回react-element\n    getControls(children, recursively) {\n        let controls = [];\n        const childrenArray = React.Children.toArray(children);\n        for (let i = 0; i < childrenArray.length; i++) {\n            if (!recursively && controls.length > 0) {\n                break;\n            }\n            const child = childrenArray[i];\n            if (child.type &&\n                (child.type === FormItem || child.type.displayName === 'FormItem')) {\n                continue;\n            }\n            if (!child.props) {\n                continue;\n            }\n            if (FIELD_META_PROP in child.props) {\n                controls.push(child);\n            }\n            else if (child.props.children) {\n                controls = controls.concat(this.getControls(child.props.children, recursively));\n            }\n        }\n        return controls;\n    }\n    // 获取第一个的受控组件（期望FormItem下只包含一个组件）。因此可以理解为，formitem下不可饱含多个输入组件，过多时只接受第一个的值。\n    getOnlyControl() {\n        const child = this.getControls(this.props.children, false)[0];\n        return child !== undefined ? child : null;\n    }\n    getChildProp(prop) {\n        const child = this.getOnlyControl();\n        return child && child.props && child.props[prop];\n    }\n    getId() {\n        return this.getChildProp('id');\n    }\n    getMeta() {\n        return this.getChildProp(FIELD_META_PROP);\n    }\n    getField() {\n        return this.getChildProp(FIELD_DATA_PROP);\n    }\n    // 调用Animate动画组件，展示help文案/组件\n    renderHelp() {\n        const prefixCls = this.props.prefixCls;\n        const help = this.getHelpMsg();\n        const children = help ? (<div className={`${prefixCls}-explain`} key=\"help\">\n            {help}\n        </div>) : null;\n        return (<Animate transitionName=\"show-help\" component=\"\" transitionAppear key=\"help\">\n            {children}\n        </Animate>);\n    }\n    // 获取formitem需要展示的额外信息extra的string/组件\n    renderExtra() {\n        const { prefixCls, extra } = this.props;\n        return extra ? (<div className={`${prefixCls}-extra`}>{extra}</div>) : null;\n    }\n\n    // 获取校验状态\n    getValidateStatus() {\n        const onlyControl = this.getOnlyControl();\n        if (!onlyControl) {\n            return '';\n        }\n        const field = this.getField();\n        if (field.validating) {\n            return 'validating';\n        }\n        if (field.errors) {\n            return 'error';\n        }\n        const fieldValue = 'value' in field ? field.value : this.getMeta().initialValue;\n        if (fieldValue !== undefined && fieldValue !== null && fieldValue !== '') {\n            return 'success';\n        }\n        return '';\n    }\n    // 生成校验样式包装\n    // argument:children,help,extra\n    renderValidateWrapper(c1, c2, c3) {\n        const props = this.props;\n        const onlyControl = this.getOnlyControl;\n        const validateStatus = (props.validateStatus === undefined && onlyControl) ?\n            this.getValidateStatus() :\n            props.validateStatus;\n        let classes = `${this.props.prefixCls}-item-control`;\n        if (validateStatus) {\n            classes = classNames(`${this.props.prefixCls}-item-control`, {\n                'has-feedback': props.hasFeedback || validateStatus === 'validating',\n                'has-success': validateStatus === 'success',\n                'has-warning': validateStatus === 'warning',\n                'has-error': validateStatus === 'error',\n                'is-validating': validateStatus === 'validating',\n            });\n        }\n        return (<div className={classes}>\n            <span className={`${this.props.prefixCls}-item-children`}>{c1}</span>\n            {c2}{c3}\n        </div>);\n    }\n    // 根据props中的wrapperCol进行渲染\n    renderWrapper(children) {\n        const { prefixCls, wrapperCol } = this.props;\n        const className = classNames(`${prefixCls}-item-control-wrapper`, wrapperCol && wrapperCol.className);\n        return (<Col {...wrapperCol} className={className} key=\"wrapper\">\n            {children}\n        </Col>);\n    }\n    isRequired() {\n        const { required } = this.props;\n        if (required !== undefined) {\n            return required;\n        }\n        if (this.getOnlyControl()) {\n            const meta = this.getMeta() || {};\n            const validate = meta.validate || [];\n            return validate.filter((item) => !!item.rules).some((item) => {\n                return item.rules.some((rule) => rule.required);\n            });\n        }\n        return false;\n    }\n\n    // 渲染数据名称项\n    renderLabel() {\n        const { prefixCls, label, labelCol, colon, id } = this.props;\n        const context = this.context;\n        const required = this.isRequired();\n        const labelColClassName = classNames(`${prefixCls}-item-label`, labelCol && labelCol.className);\n        const labelClassName = classNames({\n            [`${prefixCls}-item-required`]: required,\n        });\n        let labelChildren = label;\n        // Keep label is original where there should have no colon\n        const haveColon = colon && !context.vertical;\n        // Remove duplicated user input colon\n        if (haveColon && typeof label === 'string' && label.trim() !== '') {\n            labelChildren = label.replace(/[：|:]\\s*$/, '');\n        }\n        return label ? (<Col {...labelCol} className={labelColClassName} key=\"label\">\n            <label htmlFor={id || this.getId()} className={labelClassName} title={typeof label === 'string' ? label : ''} onClick={this.onLabelClick}>\n                {labelChildren}\n            </label>\n        </Col>) : null;\n    }\n\n    renderChildren() {\n        const { children } = this.props;\n        return [\n            this.renderLabel(),\n            this.renderWrapper(this.renderValidateWrapper(children, this.renderHelp(), this.renderExtra())),\n        ];\n    }\n\n    // 最终渲染\n    renderFormItem(children) {\n        const props = this.props;\n        const prefixCls = props.prefixCls;\n        const style = props.style;\n        const itemClassName = {\n            [`${prefixCls}-item`]: true,\n            [`${prefixCls}-item-with-help`]: !!this.getHelpMsg(),\n            [`${prefixCls}-item-no-colon`]: !props.colon,\n            [`${props.className}`]: !!props.className,\n        };\n        return (<Row className={classNames(itemClassName)} style={style}>\n            {children}\n        </Row>);\n    }\n    render() {\n        const children = this.renderChildren();\n        return this.renderFormItem(children);\n    }\n}\nFormItem.defaultProps = {\n    hasFeedback: false,\n    prefixCls: 'jc-form',\n    colon: true,\n};\nFormItem.propTypes = {\n    prefixCls: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    labelCol: PropTypes.object,\n    help: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    validateStatus: PropTypes.oneOf(['', 'success', 'warning', 'error', 'validating']),\n    hasFeedback: PropTypes.bool,\n    wrapperCol: PropTypes.object,\n    className: PropTypes.string,\n    id: PropTypes.string,\n    children: PropTypes.node,\n    colon: PropTypes.bool,\n};\nFormItem.contextTypes = {\n    vertical: PropTypes.bool,\n};\n"]}