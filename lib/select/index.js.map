{"version":3,"sources":["../../components/select/index.js"],"names":["React","Select","props","saveSelect","node","rcSelect","renderSelect","locale","prefixCls","className","size","mode","restProps","cls","optionLabelProp","isCombobox","modeConfig","multiple","tags","combobox","getNotFoundContent","undefined","notFoundContent","focus","blur","Component","Option","OptGroup","defaultProps","showSearch","transitionName","choiceTransitionName","propTypes","string","oneOf","bool","any"],"mappings":";;;;;;;;;;;AAGA;;IAAYA,K;;AAEZ;;;;AAEA;;;;AAEA;;;;AAEA;;;;AAEA;;;;;;;;;;;;;;;;+eAbA;;;;;IAeqBC,M;;;AACjB;AAIA,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACTA,KADS;;AAAA,cAoBnBC,UApBmB,GAoBN,UAACC,IAAD,EAAU;AACnB,kBAAKC,QAAL,GAAgBD,IAAhB;AACH,SAtBkB;;AAAA,cAuBnBE,YAvBmB,GAuBJ,UAACC,MAAD,EAAY;AAAA;;AAAA,8BAOnB,MAAKL,KAPc;AAAA,gBAEnBM,SAFmB,eAEnBA,SAFmB;AAAA,oDAGnBC,SAHmB;AAAA,gBAGnBA,SAHmB,yCAGP,EAHO;AAAA,gBAInBC,IAJmB,eAInBA,IAJmB;AAAA,gBAKnBC,IALmB,eAKnBA,IALmB;AAAA,gBAMhBC,SANgB;;AAQvB,gBAAMC,MAAM,0BAAWJ,SAAX,kDACJD,SADI,UACaE,SAAS,OADtB,gCAEJF,SAFI,UAEaE,SAAS,OAFtB,gBAAZ;AARuB,gBAYjBI,eAZiB,GAYG,MAAKZ,KAZR,CAYjBY,eAZiB;;AAavB,gBAAMC,aAAaJ,SAAS,UAA5B;AACA,gBAAII,UAAJ,EAAgB;AACZ;AACAD,kCAAkBA,mBAAmB,OAArC;AACH;AACD,gBAAME,aAAa;AACfC,0BAAUN,SAAS,UADJ;AAEfO,sBAAMP,SAAS,MAFA;AAGfQ,0BAAUJ;AAHK,aAAnB;AAKA,mBACI,qDACQH,SADR,EAEQI,UAFR;AAGI,2BAAWR,SAHf;AAII,2BAAWK,GAJf;AAKI,iCAAiBC,mBAAmB,UALxC;AAMI,iCAAiB,MAAKM,kBAAL,CAAwBb,MAAxB,CANrB;AAOI,qBAAK,MAAKJ;AAPd,eADJ;AAWH,SAzDkB;;AAEf,cAAKE,QAAL,GAAgBgB,SAAhB;AAFe;AAGlB;;;;2CAEkBd,M,EAAQ;AAAA,yBACW,KAAKL,KADhB;AAAA,gBACfoB,eADe,UACfA,eADe;AAAA,gBACEX,IADF,UACEA,IADF;;AAEvB,gBAAMI,aAAaJ,SAAS,UAA5B;AACA,gBAAII,UAAJ,EAAgB;AACZ,uBAAOO,oBAAoBD,SAApB,GAAgC,IAAhC,GAAuCC,eAA9C;AACH;AACD,mBAAOA,oBAAoBD,SAApB,GAAgCd,OAAOe,eAAvC,GAAyDA,eAAhE;AACH;;;gCACO;AACJ,iBAAKjB,QAAL,CAAckB,KAAd;AACH;;;+BACM;AACH,iBAAKlB,QAAL,CAAcmB,IAAd;AACH;;;iCAwCQ;AACL,mBACI;AAAA;AAAA;AACI,mCAAc,QADlB;AAEI,mCAAe,kBAAcvB;AAFjC;AAIK,qBAAKK;AAJV,aADJ;AAQH;;;;EAxE+BN,MAAMyB,S;AA0E1C;;;AA1EqBxB,M,CAEVyB,M;AAFUzB,M,CAGV0B,Q;kBAHU1B,M;AA2ErBA,OAAO2B,YAAP,GAAsB;AAClBpB,eAAW,WADO;AAElBqB,gBAAY,KAFM;AAGlBC,oBAAgB,UAHE;AAIlBC,0BAAsB;AAJJ,CAAtB;AAMA;AACA9B,OAAO+B,SAAP,GAAmB;AACfxB,eAAW,oBAAUyB,MADN;AAEfxB,eAAW,oBAAUwB,MAFN;AAGfvB,UAAM,oBAAUwB,KAAV,CAAgB,CAAC,OAAD,EAAU,SAAV,EAAqB,OAArB,CAAhB,CAHS;AAIff,cAAU,oBAAUgB,IAJL;AAKfb,qBAAiB,oBAAUc,GALZ;AAMfP,gBAAY,oBAAUM,IANP;AAOfrB,qBAAiB,oBAAUmB,MAPZ;AAQfH,oBAAgB,oBAAUG,MARX;AASfF,0BAAsB,oBAAUE;AATjB,CAAnB","file":"index.js","sourcesContent":["/**\r\n * Created by gaoqingli on 2018/3/30.\r\n */\r\nimport * as React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport RcSelect, { Option, OptGroup } from 'rc-select';\r\n\r\nimport classNames from 'classnames';\r\n\r\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\r\n\r\nimport defaultLocale from '../locale-provider/default';\r\n\r\nexport default class Select extends React.Component {\r\n    // static rcSelect;\r\n    static Option = Option;\r\n    static OptGroup = OptGroup;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.rcSelect = undefined;\r\n    }\r\n\r\n    getNotFoundContent(locale) {\r\n        const { notFoundContent, mode } = this.props;\r\n        const isCombobox = mode === 'combobox';\r\n        if (isCombobox) {\r\n            return notFoundContent === undefined ? null : notFoundContent;\r\n        }\r\n        return notFoundContent === undefined ? locale.notFoundContent : notFoundContent;\r\n    }\r\n    focus() {\r\n        this.rcSelect.focus();\r\n    }\r\n    blur() {\r\n        this.rcSelect.blur();\r\n    }\r\n\r\n    saveSelect = (node) => {\r\n        this.rcSelect = node;\r\n    }\r\n    renderSelect = (locale) => {\r\n        const {\r\n            prefixCls,\r\n            className = '',\r\n            size,\r\n            mode,\r\n            ...restProps\r\n        } = this.props;\r\n        const cls = classNames(className, {\r\n            [`${prefixCls}-lg`]: size === 'large',\r\n            [`${prefixCls}-sm`]: size === 'small',\r\n        });\r\n        let { optionLabelProp } = this.props;\r\n        const isCombobox = mode === 'combobox';\r\n        if (isCombobox) {\r\n            // children 带 dom 结构时，无法填入输入框\r\n            optionLabelProp = optionLabelProp || 'value';\r\n        }\r\n        const modeConfig = {\r\n            multiple: mode === 'multiple',\r\n            tags: mode === 'tags',\r\n            combobox: isCombobox,\r\n        };\r\n        return (\r\n            <RcSelect\r\n                {...restProps}\r\n                {...modeConfig}\r\n                prefixCls={prefixCls}\r\n                className={cls}\r\n                optionLabelProp={optionLabelProp || 'children'}\r\n                notFoundContent={this.getNotFoundContent(locale)}\r\n                ref={this.saveSelect}\r\n            />\r\n        );\r\n    }\r\n    render() {\r\n        return (\r\n            <LocaleReceiver\r\n                componentName='Select'\r\n                defaultLocale={defaultLocale.Select}\r\n            >\r\n                {this.renderSelect}\r\n            </LocaleReceiver>\r\n        );\r\n    }\r\n}\r\n// 默认状态\r\nSelect.defaultProps = {\r\n    prefixCls: 'jc-select',\r\n    showSearch: false,\r\n    transitionName: 'slide-up',\r\n    choiceTransitionName: 'zoom',\r\n};\r\n// 参数类型校验\r\nSelect.propTypes = {\r\n    prefixCls: PropTypes.string,\r\n    className: PropTypes.string,\r\n    size: PropTypes.oneOf(['large', 'default', 'small']),\r\n    combobox: PropTypes.bool,\r\n    notFoundContent: PropTypes.any,\r\n    showSearch: PropTypes.bool,\r\n    optionLabelProp: PropTypes.string,\r\n    transitionName: PropTypes.string,\r\n    choiceTransitionName: PropTypes.string,\r\n};\r\n"]}