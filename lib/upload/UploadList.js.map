{"version":3,"sources":["../../components/upload/UploadList.js"],"names":["React","previewFile","file","callback","reader","FileReader","onloadend","result","readAsDataURL","extname","url","temp","split","filename","length","filenameWithoutSuffix","exec","isImageUrl","extension","test","UploadList","handleClose","onRemove","props","handlePreview","e","onPreview","preventDefault","listType","items","forEach","document","window","File","originFileObj","thumbUrl","undefined","previewDataUrl","forceUpdate","prefixCls","showPreviewIcon","showRemoveIcon","locale","list","map","progress","icon","status","uploading","thumbnail","name","loadingProgress","progressAttr","percent","infoUploadingClass","preview","linkProps","style","pointerEvents","opacity","previewIcon","removeIcon","removeFile","removeIconCross","actions","message","response","error","statusText","uploadError","iconAndPreview","uid","listClassNames","animationDirection","Component","defaultProps","strokeWidth","showInfo"],"mappings":"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","file":"UploadList.js","sourcesContent":["import * as React from 'react';\r\nimport Animate from 'rc-animate';\r\nimport Icon from '../icon';\r\nimport Tooltip from '../tooltip';\r\nimport Progress from '../progress';\r\nimport classNames from 'classnames';\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsDataURL\r\nconst previewFile = (file, callback) => {\r\n  const reader = new FileReader();\r\n  reader.onloadend = () => callback(reader.result);\r\n  reader.readAsDataURL(file);\r\n};\r\n\r\nconst extname = (url) => {\r\n  if (!url) {\r\n    return '';\r\n  }\r\n  const temp = url.split('/');\r\n  const filename = temp[temp.length - 1];\r\n  const filenameWithoutSuffix = filename.split(/\\#|\\?/)[0];\r\n  return (/\\.[^./\\\\]*$/.exec(filenameWithoutSuffix) || [''])[0];\r\n};\r\n\r\nconst isImageUrl = (url) => {\r\n  const extension = extname(url);\r\n  if (/^data:image\\//.test(url) || /(webp|svg|png|gif|jpg|jpeg|bmp)$/.test(extension)) {\r\n    return true;\r\n  } else if (/^data:/.test(url)) { // other file types of base64\r\n    return false;\r\n  } else if (extension) { // other file types which have extension\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nexport default class UploadList extends React.Component {\r\n  static defaultProps = {\r\n    listType: 'text',  // or picture\r\n    progressAttr: {\r\n      strokeWidth: 2,\r\n      showInfo: false,\r\n    },\r\n    prefixCls: 'jc-upload',\r\n    showRemoveIcon: true,\r\n    showPreviewIcon: true,\r\n  };\r\n\r\n  handleClose = (file) => {\r\n    const { onRemove } = this.props;\r\n    if (onRemove) {\r\n      onRemove(file);\r\n    }\r\n  }\r\n\r\n  handlePreview = (file, e) => {\r\n    const { onPreview } = this.props;\r\n    if (!onPreview) {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    return onPreview(file);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.listType !== 'picture' && this.props.listType !== 'picture-card') {\r\n      return;\r\n    }\r\n    (this.props.items || []).forEach(file => {\r\n      if (typeof document === 'undefined' ||\r\n          typeof window === 'undefined' ||\r\n          !window.FileReader || !window.File ||\r\n          !(file.originFileObj instanceof File) ||\r\n          file.thumbUrl !== undefined) {\r\n        return;\r\n      }\r\n      /*eslint-disable */\r\n      file.thumbUrl = '';\r\n      /*eslint-enable */\r\n      previewFile(file.originFileObj, (previewDataUrl) => {\r\n        /*eslint-disable */\r\n        file.thumbUrl = previewDataUrl;\r\n        /*eslint-enable */\r\n        this.forceUpdate();\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { prefixCls, items = [], listType, showPreviewIcon, showRemoveIcon, locale } = this.props;\r\n    const list = items.map(file => {\r\n      let progress;\r\n      let icon = <Icon type={file.status === 'uploading' ? 'loading' : 'paper-clip'} />;\r\n\r\n      if (listType === 'picture' || listType === 'picture-card') {\r\n        if (listType === 'picture-card' && file.status === 'uploading') {\r\n          icon = <div className={`${prefixCls}-list-item-uploading-text`}>{locale.uploading}</div>;\r\n        } else if (!file.thumbUrl && !file.url) {\r\n          icon = <Icon className={`${prefixCls}-list-item-thumbnail`} type=\"picture\" />;\r\n        } else {\r\n          let thumbnail = isImageUrl(file.thumbUrl || file.url)\r\n            ? <img src={file.thumbUrl || file.url} alt={file.name} />\r\n            : <Icon type=\"file\" className={`${prefixCls}-list-item-icon`} />;\r\n          icon = (\r\n            <a\r\n              className={`${prefixCls}-list-item-thumbnail`}\r\n              onClick={e => this.handlePreview(file, e)}\r\n              href={file.url || file.thumbUrl}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {thumbnail}\r\n            </a>\r\n          );\r\n        }\r\n      }\r\n\r\n      if (file.status === 'uploading') {\r\n        // show loading icon if upload progress listener is disabled\r\n        const loadingProgress = ('percent' in file) ? (\r\n          <Progress type=\"line\" {...this.props.progressAttr} percent={file.percent} />\r\n        ) : null;\r\n\r\n        progress = (\r\n          <div className={`${prefixCls}-list-item-progress`} key=\"progress\">\r\n            {loadingProgress}\r\n          </div>\r\n        );\r\n      }\r\n      const infoUploadingClass = classNames({\r\n        [`${prefixCls}-list-item`]: true,\r\n        [`${prefixCls}-list-item-${file.status}`]: true,\r\n      });\r\n      const preview = file.url ? (\r\n        <a\r\n          {...file.linkProps}\r\n          href={file.url}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          className={`${prefixCls}-list-item-name`}\r\n          onClick={e => this.handlePreview(file, e)}\r\n          title={file.name}\r\n        >\r\n          {file.name}\r\n        </a>\r\n      ) : (\r\n        <span\r\n          className={`${prefixCls}-list-item-name`}\r\n          onClick={e => this.handlePreview(file, e)}\r\n          title={file.name}\r\n        >\r\n          {file.name}\r\n        </span>\r\n      );\r\n      const style = {\r\n        pointerEvents: 'none',\r\n        opacity: 0.5,\r\n      };\r\n      const previewIcon = showPreviewIcon ? (\r\n        <a\r\n          href={file.url || file.thumbUrl}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          style={(file.url || file.thumbUrl) ? undefined : style}\r\n          onClick={e => this.handlePreview(file, e)}\r\n          title={locale.previewFile}\r\n        >\r\n          <Icon type=\"eye-o\" />\r\n        </a>\r\n      ) : null;\r\n      const removeIcon = showRemoveIcon ? (\r\n        <Icon type=\"delete\" title={locale.removeFile} onClick={() => this.handleClose(file)} />\r\n      ) : null;\r\n      const removeIconCross = showRemoveIcon ? (\r\n        <Icon type=\"cross\" title={locale.removeFile} onClick={() => this.handleClose(file)} />\r\n      ) : null;\r\n      const actions = (listType === 'picture-card' && file.status !== 'uploading')\r\n        ? <span className={`${prefixCls}-list-item-actions`}>{previewIcon}{removeIcon}</span>\r\n        : removeIconCross;\r\n      let message;\r\n      if (file.response && typeof file.response === 'string') {\r\n        message = file.response;\r\n      } else {\r\n        message = (file.error && file.error.statusText) || locale.uploadError;\r\n      }\r\n      const iconAndPreview = (file.status === 'error')\r\n        ? <Tooltip title={message}>{icon}{preview}</Tooltip>\r\n        : <span>{icon}{preview}</span>;\r\n\r\n      return (\r\n        <div className={infoUploadingClass} key={file.uid}>\r\n          <div className={`${prefixCls}-list-item-info`}>\r\n            {iconAndPreview}\r\n          </div>\r\n          {actions}\r\n          <Animate transitionName=\"fade\" component=\"\">\r\n            {progress}\r\n          </Animate>\r\n        </div>\r\n      );\r\n    });\r\n    const listClassNames = classNames({\r\n      [`${prefixCls}-list`]: true,\r\n      [`${prefixCls}-list-${listType}`]: true,\r\n    });\r\n    const animationDirection =\r\n      listType === 'picture-card' ? 'animate-inline' : 'animate';\r\n    return (\r\n      <Animate\r\n        transitionName={`${prefixCls}-${animationDirection}`}\r\n        component=\"div\"\r\n        className={listClassNames}\r\n      >\r\n        {list}\r\n      </Animate>\r\n    );\r\n  }\r\n}\r\n"]}