{"version":3,"sources":["../../components/upload/Upload.js"],"names":["React","Upload","props","onStart","file","targetItem","nextFileList","state","fileList","concat","status","push","onChange","window","FormData","autoUpdateProgress","onSuccess","response","clearProgressTimer","JSON","parse","e","onProgress","percent","event","onError","error","handleManualRemove","upload","abort","handleRemove","info","setState","onFileDrop","dragState","type","beforeUpload","result","map","item","uid","then","saveUpload","node","renderUploadList","locale","showUploadList","listType","onPreview","showRemoveIcon","showPreviewIcon","defaultFileList","progressTimer","_","getPercent","curPercent","setInterval","onRemove","Promise","resolve","ret","removedFileList","nextProps","clearInterval","prefixCls","className","disabled","children","rcUploadProps","uploadList","dragCls","some","uploadButtonCls","uploadButton","display","Component","defaultProps","multiple","action","data","accept","supportServerRender"],"mappings":"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","file":"Upload.js","sourcesContent":["import * as React from 'react';\nimport RcUpload from 'rc-upload';\nimport classNames from 'classnames';\nimport uniqBy from 'lodash/uniqBy';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale-provider/default';\nimport Dragger from './Dragger';\nimport UploadList from './UploadList';\nimport { T, fileToObject, genPercentAdd, getFileItem, removeFileItem } from './utils';\n\nexport default class Upload extends React.Component {\n\n  static defaultProps = {\n    prefixCls: 'jc-upload',\n    type: 'select',\n    multiple: false,\n    action: '',\n    data: {},\n    accept: '',\n    beforeUpload: T,\n    showUploadList: true,\n    listType: 'text', // or pictrue\n    className: '',\n    disabled: false,\n    supportServerRender: true,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fileList: props.fileList || props.defaultFileList || [],\n      dragState: 'drop',\n    };\n    this.progressTimer;\n    this.upload;\n  }\n\n  componentWillUnmount() {\n    this.clearProgressTimer();\n  }\n\n  onStart = (file) => {\n    let targetItem;\n    let nextFileList = this.state.fileList.concat();\n    targetItem = fileToObject(file);\n    targetItem.status = 'uploading';\n    nextFileList.push(targetItem);\n    this.onChange({\n      file: targetItem,\n      fileList: nextFileList,\n    });\n    // fix ie progress\n    if (!window.FormData) {\n      this.autoUpdateProgress(0, targetItem);\n    }\n  }\n\n  autoUpdateProgress(_, file) {\n    const getPercent = genPercentAdd();\n    let curPercent = 0;\n    this.clearProgressTimer();\n    this.progressTimer = setInterval(() => {\n      curPercent = getPercent(curPercent);\n      this.onProgress({\n        percent: curPercent,\n      }, file);\n    }, 200);\n  }\n\n  onSuccess = (response, file) => {\n    this.clearProgressTimer();\n    try {\n      if (typeof response === 'string') {\n        response = JSON.parse(response);\n      }\n    } catch (e) { /* do nothing */\n    }\n    let fileList = this.state.fileList;\n    let targetItem = getFileItem(file, fileList);\n    // removed\n    if (!targetItem) {\n      return;\n    }\n    targetItem.status = 'done';\n    targetItem.response = response;\n    this.onChange({\n      file: { ...targetItem },\n      fileList,\n    });\n  }\n\n  onProgress = (e, file) => {\n    let fileList = this.state.fileList;\n    let targetItem = getFileItem(file, fileList);\n    // removed\n    if (!targetItem) {\n      return;\n    }\n    targetItem.percent = e.percent;\n    this.onChange({\n      event: e,\n      file: { ...targetItem },\n      fileList: this.state.fileList,\n    });\n  }\n\n  onError = (error, response, file) => {\n    this.clearProgressTimer();\n    let fileList = this.state.fileList;\n    let targetItem = getFileItem(file, fileList);\n    // removed\n    if (!targetItem) {\n      return;\n    }\n    targetItem.error = error;\n    targetItem.response = response;\n    targetItem.status = 'error';\n    this.onChange({\n      file: { ...targetItem },\n      fileList,\n    });\n  }\n\n  handleRemove(file) {\n    const { onRemove } = this.props;\n\n    Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(ret => {\n      // Prevent removing file\n      if (ret === false) {\n        return;\n      }\n\n      const removedFileList = removeFileItem(file, this.state.fileList);\n      if (removedFileList) {\n        this.onChange({\n          file,\n          fileList: removedFileList,\n        });\n      }\n    });\n  }\n\n  handleManualRemove = (file) => {\n    this.upload.abort(file);\n    file.status = 'removed'; // eslint-disable-line\n    this.handleRemove(file);\n  }\n\n  onChange = (info) => {\n    if (!('fileList' in this.props)) {\n      this.setState({ fileList: info.fileList });\n    }\n\n    const { onChange } = this.props;\n    if (onChange) {\n      onChange(info);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if ('fileList' in nextProps) {\n      this.setState({\n        fileList: nextProps.fileList || [],\n      });\n    }\n  }\n\n  onFileDrop = (e) => {\n    this.setState({\n      dragState: e.type,\n    });\n  }\n\n  beforeUpload = (file, fileList) => {\n    if (!this.props.beforeUpload) {\n      return true;\n    }\n    const result = this.props.beforeUpload(file, fileList);\n    if (result === false) {\n      this.onChange({\n        file: fileToObject(file),\n        fileList: uniqBy(fileList.map(fileToObject).concat(this.state.fileList),  (item) => item.uid),\n      });\n      return false;\n    } else if (result && result.then) {\n      return result;\n    }\n    return true;\n  }\n\n  clearProgressTimer() {\n    clearInterval(this.progressTimer);\n  }\n\n  saveUpload = (node) => {\n    this.upload = node;\n  }\n\n  renderUploadList = (locale) => {\n    const { showUploadList, listType, onPreview } = this.props;\n    const { showRemoveIcon, showPreviewIcon } = showUploadList;\n    return (\n      <UploadList\n        listType={listType}\n        items={this.state.fileList}\n        onPreview={onPreview}\n        onRemove={this.handleManualRemove}\n        showRemoveIcon={showRemoveIcon}\n        showPreviewIcon={showPreviewIcon}\n        locale={{ ...locale, ...this.props.locale }}\n      />\n    );\n  }\n\n  render() {\n    const {\n      prefixCls = '',\n      className,\n      showUploadList,\n      listType,\n      type,\n      disabled,\n      children,\n    } = this.props;\n\n    const rcUploadProps = {\n      onStart: this.onStart,\n      onError: this.onError,\n      onProgress: this.onProgress,\n      onSuccess: this.onSuccess,\n      ...this.props,\n      beforeUpload: this.beforeUpload,\n    };\n\n    delete rcUploadProps.className;\n\n    const uploadList = showUploadList ? (\n      <LocaleReceiver\n        componentName=\"Upload\"\n        defaultLocale={defaultLocale.Upload}\n      >\n        {this.renderUploadList}\n      </LocaleReceiver>\n    ) : null;\n\n    if (type === 'drag') {\n      const dragCls = classNames(prefixCls, {\n        [`${prefixCls}-drag`]: true,\n        [`${prefixCls}-drag-uploading`]: this.state.fileList.some(file => file.status === 'uploading'),\n        [`${prefixCls}-drag-hover`]: this.state.dragState === 'dragover',\n        [`${prefixCls}-disabled`]: disabled,\n      });\n      return (\n        <span className={className}>\n          <div\n            className={dragCls}\n            onDrop={this.onFileDrop}\n            onDragOver={this.onFileDrop}\n            onDragLeave={this.onFileDrop}\n          >\n            <RcUpload {...rcUploadProps} ref={this.saveUpload} className={`${prefixCls}-btn`}>\n              <div className={`${prefixCls}-drag-container`}>\n                {children}\n              </div>\n            </RcUpload>\n          </div>\n          {uploadList}\n        </span>\n      );\n    }\n\n    const uploadButtonCls = classNames(prefixCls, {\n      [`${prefixCls}-select`]: true,\n      [`${prefixCls}-select-${listType}`]: true,\n      [`${prefixCls}-disabled`]: disabled,\n    });\n\n    const uploadButton = (\n      <div className={uploadButtonCls} style={{ display: children ? '' : 'none' }}>\n        <RcUpload {...rcUploadProps} ref={this.saveUpload} />\n      </div>\n    );\n\n    if (listType === 'picture-card') {\n      return (\n        <span className={className}>\n          {uploadList}\n          {uploadButton}\n        </span>\n      );\n    }\n    return (\n      <span className={className}>\n        {uploadButton}\n        {uploadList}\n      </span>\n    );\n  }\n}\n"]}