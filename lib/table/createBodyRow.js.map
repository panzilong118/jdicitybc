{"version":3,"sources":["../../components/table/createBodyRow.js"],"names":["createTableRow","React","Component","BodyRow","props","store","getState","selectedRowKeys","unsubscribe","state","selected","indexOf","rowKey","subscribe","setState","rowProps","className","prefixCls","children"],"mappings":";;;;;;;;;;kBAUwBA,c;;AAVxB;;IAAYC,K;;AAEZ;;;;AAEA;;;;AAEA;;;;AAEA;;;;;;;;;;;;;;AAEe,SAASD,cAAT,GAA0C;AAAA,QAAlBE,SAAkB,uEAAN,IAAM;;AAAA,QAC/CC,OAD+C;AAAA;;AAEjD,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,0HACTA,KADS;;AAGf,kBAAKC,KAAL,GAAaD,MAAMC,KAAnB;;AAHe,uCAIa,MAAKA,KAAL,CAAWC,QAAX,EAJb;AAAA,gBAIPC,eAJO,wBAIPA,eAJO;;AAMf,kBAAKC,WAAL,GAAmB,YAAM,CAAE,CAA3B;;AAEA,kBAAKC,KAAL,GAAa;AACTC,0BAAUH,gBAAgBI,OAAhB,CAAwBP,MAAMQ,MAA9B,KAAyC;AAD1C,aAAb;AARe;AAWlB;;AAbgD;AAAA;AAAA,gDAe7B;AAChB,qBAAKC,SAAL;AACH;AAjBgD;AAAA;AAAA,mDAmB1B;AACnB,oBAAI,KAAKL,WAAT,EAAsB;AAClB,yBAAKA,WAAL;AACH;AACJ;AAvBgD;AAAA;AAAA,wCAyBrC;AAAA;;AAAA,6BACkB,KAAKJ,KADvB;AAAA,oBACAC,KADA,UACAA,KADA;AAAA,oBACOO,MADP,UACOA,MADP;;AAER,qBAAKJ,WAAL,GAAmBH,MAAMQ,SAAN,CAAgB,YAAM;AAAA,0CACT,OAAKR,KAAL,CAAWC,QAAX,EADS;AAAA,wBAC7BC,eAD6B,mBAC7BA,eAD6B;;AAErC,wBAAMG,WAAWH,gBAAgBI,OAAhB,CAAwBC,MAAxB,KAAmC,CAApD;AACA,wBAAIF,aAAa,OAAKD,KAAL,CAAWC,QAA5B,EAAsC;AAClC,+BAAKI,QAAL,CAAc,EAAEJ,kBAAF,EAAd;AACH;AACJ,iBANkB,CAAnB;AAOH;AAlCgD;AAAA;AAAA,qCAoCxC;AACL,oBAAMK,WAAW,oBAAK,KAAKX,KAAV,EAAiB,CAAC,WAAD,EAAc,QAAd,EAAwB,OAAxB,CAAjB,CAAjB;AACA,oBAAMY,YAAY,0BAAW,KAAKZ,KAAL,CAAWY,SAAtB,sBACV,KAAKZ,KAAL,CAAWa,SADD,oBAC4B,KAAKR,KAAL,CAAWC,QADvC,EAAlB;;AAIA,uBACI;AAAC,6BAAD;AAAA,iCAAeK,QAAf,IAAyB,WAAWC,SAApC;AACK,yBAAKZ,KAAL,CAAWc;AADhB,iBADJ;AAKH;AA/CgD;;AAAA;AAAA,MAC/BjB,MAAMC,SADyB;;AAkDrD,WAAOC,OAAP;AACH","file":"createBodyRow.js","sourcesContent":["import * as React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classnames from 'classnames';\r\n\r\nimport omit from 'omit.js';\r\n\r\nimport { Store } from './createStore';\r\n\r\nexport default function createTableRow(Component = 'tr') {\r\n    class BodyRow extends React.Component {\r\n        constructor(props) {\r\n            super(props);\r\n\r\n            this.store = props.store;\r\n            const { selectedRowKeys } = this.store.getState();\r\n\r\n            this.unsubscribe = () => {};\r\n\r\n            this.state = {\r\n                selected: selectedRowKeys.indexOf(props.rowKey) >= 0\r\n            };\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.subscribe();\r\n        }\r\n\r\n        componentWillUnmount() {\r\n            if (this.unsubscribe) {\r\n                this.unsubscribe();\r\n            }\r\n        }\r\n\r\n        subscribe() {\r\n            const { store, rowKey } = this.props;\r\n            this.unsubscribe = store.subscribe(() => {\r\n                const { selectedRowKeys } = this.store.getState();\r\n                const selected = selectedRowKeys.indexOf(rowKey) >= 0;\r\n                if (selected !== this.state.selected) {\r\n                    this.setState({ selected });\r\n                }\r\n            });\r\n        }\r\n\r\n        render() {\r\n            const rowProps = omit(this.props, ['prefixCls', 'rowKey', 'store']);\r\n            const className = classnames(this.props.className, {\r\n                [`${this.props.prefixCls}-row-selected`]: this.state.selected\r\n            });\r\n\r\n            return (\r\n                <Component {...rowProps} className={className}>\r\n                    {this.props.children}\r\n                </Component>\r\n            );\r\n        }\r\n    }\r\n\r\n    return BodyRow;\r\n}\r\n"]}