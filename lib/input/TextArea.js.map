{"version":3,"sources":["../../components/input/TextArea.js"],"names":["React","onNextFrame","cb","window","requestAnimationFrame","setTimeout","clearNextFrameAction","nextFrameId","cancelAnimationFrame","clearTimeout","TextArea","props","state","textareaStyles","resizeTextarea","autosize","textAreaRef","minRows","maxRows","setState","handleTextareaChange","e","onChange","handleKeyDown","onPressEnter","onKeyDown","keyCode","saveTextAreaRef","textArea","nextFrameActionId","nextProps","value","focus","blur","prefixCls","className","disabled","otherProps","style","getTextAreaClassName","Component","defaultProps"],"mappings":"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","file":"TextArea.js","sourcesContent":["import * as React from 'react';\r\nimport omit from 'omit.js';\r\nimport classNames from 'classnames';\r\n// eslint校验提示变量没有被使用，暂时注释掉\r\n// import { AbstractInputProps } from './Input';\r\nimport calculateNodeHeight from './calculateNodeHeight';\r\n\r\nfunction onNextFrame(cb) {\r\n    if (window.requestAnimationFrame) {\r\n        return window.requestAnimationFrame(cb);\r\n    }\r\n    return window.setTimeout(cb, 1);\r\n}\r\n\r\nfunction clearNextFrameAction(nextFrameId) {\r\n    if (window.cancelAnimationFrame) {\r\n        window.cancelAnimationFrame(nextFrameId);\r\n    } else {\r\n        window.clearTimeout(nextFrameId);\r\n    }\r\n}\r\n\r\nexport default class TextArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.nextFrameActionId = {};\r\n        this.textAreaRef = {};\r\n    }\r\n\r\n    static defaultProps = {\r\n        prefixCls: 'jc-input',\r\n    };\r\n\r\n    state = {\r\n        textareaStyles: {},\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.resizeTextarea();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        // Re-render with the new content then recalculate the height as required.\r\n        if (this.props.value !== nextProps.value) {\r\n            if (this.nextFrameActionId) {\r\n                clearNextFrameAction(this.nextFrameActionId);\r\n            }\r\n            this.nextFrameActionId = onNextFrame(this.resizeTextarea);\r\n        }\r\n    }\r\n\r\n    focus() {\r\n        this.textAreaRef.focus();\r\n    }\r\n\r\n    blur() {\r\n        this.textAreaRef.blur();\r\n    }\r\n\r\n    resizeTextarea = () => {\r\n        const { autosize } = this.props;\r\n        if (!autosize || !this.textAreaRef) {\r\n            return;\r\n        }\r\n        const minRows = autosize ? autosize.minRows : null;\r\n        const maxRows = autosize ? autosize.maxRows : null;\r\n        const textareaStyles = calculateNodeHeight(this.textAreaRef, false, minRows, maxRows);\r\n        this.setState({ textareaStyles });\r\n    }\r\n\r\n    getTextAreaClassName() {\r\n        const { prefixCls, className, disabled } = this.props;\r\n        return classNames(prefixCls, className, {\r\n            [`${prefixCls}-disabled`]: disabled,\r\n        });\r\n    }\r\n\r\n    handleTextareaChange = (e) => {\r\n        if (!('value' in this.props)) {\r\n            this.resizeTextarea();\r\n        }\r\n        const { onChange } = this.props;\r\n        if (onChange) {\r\n            onChange(e);\r\n        }\r\n    }\r\n\r\n    handleKeyDown = (e) => {\r\n        const { onPressEnter, onKeyDown } = this.props;\r\n        if (e.keyCode === 13 && onPressEnter) {\r\n            onPressEnter(e);\r\n        }\r\n        if (onKeyDown) {\r\n            onKeyDown(e);\r\n        }\r\n    }\r\n\r\n    saveTextAreaRef = (textArea) => {\r\n        this.textAreaRef = textArea;\r\n    }\r\n\r\n    render() {\r\n        const props = this.props;\r\n        const otherProps = omit(props, [\r\n            'prefixCls',\r\n            'onPressEnter',\r\n            'autosize',\r\n        ]);\r\n        const style = {\r\n            ...props.style,\r\n            ...this.state.textareaStyles,\r\n        };\r\n        // Fix https://github.com/ant-design/ant-design/issues/6776\r\n        // Make sure it could be reset when using form.getFieldDecorator\r\n        if ('value' in otherProps) {\r\n            otherProps.value = otherProps.value || '';\r\n        }\r\n        return (\r\n            <textarea\r\n                {...otherProps}\r\n                className={this.getTextAreaClassName()}\r\n                style={style}\r\n                onKeyDown={this.handleKeyDown}\r\n                onChange={this.handleTextareaChange}\r\n                ref={this.saveTextAreaRef}\r\n            />\r\n        );\r\n    }\r\n}\r\n"]}