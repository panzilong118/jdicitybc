{"version":3,"sources":["../../components/input/Input.js"],"names":["React","fixControlledValue","value","Input","props","handleKeyDown","e","onPressEnter","onKeyDown","keyCode","saveInput","node","input","focus","blur","prefixCls","size","disabled","children","addonBefore","addonAfter","wrapperClassName","addonClassName","className","groupClassName","style","cloneElement","prefix","suffix","affixWrapperCls","getInputClassName","otherProps","defaultValue","renderLabeledIcon","renderLabeledInput","renderInput","Component","defaultProps","type","propTypes","string","id","oneOfType","number","oneOf","maxLength","bool","any","autosize","object","func","onKeyUp","onFocus","onBlur"],"mappings":"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","file":"Input.js","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport omit from 'omit.js';\r\n\r\n// eslint校验提示变量没有被使用，暂时注释掉\r\n// import Group from './Group';\r\n// import Search from './Search';\r\n// import TextArea from './TextArea';\r\n\r\nfunction fixControlledValue(value) {\r\n    if (typeof value === 'undefined' || value === null) {\r\n        return '';\r\n    }\r\n    return value;\r\n}\r\n\r\nexport default class Input extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.input = {};\r\n    }\r\n\r\n    static defaultProps = {\r\n        prefixCls: 'jc-input',\r\n        type: 'text',\r\n        disabled: false,\r\n    };\r\n\r\n    static propTypes = {\r\n        type: PropTypes.string,\r\n        id: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number,\r\n        ]),\r\n        size: PropTypes.oneOf(['small', 'default', 'large']),\r\n        maxLength: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number,\r\n        ]),\r\n        disabled: PropTypes.bool,\r\n        value: PropTypes.any,\r\n        defaultValue: PropTypes.any,\r\n        className: PropTypes.string,\r\n        addonBefore: PropTypes.node,\r\n        addonAfter: PropTypes.node,\r\n        prefixCls: PropTypes.string,\r\n        autosize: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\r\n        onPressEnter: PropTypes.func,\r\n        onKeyDown: PropTypes.func,\r\n        onKeyUp: PropTypes.func,\r\n        onFocus: PropTypes.func,\r\n        onBlur: PropTypes.func,\r\n        prefix: PropTypes.node,\r\n        suffix: PropTypes.node,\r\n    };\r\n\r\n    handleKeyDown = (e) => {\r\n        const { onPressEnter, onKeyDown } = this.props;\r\n        if (e.keyCode === 13 && onPressEnter) {\r\n            onPressEnter(e);\r\n        }\r\n        if (onKeyDown) {\r\n            onKeyDown(e);\r\n        }\r\n    }\r\n\r\n    focus() {\r\n        this.input.focus();\r\n    }\r\n\r\n    blur() {\r\n        this.input.blur();\r\n    }\r\n\r\n    getInputClassName() {\r\n        const { prefixCls, size, disabled } = this.props;\r\n        return classNames(prefixCls, {\r\n            [`${prefixCls}-sm`]: size === 'small',\r\n            [`${prefixCls}-lg`]: size === 'large',\r\n            [`${prefixCls}-disabled`]: disabled,\r\n        });\r\n    }\r\n\r\n    saveInput = (node) => {\r\n        this.input = node;\r\n    }\r\n\r\n    renderLabeledInput(children) {\r\n        const props = this.props;\r\n        // Not wrap when there is not addons\r\n        if ((!props.addonBefore && !props.addonAfter)) {\r\n            return children;\r\n        }\r\n\r\n        const wrapperClassName = `${props.prefixCls}-group`;\r\n        const addonClassName = `${wrapperClassName}-addon`;\r\n        const addonBefore = props.addonBefore ? (<span className={addonClassName}> {props.addonBefore} </span>) : null;\r\n\r\n        const addonAfter = props.addonAfter ? (<span className={addonClassName}> {props.addonAfter} </span>) : null;\r\n\r\n        const className = classNames(`${props.prefixCls}-wrapper`, {\r\n            [wrapperClassName]: (addonBefore || addonAfter),\r\n        });\r\n\r\n        const groupClassName = classNames(`${props.prefixCls}-group-wrapper`, {\r\n            [`${props.prefixCls}-group-wrapper-sm`]: props.size === 'small',\r\n            [`${props.prefixCls}-group-wrapper-lg`]: props.size === 'large',\r\n        });\r\n\r\n        // Need another wrapper for changing display:table to display:inline-block\r\n        // and put style prop in wrapper\r\n        if (addonBefore || addonAfter) {\r\n            return (\r\n                <span\r\n                    className={groupClassName}\r\n                    style={props.style}\r\n                >\r\n                    <span className={className}>\r\n                        {addonBefore}\r\n                        {React.cloneElement(children, { style: null })}\r\n                        {addonAfter}\r\n                    </span>\r\n                </span>\r\n            );\r\n        }\r\n        return (\r\n            <span className={className}>\r\n                {addonBefore}\r\n                {children}\r\n                {addonAfter}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderLabeledIcon(children) {\r\n        const { props } = this;\r\n        if (!('prefix' in props || 'suffix' in props)) {\r\n            return children;\r\n        }\r\n\r\n        const prefix = props.prefix ? (<span className={`${props.prefixCls}-prefix`}> {props.prefix} </span>) : null;\r\n\r\n        const suffix = props.suffix ? (<span className={`${props.prefixCls}-suffix`}> {props.suffix} </span>) : null;\r\n\r\n        const affixWrapperCls = classNames(props.className, `${props.prefixCls}-affix-wrapper`, {\r\n            [`${props.prefixCls}-affix-wrapper-sm`]: props.size === 'small',\r\n            [`${props.prefixCls}-affix-wrapper-lg`]: props.size === 'large',\r\n        });\r\n        return (\r\n            <span\r\n                className={affixWrapperCls}\r\n                style={props.style}\r\n            >\r\n                {prefix}\r\n                {React.cloneElement(children, { style: null, className: this.getInputClassName() })}\r\n                {suffix}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderInput() {\r\n        const { value, className } = this.props;\r\n        // Fix https://fb.me/react-unknown-prop\r\n        const otherProps = omit(this.props, [\r\n            'prefixCls',\r\n            'onPressEnter',\r\n            'addonBefore',\r\n            'addonAfter',\r\n            'prefix',\r\n            'suffix',\r\n        ]);\r\n\r\n        if ('value' in this.props) {\r\n            otherProps.value = fixControlledValue(value);\r\n            // Input elements must be either controlled or uncontrolled,\r\n            // specify either the value prop, or the defaultValue prop, but not both.\r\n            delete otherProps.defaultValue;\r\n        }\r\n        return this.renderLabeledIcon(<input {...otherProps} className={classNames(this.getInputClassName(), className)} onKeyDown={this.handleKeyDown} ref={this.saveInput} />);\r\n    }\r\n\r\n    render() {\r\n        return this.renderLabeledInput(this.renderInput());\r\n    }\r\n}\r\n"]}