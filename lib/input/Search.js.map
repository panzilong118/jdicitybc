{"version":3,"sources":["../../components/input/Search.js"],"names":["React","Search","props","onSearch","input","value","focus","saveInput","node","blur","enterButton","prefixCls","size","enterButtonAsElement","type","cloneElement","className","onClick","inputPrefixCls","suffix","others","buttonOrIcon","getButtonOrIcon","searchSuffix","inputClassName","Component","defaultProps"],"mappings":";;;;;;;;;;;AAAA;;IAAYA,K;;AACZ;;;;AACA;;;;AAGA;;;;AACA;;;;;;;;;;;;;;;;;AAHA;AACA;;;IAIqBC,M;;;AACjB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACTA,KADS;;AAAA,cAWnBC,QAXmB,GAWR,YAAM;AAAA,gBACLA,QADK,GACQ,MAAKD,KADb,CACLC,QADK;;AAEb,gBAAIA,QAAJ,EAAc;AACVA,yBAAS,MAAKC,KAAL,CAAWA,KAAX,CAAiBC,KAA1B;AACH;AACD,kBAAKD,KAAL,CAAWE,KAAX;AACH,SAjBkB;;AAAA,cA2BnBC,SA3BmB,GA2BP,UAACC,IAAD,EAAU;AAClB,kBAAKJ,KAAL,GAAaI,IAAb;AACH,SA7BkB;;AAEf,cAAKJ,KAAL,GAAa,EAAb;AAFe;AAGlB;;;;gCAgBO;AACJ,iBAAKA,KAAL,CAAWE,KAAX;AACH;;;+BAEM;AACH,iBAAKF,KAAL,CAAWK,IAAX;AACH;;;0CAMiB;AAAA,yBAC2B,KAAKP,KADhC;AAAA,gBACNQ,WADM,UACNA,WADM;AAAA,gBACOC,SADP,UACOA,SADP;AAAA,gBACkBC,IADlB,UACkBA,IADlB;;AAEd,gBAAI,CAACF,WAAL,EAAkB;AACd,uBAAO,sCAAM,WAAcC,SAAd,UAAN,EAAsC,MAAK,QAA3C,EAAoD,KAAI,YAAxD,GAAP;AACH;AACD,gBAAME,uBAAuBH,WAA7B;AACA,gBAAIG,qBAAqBC,IAArB,yBAAwCD,qBAAqBC,IAArB,KAA8B,QAA1E,EAAoF;AAChF,uBAAOd,MAAMe,YAAN,CAAmBF,oBAAnB,EAAyCA,qBAAqBC,IAArB,wBAAuC;AACnFE,+BAAcL,SAAd,YADmF;AAEnFC,8BAFmF;AAGnFK,6BAAS,KAAKd;AAHqE,iBAAvC,GAI5C;AACAc,6BAAS,KAAKd;AADd,iBAJG,CAAP;AAOH;AACD,mBACI;AAAA;AAAA;AACI,+BAAcQ,SAAd,YADJ;AAEI,0BAAK,SAFT;AAGI,0BAAMC,IAHV;AAII,6BAAS,KAAKT,QAJlB;AAKI,yBAAI;AALR;AAOKO,gCAAgB,IAAhB,GAAuB,sCAAM,MAAK,QAAX,GAAvB,GAAgDA;AAPrD,aADJ;AAWH;;;iCAEQ;AAAA;;AAAA,0BACkF,KAAKR,KADvF;AAAA,gBACGc,SADH,WACGA,SADH;AAAA,gBACcL,SADd,WACcA,SADd;AAAA,gBACyBO,cADzB,WACyBA,cADzB;AAAA,gBACyCN,IADzC,WACyCA,IADzC;AAAA,gBAC+CO,MAD/C,WAC+CA,MAD/C;AAAA,gBACuDT,WADvD,WACuDA,WADvD;AAAA,gBACuEU,MADvE;;AAEL,mBAAOA,OAAOjB,QAAd;AACA,gBAAMkB,eAAe,KAAKC,eAAL,EAArB;AACA,gBAAMC,eAAeJ,SAAS,CAACA,MAAD,EAASE,YAAT,CAAT,GAAkCA,YAAvD;AACA,gBAAMG,iBAAiB,0BAAWb,SAAX,EAAsBK,SAAtB,kDACfL,SADe,oBACY,CAAC,CAACD,WADd,gCAEfC,SAFe,SAEFC,IAFE,EAEO,CAAC,CAACA,IAFT,gBAAvB;AAIA,mBACI;AACI,8BAAc,KAAKT;AADvB,eAEQiB,MAFR;AAGI,sBAAMR,IAHV;AAII,2BAAWY,cAJf;AAKI,2BAAWN,cALf;AAMI,wBAAQK,YANZ;AAOI,qBAAK,KAAKhB;AAPd,eADJ;AAWH;;;;EAhF+BP,MAAMyB,S;;AAArBxB,M,CAMVyB,Y,GAAe;AAClBR,oBAAgB,UADE;AAElBP,eAAW,iBAFO;AAGlBD,iBAAa;AAHK,C;kBANLT,M","file":"Search.js","sourcesContent":["import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport Input from './Input';\r\n// eslint校验提示变量没有被使用，暂时注释掉\r\n// import { InputProps } from './Input';\r\nimport Icon from '../icon';\r\nimport Button from '../button';\r\n\r\nexport default class Search extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.input = {};\r\n    }\r\n\r\n    static defaultProps = {\r\n        inputPrefixCls: 'jc-input',\r\n        prefixCls: 'jc-input-search',\r\n        enterButton: false,\r\n    };\r\n\r\n    onSearch = () => {\r\n        const { onSearch } = this.props;\r\n        if (onSearch) {\r\n            onSearch(this.input.input.value);\r\n        }\r\n        this.input.focus();\r\n    }\r\n\r\n    focus() {\r\n        this.input.focus();\r\n    }\r\n\r\n    blur() {\r\n        this.input.blur();\r\n    }\r\n\r\n    saveInput = (node) => {\r\n        this.input = node;\r\n    }\r\n\r\n    getButtonOrIcon() {\r\n        const { enterButton, prefixCls, size } = this.props;\r\n        if (!enterButton) {\r\n            return <Icon className={`${prefixCls}-icon`} type='search' key='searchIcon' />;\r\n        }\r\n        const enterButtonAsElement = enterButton;\r\n        if (enterButtonAsElement.type === Button || enterButtonAsElement.type === 'button') {\r\n            return React.cloneElement(enterButtonAsElement, enterButtonAsElement.type === Button ? {\r\n                className: `${prefixCls}-button`,\r\n                size,\r\n                onClick: this.onSearch,\r\n            } : {\r\n                onClick: this.onSearch,\r\n            });\r\n        }\r\n        return (\r\n            <Button\r\n                className={`${prefixCls}-button`}\r\n                type='primary'\r\n                size={size}\r\n                onClick={this.onSearch}\r\n                key='enterButton'\r\n            >\r\n                {enterButton === true ? <Icon type='search' /> : enterButton}\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const { className, prefixCls, inputPrefixCls, size, suffix, enterButton, ...others } = this.props;\r\n        delete others.onSearch;\r\n        const buttonOrIcon = this.getButtonOrIcon();\r\n        const searchSuffix = suffix ? [suffix, buttonOrIcon] : buttonOrIcon;\r\n        const inputClassName = classNames(prefixCls, className, {\r\n            [`${prefixCls}-enter-button`]: !!enterButton,\r\n            [`${prefixCls}-${size}`]: !!size,\r\n        });\r\n        return (\r\n            <Input\r\n                onPressEnter={this.onSearch}\r\n                {...others}\r\n                size={size}\r\n                className={inputClassName}\r\n                prefixCls={inputPrefixCls}\r\n                suffix={searchSuffix}\r\n                ref={this.saveInput}\r\n            />\r\n        );\r\n    }\r\n}\r\n"]}