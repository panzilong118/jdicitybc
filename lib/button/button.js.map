{"version":3,"sources":["../../components/button/button.js"],"names":["React","rxTwoCNChar","isTwoCNChar","test","bind","isSring","str","insertSpace","child","needInserted","SPACE","type","props","children","cloneElement","split","join","Button","handleClick","e","setState","clicked","clearTimeout","timeout","window","setTimeout","onClick","state","loading","hasTwoCNChar","buttonText","innerText","isNeedInserted","nextProps","currentLoading","delayTimeout","delay","icon","iconType","Children","count","shape","size","className","htmlType","prefixCls","ghost","others","sizeCls","ComponentProp","herf","classes","iconNode","kids","map","Component","__JC_BUTTON","defaultProps","propTypes","bool","string","oneOf","func","oneOfType","object","Group"],"mappings":"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","file":"button.js","sourcesContent":["/**\r\n * Created by gaoqingli on 2018/3/19.\r\n */\r\nimport * as React from 'react';\r\n\r\nimport { findDOMNode } from 'react-dom';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classNames from 'classnames';\r\n\r\nimport omit from 'omit.js';\r\n\r\nimport Icon from '../icon';\r\n\r\nimport Group from './button-group';\r\n\r\n\r\nconst rxTwoCNChar = /^[\\u4e00-\\u9fa5]{2}$/;\r\nconst isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);\r\nfunction isSring(str) {\r\n    return typeof str === 'string';\r\n}\r\n\r\nfunction insertSpace(child, needInserted) {\r\n    if (child == null) {\r\n        return null;\r\n    }\r\n    const SPACE = needInserted ? ' ' : '';\r\n    if (typeof child !== 'string' && typeof child !== 'number' && isSring(child.type) && isTwoCNChar(child.props.children)) {\r\n        return React.cloneElement(child, {}, child.props.children.split('').join(SPACE));\r\n    }\r\n    if (typeof child === 'string') {\r\n        if (isTwoCNChar(child)) {\r\n            child = child.split('').join(SPACE);\r\n        }\r\n        return <span>{child}</span>;\r\n    }\r\n    return child;\r\n}\r\n\r\n// 创建Button组件\r\nexport default class Button extends React.Component {\r\n static Group;\r\n static __JC_BUTTON = true;\r\n static timeout;\r\n static delayTimeout;\r\n\r\n constructor(props) {\r\n     super(props);\r\n     this.state = {\r\n         loading: props.loading,\r\n         clicked: false,\r\n         hasTwoCNChar: false,\r\n     };\r\n }\r\n\r\n componentDidMount() {\r\n     // Fix for HOC usage like <FormatMessage />\r\n     const buttonText = (findDOMNode(this)).innerText;\r\n     if (this.isNeedInserted() && isTwoCNChar(buttonText)) {\r\n         this.setState({\r\n             hasTwoCNChar: true,\r\n         });\r\n     }\r\n }\r\n componentWillReceiveProps(nextProps) {\r\n     const currentLoading = this.props.loading;\r\n     const { loading } = nextProps;\r\n\r\n     if (currentLoading) {\r\n         clearTimeout(this.delayTimeout);\r\n     }\r\n\r\n     if (typeof loading !== 'boolean' && loading && loading.delay) {\r\n         this.delayTimeout = window.setTimeout(() => this.setState({ loading }), loading.delay);\r\n     } else {\r\n         this.setState({ loading });\r\n     }\r\n }\r\n componentWillUnmount() {\r\n     if (this.timeout) {\r\n         clearTimeout(this.timeout);\r\n     }\r\n     if (this.delayTimeout) {\r\n         clearTimeout(this.delayTimeout);\r\n     }\r\n }\r\n handleClick = (e) => {\r\n     this.setState({ clicked: true });\r\n     clearTimeout(this.timeout);\r\n     this.timeout = window.setTimeout(() => this.setState({ clicked: false }), 500);\r\n\r\n     const { onClick } = this.props;\r\n     if (onClick) {\r\n         onClick(e);\r\n     }\r\n }\r\n\r\n isNeedInserted() {\r\n     const { loading, icon, children } = this.props;\r\n     const iconType = loading ? 'loading' : icon;\r\n     return React.Children.count(children) === 1 && (!iconType || iconType === 'loading');\r\n }\r\n render() {\r\n     const { type, shape, size, className, htmlType, children, icon, prefixCls, ghost, ...others } = this.props;\r\n     const { loading, clicked, hasTwoCNChar } = this.state;\r\n\r\n     // large => lg  small => sm\r\n     let sizeCls = ' ';\r\n     switch (size) {\r\n     case 'large':\r\n         sizeCls = 'lg';\r\n         break;\r\n     case 'small':\r\n         sizeCls = 'sm';\r\n         break;\r\n     default:\r\n         sizeCls = '';\r\n         break;\r\n     }\r\n     const ComponentProp = others.herf ? 'a' : 'button';\r\n     const classes = classNames(prefixCls, className, {\r\n         [`${prefixCls}-${type}`]: type,\r\n         [`${prefixCls}-${shape}`]: shape,\r\n         [`${prefixCls}-${sizeCls}`]: sizeCls,\r\n         [`${prefixCls}-icon-only`]: !children && icon,\r\n         [`${prefixCls}-loading`]: loading,\r\n         [`${prefixCls}-clicked`]: clicked,\r\n         [`${prefixCls}-background-ghost`]: ghost,\r\n         [`${prefixCls}-two-chinese-chars`]: hasTwoCNChar,\r\n     });\r\n     const iconType = loading ? 'loading' : icon;\r\n     const iconNode = iconType ? <Icon type={iconType} /> : null;\r\n     const kids = (children || children === 0) ? React.Children.map(children, child => insertSpace(child, this.isNeedInserted())) : null;\r\n\r\n\r\n     return (\r\n         <ComponentProp\r\n             {...omit(others, ['loading'])}\r\n             type={others.herf ? '' : (htmlType || 'button')}\r\n             className={classes}\r\n             onClick={this.handleClick}\r\n         >\r\n             {iconNode}{kids}\r\n         </ComponentProp>\r\n     );\r\n }\r\n}\r\n\r\n// 默认状态\r\nButton.defaultProps = {\r\n    prefixCls: 'jc-btn',\r\n    loading: false,\r\n    ghost: false,\r\n};\r\n// 参数类型校验\r\nButton.propTypes = {\r\n    ghost: PropTypes.bool,\r\n    prefixCls: PropTypes.string,\r\n    type: PropTypes.string,\r\n    shape: PropTypes.oneOf(['circle', 'circle-outline']),\r\n    size: PropTypes.oneOf(['large', 'default', 'small']),\r\n    htmlType: PropTypes.oneOf(['submit', 'button', 'reset']),\r\n    onClick: PropTypes.func,\r\n    loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\r\n    className: PropTypes.string,\r\n    icon: PropTypes.string,\r\n};\r\n\r\nButton.Group = Group;\r\n"]}