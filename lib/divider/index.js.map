{"version":3,"sources":["../../components/divider/index.js"],"names":["Divider","React","prefixCls","type","orientation","className","children","dashed","restProps","orientationPrefix","length","classString","propTypes","string","oneOf","node","bool","style","object"],"mappings":";;;;;;;;kBAMwBA,O;;AANxB;;IAAYC,K;;AAEZ;;;;AAEA;;;;;;;;;;;;AAEe,SAASD,OAAT,OAQZ;AAAA;;AAAA,8BAPCE,SAOD;AAAA,QAPCA,SAOD,kCAPa,IAOb;AAAA,yBANCC,IAMD;AAAA,QANCA,IAMD,6BANQ,YAMR;AAAA,gCALCC,WAKD;AAAA,QALCA,WAKD,oCALe,EAKf;AAAA,QAJCC,SAID,QAJCA,SAID;AAAA,QAHCC,QAGD,QAHCA,QAGD;AAAA,QAFCC,MAED,QAFCA,MAED;AAAA,QADIC,SACJ;;AACC,QAAMC,oBAAqBL,YAAYM,MAAZ,GAAqB,CAAtB,SAA+BN,WAA/B,GAA+CA,WAAzE;AACA,QAAMO,cAAc,0BAAWN,SAAX,EAAyBH,SAAzB,eAAiDA,SAAjD,iBAAsEC,IAAtE,kDACZD,SADY,0BACkBO,iBADlB,EACwCH,QADxC,gCAEZJ,SAFY,sBAEiB,CAAC,CAACK,MAFnB,gBAApB;AAIA,WACI;AAAA;AAAA,mBAAK,WAAWI,WAAhB,IAAiCH,SAAjC;AACKF,oBAAY;AAAA;AAAA,cAAM,WAAcJ,SAAd,wBAAN;AAAqDI;AAArD;AADjB,KADJ;AAKH;AACDN,QAAQY,SAAR,GAAoB;AAChBV,eAAW,oBAAUW,MADL;AAEhBV,UAAM,oBAAUW,KAAV,CAAgB,CAAC,YAAD,EAAe,UAAf,CAAhB,CAFU;AAGhBV,iBAAa,oBAAUU,KAAV,CAAgB,CAAC,MAAD,EAAS,OAAT,CAAhB,CAHG;AAIhBT,eAAW,oBAAUQ,MAJL;AAKhBP,cAAU,oBAAUS,IALJ;AAMhBR,YAAQ,oBAAUS,IANF;AAOhBC,WAAO,oBAAUC;AAPD,CAApB","file":"index.js","sourcesContent":["import * as React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classNames from 'classnames';\r\n\r\nexport default function Divider({\r\n    prefixCls = 'jc',\r\n    type = 'horizontal',\r\n    orientation = '',\r\n    className,\r\n    children,\r\n    dashed,\r\n    ...restProps\r\n}) {\r\n    const orientationPrefix = (orientation.length > 0) ? `-${orientation}` : orientation;\r\n    const classString = classNames(className, `${prefixCls}-divider`, `${prefixCls}-divider-${type}`, {\r\n        [`${prefixCls}-divider-with-text${orientationPrefix}`]: children,\r\n        [`${prefixCls}-divider-dashed`]: !!dashed\r\n    });\r\n    return (\r\n        <div className={classString} {...restProps}>\r\n            {children && <span className={`${prefixCls}-divider-inner-text`}>{children}</span>}\r\n        </div>\r\n    );\r\n}\r\nDivider.propTypes = {\r\n    prefixCls: PropTypes.string,\r\n    type: PropTypes.oneOf(['horizontal', 'vertical']),\r\n    orientation: PropTypes.oneOf(['left', 'right']),\r\n    className: PropTypes.string,\r\n    children: PropTypes.node,\r\n    dashed: PropTypes.bool,\r\n    style: PropTypes.object\r\n};\r\n"]}