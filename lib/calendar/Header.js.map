{"version":3,"sources":["../../components/calendar/Header.js"],"names":["React","moment","Option","Header","props","onYearChange","year","value","validRange","newValue","clone","parseInt","start","end","newYear","get","newMonth","month","onValueChange","onMonthChange","onTypeChange","e","target","getCalenderHeaderNode","node","calenderHeaderNode","yearSelectOffset","yearSelectTotal","locale","prefixCls","fullscreen","suffix","options","index","push","String","current","localeData","months","i","monthsShort","rangeStart","rangeEnd","currentYear","type","yearSelect","getYearSelectElement","monthSelect","getMonthSelectElement","getMonthsLocale","size","typeSwitch","Component","defaultProps"],"mappings":"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","file":"Header.js","sourcesContent":["import * as React from 'react';\r\nimport * as moment from 'moment';\r\nimport { PREFIX_CLS } from './Constants';\r\nimport Select from '../select';\r\nimport { Group, Button, RadioChangeEvent } from '../radio';\r\nconst Option = Select.Option;\r\n\r\nexport default class Header extends React.Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.calenderHeaderNode = {};\r\n  }\r\n\r\n  static defaultProps = {\r\n    prefixCls: `${PREFIX_CLS}-header`,\r\n    yearSelectOffset: 10,\r\n    yearSelectTotal: 20,\r\n  };\r\n\r\n  getYearSelectElement(year) {\r\n    const {\r\n      yearSelectOffset,\r\n      yearSelectTotal,\r\n      locale,\r\n      prefixCls,\r\n      fullscreen,\r\n      validRange,\r\n    } = this.props;\r\n    let start = year - (yearSelectOffset);\r\n    let end = start + (yearSelectTotal);\r\n    if (validRange) {\r\n      start = validRange[0].get('year');\r\n      end = validRange[1].get('year') + 1;\r\n    }\r\n    const suffix = locale.year === '年' ? '年' : '';\r\n    const options = [];\r\n    for (let index = start; index < end; index++) {\r\n      options.push(<Option key={`${index}`}>{index + suffix}</Option>);\r\n    }\r\n    return (\r\n      <Select\r\n        size={fullscreen ? 'default' : 'small'}\r\n        dropdownMatchSelectWidth={false}\r\n        className={`${prefixCls}-year-select`}\r\n        onChange={this.onYearChange}\r\n        value={String(year)}\r\n        getPopupContainer={() => this.calenderHeaderNode}\r\n      >\r\n        {options}\r\n      </Select>\r\n    );\r\n  }\r\n\r\n  getMonthsLocale(value) {\r\n    const current = value.clone();\r\n    const localeData = value.localeData();\r\n    const months = [];\r\n    for (let i = 0; i < 12; i++) {\r\n      current.month(i);\r\n      months.push(localeData.monthsShort(current));\r\n    }\r\n    return months;\r\n  }\r\n\r\n  getMonthSelectElement(month, months) {\r\n    const props = this.props;\r\n    const { prefixCls, fullscreen, validRange, value } = props;\r\n    const options = [];\r\n    let start = 0;\r\n    let end = 12;\r\n    if (validRange) {\r\n      const [rangeStart, rangeEnd] = validRange;\r\n      const currentYear = value.get('year');\r\n      if (rangeEnd.get('year') === currentYear) {\r\n        end = rangeEnd.get('month') + 1;\r\n      } else {\r\n        start = rangeStart.get('month');\r\n      }\r\n    }\r\n    for (let index = start; index < end; index++) {\r\n      options.push(<Option key={`${index}`}>{months[index]}</Option>);\r\n    }\r\n    return (\r\n      <Select\r\n        size={fullscreen ? 'default' : 'small'}\r\n        dropdownMatchSelectWidth={false}\r\n        className={`${prefixCls}-month-select`}\r\n        value={String(month)}\r\n        onChange={this.onMonthChange}\r\n        getPopupContainer={() => this.calenderHeaderNode}\r\n      >\r\n        {options}\r\n      </Select>\r\n    );\r\n  }\r\n\r\n  onYearChange = (year) => {\r\n    const { value, validRange } = this.props;\r\n    const newValue = value.clone();\r\n    newValue.year(parseInt(year, 10));\r\n    // switch the month so that it remains within range when year changes\r\n    if (validRange) {\r\n      const [ start, end ] = validRange;\r\n      const newYear = newValue.get('year');\r\n      const newMonth = newValue.get('month');\r\n      if (newYear === end.get('year') && newMonth > end.get('month')) {\r\n        newValue.month(end.get('month'));\r\n      }\r\n      if (newYear === start.get('year') && newMonth < start.get('month')) {\r\n        newValue.month(start.get('month'));\r\n      }\r\n    }\r\n\r\n    const onValueChange = this.props.onValueChange;\r\n    if (onValueChange) {\r\n      onValueChange(newValue);\r\n    }\r\n  }\r\n\r\n  onMonthChange = (month) => {\r\n    const newValue = this.props.value.clone();\r\n    newValue.month(parseInt(month, 10));\r\n    const onValueChange = this.props.onValueChange;\r\n    if (onValueChange) {\r\n      onValueChange(newValue);\r\n    }\r\n  }\r\n\r\n  onTypeChange = (e) => {\r\n    const onTypeChange = this.props.onTypeChange;\r\n    if (onTypeChange) {\r\n      onTypeChange(e.target.value);\r\n    }\r\n  }\r\n\r\n  getCalenderHeaderNode = (node) => {\r\n    this.calenderHeaderNode = node;\r\n  }\r\n\r\n  render() {\r\n    const { type, value, prefixCls, locale, fullscreen } = this.props;\r\n    const yearSelect = this.getYearSelectElement(value.year());\r\n    const monthSelect = type === 'date' ?\r\n      this.getMonthSelectElement(value.month(), this.getMonthsLocale(value)) : null;\r\n    const size = (fullscreen ? 'default' : 'small');\r\n    const typeSwitch = (\r\n      <Group onChange={this.onTypeChange} value={type} size={size}>\r\n        <Button value=\"date\">{locale.month}</Button>\r\n        <Button value=\"month\">{locale.year}</Button>\r\n      </Group>\r\n    );\r\n\r\n    return (\r\n      <div className={`${prefixCls}-header`} ref={this.getCalenderHeaderNode}>\r\n        {yearSelect}\r\n        {monthSelect}\r\n        {typeSwitch}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}