{"version":3,"sources":["../../components/progress/progress.js"],"names":["React","statusColorMap","normal","exception","success","Progress","props","prefixCls","className","percent","status","format","trailColor","size","successPercent","type","strokeWidth","width","showInfo","gapDegree","gapPosition","restProps","progressStatus","parseInt","toString","progressInfo","progress","textFormatter","percentNumber","text","iconType","percentStyle","height","successPercentStyle","successSegment","undefined","circleSize","circleStyle","fontSize","circleWidth","gapPos","gapDeg","classString","Component","defaultProps","propTypes","string","oneOf","bool","number","func","default"],"mappings":"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","file":"progress.js","sourcesContent":["/**\n * Creat by gaoqingli on 2018/3/26.\n */\nimport classNames from 'classnames';\n\nimport { Circle } from 'rc-progress';\n\nimport PropTypes from 'prop-types';\n\nimport * as React from 'react';\n\nimport Icon from '../icon';\n\nconst statusColorMap = {\n    normal: '#108ee9',\n    exception: '#ff5500',\n    success: '#87d068',\n};\n\nexport default class Progress extends React.Component {\n    static line;\n    static Circle;\n    render() {\n        const { prefixCls, className, percent = 0, status, format, trailColor, size, successPercent, type, strokeWidth, width, showInfo, gapDegree = 0, gapPosition, ...restProps } = this.props;\n        const progressStatus = parseInt(percent.toString(), 10) >= 100 && !('status' in this.props) ? 'success' : (status || 'normal');\n        let progressInfo;\n        let progress;\n        const textFormatter = format || (percentNumber => `${percentNumber}%`);\n\n        if (showInfo) {\n            let text;\n            const iconType = (type === 'circle' || type === 'dashboard') ? '' : '-circle';\n            if (progressStatus === 'exception') {\n                text = format ? textFormatter(percent) : <Icon type={`cross${iconType}`} />;\n            } else if (progressStatus === 'success') {\n                text = format ? textFormatter(percent) : <Icon type={`check${iconType}`} />;\n            } else {\n                text = textFormatter(percent);\n            }\n            progressInfo = <span className={`${prefixCls}-text`}>{text}</span>;\n        }\n\n        // 进度条类型\n        if (type === 'line') {\n            const percentStyle = {\n                width: `${percent}%`,\n                height: strokeWidth || (size === 'small' ? 6 : 8),\n            };\n            const successPercentStyle = {\n                width: `${successPercent}%`,\n                height: strokeWidth || (size === 'small' ? 6 : 8),\n            };\n            const successSegment = successPercent !== undefined ? <div className={`${prefixCls}-success-bg`} style={successPercentStyle} /> : null;\n            progress = (\n                <div>\n                    <div className={`${prefixCls}-outer`}>\n                        <div className={`${prefixCls}-inner`}>\n                            <div className={`${prefixCls}-bg`} style={percentStyle} />\n                            {successSegment}\n                        </div>\n                    </div>\n                    {progressInfo}\n                </div>\n            );\n        } else if (type === 'circle' || type === 'dashboard') {\n            const circleSize = width || 120;\n            const circleStyle = {\n                width: circleSize,\n                height: circleSize,\n                fontSize: (circleSize * 0.15) + 6,\n            };\n            const circleWidth = strokeWidth || 6;\n            const gapPos = gapPosition || (type === 'dashboard' && 'bottom') || 'top';\n            const gapDeg = gapDegree || (type === 'dashboard' && 75);\n            progress = (\n                <div className={`${prefixCls}-inner`} style={circleStyle}>\n                    <Circle\n                        percent={percent}\n                        strokeWidth={circleWidth}\n                        trailWidth={circleWidth}\n                        strokeColor={(statusColorMap)[progressStatus]}\n                        trailColor={trailColor}\n                        prefixCls={prefixCls}\n                        gapDegree={gapDeg}\n                        gapPosition={gapPos}\n                    />\n                    {progressInfo}\n                </div>\n            );\n        }\n        const classString = classNames(prefixCls, {\n            [`${prefixCls}-${(type === 'dashboard' && 'circle') || type}`]: true,\n            [`${prefixCls}-status-${progressStatus}`]: true,\n            [`${prefixCls}-show-info`]: showInfo,\n            [`${prefixCls}-${size}`]: size,\n        }, className);\n        return (\n            <div {...restProps} className={classString}>\n                {progress}\n            </div>\n        );\n    }\n}\n// 默认属性\nProgress.defaultProps = {\n    type: 'line',\n    percent: 0,\n    showInfo: true,\n    trailColor: '#f3f3f3',\n    prefixCls: 'jc-progress',\n    size: 'default',\n};\n// 参数类型校验\nProgress.propTypes = {\n    size: PropTypes.string,\n    prefixCls: PropTypes.string,\n    status: PropTypes.oneOf(['normal', 'exception', 'active', 'success']),\n    type: PropTypes.oneOf(['line', 'circle', 'dashboard']),\n    showInfo: PropTypes.bool,\n    percent: PropTypes.number,\n    width: PropTypes.number,\n    strokeWidth: PropTypes.number,\n    trailColor: PropTypes.string,\n    format: PropTypes.func,\n    gapDegree: PropTypes.number,\n    default: PropTypes.oneOf(['default', 'small']),\n};\n"]}