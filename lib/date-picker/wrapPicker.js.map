{"version":3,"sources":["../../components/date-picker/wrapPicker.js"],"names":["generateShowHourMinuteSecond","wrapPicker","format","showHour","indexOf","showMinute","showSecond","getColumns","use12Hours","column","Picker","defaultFormat","getDefaultLocale","result","props","locale","lang","handleOpenChange","open","onOpenChange","handleFocus","e","onFocus","handleBlur","onBlur","savePicker","node","picker","renderPicker","localeCode","prefixCls","inputPrefixCls","pickerClass","size","pickerInputClass","disabled","timeFormat","showTime","rcTimePickerProps","columns","timePickerCls","timePicker","timePickerLocale","placeholder","autoFocus","focus","blur","Component","defaultProps","transitionName","popupStyle","onChange","onOk"],"mappings":"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","file":"wrapPicker.js","sourcesContent":["import React from 'react';\r\nimport TimePickerPanel from 'rc-time-picker/lib/Panel';\r\nimport classNames from 'classnames';\r\n\r\n\r\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\r\n\r\nimport enUS from './locale/en_US';\r\n\r\nexport function generateShowHourMinuteSecond(format) {\r\n    // Ref: http://momentjs.com/docs/#/parsing/string-format/\r\n    return {\r\n        showHour: (\r\n            format.indexOf('H') > -1 ||\r\n          format.indexOf('h') > -1 ||\r\n          format.indexOf('k') > -1\r\n        ),\r\n        showMinute: format.indexOf('m') > -1,\r\n        showSecond: format.indexOf('s') > -1,\r\n    };\r\n}\r\n\r\nfunction getColumns({ showHour, showMinute, showSecond, use12Hours }) {\r\n    let column = 0;\r\n    if (showHour) {\r\n        column += 1;\r\n    }\r\n    if (showMinute) {\r\n        column += 1;\r\n    }\r\n    if (showSecond) {\r\n        column += 1;\r\n    }\r\n    if (use12Hours) {\r\n        column += 1;\r\n    }\r\n    return column;\r\n}\r\n\r\nexport default function wrapPicker(Picker, defaultFormat) {\r\n    return class PickerWrapper extends React.Component {\r\n          static defaultProps = {\r\n              format: defaultFormat || 'YYYY-MM-DD',\r\n              transitionName: 'slide-up',\r\n              popupStyle: {},\r\n              onChange() {\r\n              },\r\n              onOk() {\r\n              },\r\n              onOpenChange() {\r\n              },\r\n              locale: {},\r\n              prefixCls: 'jc-calendar',\r\n              inputPrefixCls: 'jc-input',\r\n          };\r\n\r\n          componentDidMount() {\r\n              const { autoFocus, disabled } = this.props;\r\n              if (autoFocus && !disabled) {\r\n                  this.focus();\r\n              }\r\n          }\r\n\r\n          getDefaultLocale = () => {\r\n              const result = {\r\n                  ...enUS,\r\n                  ...this.props.locale,\r\n              };\r\n              result.lang = {\r\n                  ...result.lang,\r\n                  ...(this.props.locale || {}).lang,\r\n              };\r\n              return result;\r\n          }\r\n\r\n\r\n          picker;\r\n      \r\n          handleOpenChange = (open) => {\r\n              const { onOpenChange } = this.props;\r\n              onOpenChange(open);\r\n          }\r\n      \r\n          handleFocus = (e) => {\r\n              const { onFocus } = this.props;\r\n              if (onFocus) {\r\n                  onFocus(e);\r\n              }\r\n          }\r\n      \r\n          handleBlur = (e) => {\r\n              const { onBlur } = this.props;\r\n              if (onBlur) {\r\n                  onBlur(e);\r\n              }\r\n          }\r\n\r\n          focus() {\r\n              this.picker.focus();\r\n          }\r\n      \r\n          blur() {\r\n              this.picker.blur();\r\n          }\r\n      \r\n          savePicker = (node) => {\r\n              this.picker = node;\r\n          }\r\n      \r\n\r\n          renderPicker = (locale, localeCode) => {\r\n              const { props } = this;\r\n              const { prefixCls, inputPrefixCls } = props;\r\n              const pickerClass = classNames(`${prefixCls}-picker`, {\r\n                  [`${prefixCls}-picker-${props.size}`]: !!props.size,\r\n              });\r\n              const pickerInputClass = classNames(`${prefixCls}-picker-input`, inputPrefixCls, {\r\n                  [`${inputPrefixCls}-lg`]: props.size === 'large',\r\n                  [`${inputPrefixCls}-sm`]: props.size === 'small',\r\n                  [`${inputPrefixCls}-disabled`]: props.disabled,\r\n              });\r\n      \r\n              const timeFormat = (props.showTime && props.showTime.format) || 'HH:mm:ss';\r\n              const rcTimePickerProps = {\r\n                  ...generateShowHourMinuteSecond(timeFormat),\r\n                  format: timeFormat,\r\n                  use12Hours: (props.showTime && props.showTime.use12Hours),\r\n              };\r\n              const columns = getColumns(rcTimePickerProps);\r\n              const timePickerCls = `${prefixCls}-time-picker-column-${columns}`;\r\n              const timePicker = props.showTime ? (\r\n                  <TimePickerPanel\r\n                      {...rcTimePickerProps}\r\n                      {...props.showTime}\r\n                      prefixCls={`${prefixCls}-time-picker`}\r\n                      className={timePickerCls}\r\n                      placeholder={locale.timePickerLocale.placeholder}\r\n                      transitionName='slide-up'\r\n                  />\r\n              ) : null;\r\n      \r\n              return (\r\n                  <Picker\r\n                      {...props}\r\n                      ref={this.savePicker}\r\n                      pickerClass={pickerClass}\r\n                      pickerInputClass={pickerInputClass}\r\n                      locale={locale}\r\n                      localeCode={localeCode}\r\n                      timePicker={timePicker}\r\n                      onOpenChange={this.handleOpenChange}\r\n                      onFocus={this.handleFocus}\r\n                      onBlur={this.handleBlur}\r\n                  />\r\n              );\r\n          }\r\n\r\n          render() {\r\n              return (\r\n                  <LocaleReceiver\r\n                      componentName='DatePicker'\r\n                      defaultLocale={this.getDefaultLocale}\r\n                  >\r\n                      {this.renderPicker}\r\n                  </LocaleReceiver>\r\n              );\r\n          }\r\n    };\r\n}\r\n"]}