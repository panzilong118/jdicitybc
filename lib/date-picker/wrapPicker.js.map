{"version":3,"sources":["../../components/date-picker/wrapPicker.js"],"names":["generateShowHourMinuteSecond","wrapPicker","format","showHour","indexOf","showMinute","showSecond","getColumns","use12Hours","column","Picker","defaultFormat","getDefaultLocale","result","props","locale","lang","handleOpenChange","open","onOpenChange","handleFocus","e","onFocus","handleBlur","onBlur","savePicker","node","picker","renderPicker","localeCode","prefixCls","inputPrefixCls","pickerClass","size","pickerInputClass","disabled","timeFormat","showTime","rcTimePickerProps","columns","timePickerCls","timePicker","timePickerLocale","placeholder","autoFocus","focus","blur","Component","defaultProps","transitionName","popupStyle","onChange","onOk"],"mappings":"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","file":"wrapPicker.js","sourcesContent":["import React from 'react';\nimport TimePickerPanel from 'rc-time-picker/lib/Panel';\nimport classNames from 'classnames';\n\n\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\n\nimport enUS from './locale/en_US';\n\nexport function generateShowHourMinuteSecond(format) {\n    // Ref: http://momentjs.com/docs/#/parsing/string-format/\n    return {\n        showHour: (\n            format.indexOf('H') > -1 ||\n          format.indexOf('h') > -1 ||\n          format.indexOf('k') > -1\n        ),\n        showMinute: format.indexOf('m') > -1,\n        showSecond: format.indexOf('s') > -1,\n    };\n}\n\nfunction getColumns({ showHour, showMinute, showSecond, use12Hours }) {\n    let column = 0;\n    if (showHour) {\n        column += 1;\n    }\n    if (showMinute) {\n        column += 1;\n    }\n    if (showSecond) {\n        column += 1;\n    }\n    if (use12Hours) {\n        column += 1;\n    }\n    return column;\n}\n\nexport default function wrapPicker(Picker, defaultFormat) {\n    return class PickerWrapper extends React.Component {\n          static defaultProps = {\n              format: defaultFormat || 'YYYY-MM-DD',\n              transitionName: 'slide-up',\n              popupStyle: {},\n              onChange() {\n              },\n              onOk() {\n              },\n              onOpenChange() {\n              },\n              locale: {},\n              prefixCls: 'jc-calendar',\n              inputPrefixCls: 'jc-input',\n          };\n\n          componentDidMount() {\n              const { autoFocus, disabled } = this.props;\n              if (autoFocus && !disabled) {\n                  this.focus();\n              }\n          }\n\n          getDefaultLocale = () => {\n              const result = {\n                  ...enUS,\n                  ...this.props.locale,\n              };\n              result.lang = {\n                  ...result.lang,\n                  ...(this.props.locale || {}).lang,\n              };\n              return result;\n          }\n\n\n          picker;\n      \n          handleOpenChange = (open) => {\n              const { onOpenChange } = this.props;\n              onOpenChange(open);\n          }\n      \n          handleFocus = (e) => {\n              const { onFocus } = this.props;\n              if (onFocus) {\n                  onFocus(e);\n              }\n          }\n      \n          handleBlur = (e) => {\n              const { onBlur } = this.props;\n              if (onBlur) {\n                  onBlur(e);\n              }\n          }\n\n          focus() {\n              this.picker.focus();\n          }\n      \n          blur() {\n              this.picker.blur();\n          }\n      \n          savePicker = (node) => {\n              this.picker = node;\n          }\n      \n\n          renderPicker = (locale, localeCode) => {\n              const { props } = this;\n              const { prefixCls, inputPrefixCls } = props;\n              const pickerClass = classNames(`${prefixCls}-picker`, {\n                  [`${prefixCls}-picker-${props.size}`]: !!props.size,\n              });\n              const pickerInputClass = classNames(`${prefixCls}-picker-input`, inputPrefixCls, {\n                  [`${inputPrefixCls}-lg`]: props.size === 'large',\n                  [`${inputPrefixCls}-sm`]: props.size === 'small',\n                  [`${inputPrefixCls}-disabled`]: props.disabled,\n              });\n      \n              const timeFormat = (props.showTime && props.showTime.format) || 'HH:mm:ss';\n              const rcTimePickerProps = {\n                  ...generateShowHourMinuteSecond(timeFormat),\n                  format: timeFormat,\n                  use12Hours: (props.showTime && props.showTime.use12Hours),\n              };\n              const columns = getColumns(rcTimePickerProps);\n              const timePickerCls = `${prefixCls}-time-picker-column-${columns}`;\n              const timePicker = props.showTime ? (\n                  <TimePickerPanel\n                      {...rcTimePickerProps}\n                      {...props.showTime}\n                      prefixCls={`${prefixCls}-time-picker`}\n                      className={timePickerCls}\n                      placeholder={locale.timePickerLocale.placeholder}\n                      transitionName='slide-up'\n                  />\n              ) : null;\n      \n              return (\n                  <Picker\n                      {...props}\n                      ref={this.savePicker}\n                      pickerClass={pickerClass}\n                      pickerInputClass={pickerInputClass}\n                      locale={locale}\n                      localeCode={localeCode}\n                      timePicker={timePicker}\n                      onOpenChange={this.handleOpenChange}\n                      onFocus={this.handleFocus}\n                      onBlur={this.handleBlur}\n                  />\n              );\n          }\n\n          render() {\n              return (\n                  <LocaleReceiver\n                      componentName='DatePicker'\n                      defaultLocale={this.getDefaultLocale}\n                  >\n                      {this.renderPicker}\n                  </LocaleReceiver>\n              );\n          }\n    };\n}\n"]}