{"version":3,"sources":["../../components/transfer/item.js"],"names":["React","Item","args","shouldComponentUpdate","apply","props","renderedText","renderedEl","item","lazy","checked","prefixCls","onClick","className","disabled","listItem","undefined","children","lazyProps","height","offset","throttle","debounce","Component"],"mappings":";;;;;;;;;;;AAKC;;IAAYA,K;;AACZ;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;+eATD;;;;;IAWsBC,I;;;;;;;;;;;4CACY;AAAA,wCAANC,IAAM;AAANA,YAAM;AAAA;;AAC7B,aAAO,0BAAgBC,qBAAhB,CAAsCC,KAAtC,CAA4C,IAA5C,EAAkDF,IAAlD,CAAP;AACD;;;6BACQ;AAAA;;AAAA,mBACuE,KAAKG,KAD5E;AAAA,UACCC,YADD,UACCA,YADD;AAAA,UACeC,UADf,UACeA,UADf;AAAA,UAC2BC,IAD3B,UAC2BA,IAD3B;AAAA,UACiCC,IADjC,UACiCA,IADjC;AAAA,UACuCC,OADvC,UACuCA,OADvC;AAAA,UACgDC,SADhD,UACgDA,SADhD;AAAA,UAC2DC,OAD3D,UAC2DA,OAD3D;;;AAGP,UAAMC,YAAY,0EACZF,SADY,oBACe,IADf,gCAEZA,SAFY,6BAEwBH,KAAKM,QAF7B,gBAAlB;;AAKA,UAAMC,WACJ;AAAA;AAAA;AACE,qBAAWF,SADb;AAEE,iBAAOP,YAFT;AAGE,mBAASE,KAAKM,QAAL,GAAgBE,SAAhB,GAA4B;AAAA,mBAAMJ,QAAQJ,IAAR,CAAN;AAAA;AAHvC;AAKE,kDAAU,SAASE,OAAnB,EAA4B,UAAUF,KAAKM,QAA3C,GALF;AAME;AAAA;AAAA;AAAOP;AAAP;AANF,OADF;AAUA,UAAIU,WAA+B,IAAnC;AACA,UAAIR,IAAJ,EAAU;AACR,YAAMS;AACJC,kBAAQ,EADJ;AAEJC,kBAAQ,GAFJ;AAGJC,oBAAU,CAHN;AAIJC,oBAAU;AAJN,WAKDb,IALC,CAAN;AAOAQ,mBAAW;AAAA;AAAcC,mBAAd;AAA0BH;AAA1B,SAAX;AACD,OATD,MASO;AACLE,mBAAWF,QAAX;AACD;;AAED,aAAOE,QAAP;AACD;;;;EArC+BjB,MAAMuB,S;;kBAAnBtB,I","file":"item.js","sourcesContent":["/**\n * @author panzilong\n * @version 1.0.0\n */\n\n import * as React from 'react';\n import classNames from 'classnames';\n import PureRenderMixin from 'rc-util/lib/PureRenderMixin';\n import Lazyload from 'react-lazy-load';\n import Checkbox from '../checkbox';\n\n export default class Item extends React.Component {\n   shouldComponentUpdate(...args) {\n     return PureRenderMixin.shouldComponentUpdate.apply(this, args);\n   }\n   render() {\n     const { renderedText, renderedEl, item, lazy, checked, prefixCls, onClick } = this.props;\n\n     const className = classNames({\n       [`${prefixCls}-content-item`]: true,\n       [`${prefixCls}-content-item-disabled`]: item.disabled,\n     });\n\n     const listItem = (\n       <li\n         className={className}\n         title={renderedText}\n         onClick={item.disabled ? undefined : () => onClick(item)}\n       >\n         <Checkbox checked={checked} disabled={item.disabled} />\n         <span>{renderedEl}</span>\n       </li>\n     );\n     let children: JSX.Element | null = null;\n     if (lazy) {\n       const lazyProps = {\n         height: 32,\n         offset: 500,\n         throttle: 0,\n         debounce: false,\n         ...lazy,\n       };\n       children = <Lazyload {...lazyProps}>{listItem}</Lazyload>;\n     } else {\n       children = listItem;\n     }\n\n     return children;\n   }\n }\n"]}