{"version":3,"sources":["../../components/transfer/index.js"],"names":["TransferListProps","TransferOperationProps","TransferSearchProps","React","noop","Transfer","props","selectedKeys","targetKeys","state","leftFilter","rightFilter","sourceSelectedKeys","filter","indexOf","key","targetSelectedKeys","nextProps","dataSource","splitedDataSource","newSourceSelectedKeys","newTargetSelectedKeys","forEach","includes","push","setState","rowKey","leftDataSource","rightDataSource","Array","length","record","indexOfKey","direction","holder","onSelectChange","transferLocale","titles","renderTransfer","Component","List","Operation","Search","defaultProps","render","showSearch","propTypes","prefixCls","string","array","func","onChange","height","number","listStyle","object","className","operations","bool","filterOption","searchPlaceholder","notFoundContent","node","body","footer","lazy","oneOfType","moveTo","moveKeys","newMoveKeys","some","data","disabled","newTargetKeys","concat","targetKey","oppositeDirection","getSelectedKeysName","handleSelectChange","moveToLeft","moveToRight","handleSelectAll","filteredDataSource","checkAll","originalSelectedKeys","currentKeys","map","item","newKeys1","newKeys2","handleLeftSelectAll","handleRightSelectAll","handleFilter","e","target","value","onSearchChange","handleLeftFilter","handleRightFilter","handleClear","handleLeftClear","handleRightClear","handleSelect","selectedItem","checked","index","splice","handleLeftSelect","handleRightSelect","handleScroll","onScroll","handleLeftScroll","handleRightScroll","locale","splitDataSource","leftActive","rightActive","cls","getTitles","itemUnit","itemsUnit"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * @author panzilong\n * @version 1.0.0\n */\n import * as React from 'react';\n import PropTypes from 'prop-types';\n import classNames from 'classnames';\n import List, { TransferListProps } from './list';\n import Operation from './operation';\n import Search from './search';\n import LocaleReceiver from '../locale-provider/LocaleReceiver';\n import defaultLocale from '../locale-provider/default';\n\n export { TransferListProps } from './list';\n export { TransferOperationProps } from './operation';\n export { TransferSearchProps } from './search';\n\n function noop() {\n }\n\n export default class Transfer extends React.Component {\n   // For high-level customized Transfer @dqaria\n   static List = List;\n   static Operation = Operation;\n   static Search = Search;\n\n   static defaultProps = {\n     dataSource: [],\n     render: noop,\n     showSearch: false,\n   };\n\n   static propTypes = {\n     prefixCls: PropTypes.string,\n     dataSource: PropTypes.array,\n     render: PropTypes.func,\n     targetKeys: PropTypes.array,\n     onChange: PropTypes.func,\n     height: PropTypes.number,\n     listStyle: PropTypes.object,\n     className: PropTypes.string,\n     titles: PropTypes.array,\n     operations: PropTypes.array,\n     showSearch: PropTypes.bool,\n     filterOption: PropTypes.func,\n     searchPlaceholder: PropTypes.string,\n     notFoundContent: PropTypes.node,\n     body: PropTypes.func,\n     footer: PropTypes.func,\n     rowKey: PropTypes.func,\n     lazy: PropTypes.oneOfType([PropTypes.object, PropTypes.bool]),\n   };\n\n   // splitedDataSource: {\n   //   leftDataSource: TransferItem[],\n   //   rightDataSource: TransferItem[],\n   // } | null;\n\n   constructor(props) {\n     super(props);\n\n     const { selectedKeys = [], targetKeys = [] } = props;\n     this.state = {\n       leftFilter: '',\n       rightFilter: '',\n       sourceSelectedKeys: selectedKeys.filter(key => targetKeys.indexOf(key) === -1),\n       targetSelectedKeys: selectedKeys.filter(key => targetKeys.indexOf(key) > -1),\n     };\n   }\n\n   componentWillReceiveProps(nextProps) {\n     const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n\n     if (nextProps.targetKeys !== this.props.targetKeys ||\n       nextProps.dataSource !== this.props.dataSource) {\n       // clear cached splited dataSource\n       this.splitedDataSource = null;\n\n       if (!nextProps.selectedKeys) {\n         // clear key nolonger existed\n         // clear checkedKeys according to targetKeys\n         const { dataSource, targetKeys = [] } = nextProps;\n\n         const newSourceSelectedKeys: String[] = [];\n         const newTargetSelectedKeys: String[] = [];\n         dataSource.forEach(({ key }) => {\n           if (sourceSelectedKeys.includes(key) && !targetKeys.includes(key)) {\n             newSourceSelectedKeys.push(key);\n           }\n           if (targetSelectedKeys.includes(key) && targetKeys.includes(key)) {\n             newTargetSelectedKeys.push(key);\n           }\n         });\n         this.setState({\n           sourceSelectedKeys: newSourceSelectedKeys,\n           targetSelectedKeys: newTargetSelectedKeys,\n         });\n       }\n     }\n\n     if (nextProps.selectedKeys) {\n       const targetKeys = nextProps.targetKeys || [];\n       this.setState({\n         sourceSelectedKeys: nextProps.selectedKeys.filter(key => !targetKeys.includes(key)),\n         targetSelectedKeys: nextProps.selectedKeys.filter(key => targetKeys.includes(key)),\n       });\n     }\n   }\n\n   splitDataSource(props) {\n     if (this.splitedDataSource) {\n       return this.splitedDataSource;\n     }\n\n     const { dataSource, rowKey, targetKeys = [] } = props;\n\n     const leftDataSource = [];\n     const rightDataSource = new Array(targetKeys.length);\n     dataSource.forEach(record => {\n       if (rowKey) {\n         record.key = rowKey(record);\n       }\n\n       // rightDataSource should be ordered by targetKeys\n       // leftDataSource should be ordered by dataSource\n       const indexOfKey = targetKeys.indexOf(record.key);\n       if (indexOfKey !== -1) {\n         rightDataSource[indexOfKey] = record;\n       } else {\n         leftDataSource.push(record);\n       }\n     });\n\n     this.splitedDataSource = {\n       leftDataSource,\n       rightDataSource,\n     };\n\n     return this.splitedDataSource;\n   }\n\n   moveTo = (direction) => {\n     const { targetKeys = [], dataSource = [], onChange } = this.props;\n     const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n     const moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys;\n     // filter the disabled options\n     const newMoveKeys = moveKeys.filter((key: string) =>\n       !dataSource.some(data => !!(key === data.key && data.disabled)),\n     );\n     // move items to target box\n     const newTargetKeys = direction === 'right'\n       ? newMoveKeys.concat(targetKeys)\n       : targetKeys.filter(targetKey => newMoveKeys.indexOf(targetKey) === -1);\n\n     // empty checked keys\n     const oppositeDirection = direction === 'right' ? 'left' : 'right';\n     this.setState({\n       [this.getSelectedKeysName(oppositeDirection)]: [],\n     });\n     this.handleSelectChange(oppositeDirection, []);\n\n     if (onChange) {\n       onChange(newTargetKeys, direction, newMoveKeys);\n     }\n   }\n\n   moveToLeft = () => this.moveTo('left');\n   moveToRight = () => this.moveTo('right');\n\n   handleSelectChange(direction, holder: string[]) {\n     const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n     const onSelectChange = this.props.onSelectChange;\n     if (!onSelectChange) {\n       return;\n     }\n\n     if (direction === 'left') {\n       onSelectChange(holder, targetSelectedKeys);\n     } else {\n       onSelectChange(sourceSelectedKeys, holder);\n     }\n   }\n\n   handleSelectAll = (direction, filteredDataSource, checkAll: boolean) => {\n     const originalSelectedKeys = this.state[this.getSelectedKeysName(direction)] || [];\n     const currentKeys = filteredDataSource.map(item => item.key);\n     // Only operate current keys from original selected keys\n     const newKeys1 = originalSelectedKeys.filter((key: string) => currentKeys.indexOf(key) === -1);\n     const newKeys2 = [...originalSelectedKeys];\n     currentKeys.forEach((key) => {\n       if (newKeys2.indexOf(key) === -1) {\n         newKeys2.push(key);\n       }\n     });\n     const holder = checkAll ? newKeys1 : newKeys2;\n     this.handleSelectChange(direction, holder);\n\n     if (!this.props.selectedKeys) {\n       this.setState({\n         [this.getSelectedKeysName(direction)]: holder,\n       });\n     }\n   }\n\n   handleLeftSelectAll = (filteredDataSource, checkAll: boolean) => (\n     this.handleSelectAll('left', filteredDataSource, checkAll)\n   )\n   handleRightSelectAll = (filteredDataSource, checkAll: boolean) => (\n     this.handleSelectAll('right', filteredDataSource, checkAll)\n   )\n\n   handleFilter = (direction, e) => {\n     this.setState({\n       // add filter\n       [`${direction}Filter`]: e.target.value,\n     });\n     if (this.props.onSearchChange) {\n       this.props.onSearchChange(direction, e);\n     }\n   }\n\n   handleLeftFilter = (e) => this.handleFilter('left', e);\n   handleRightFilter = (e) => this.handleFilter('right', e);\n\n   handleClear = (direction: string) => {\n     this.setState({\n       [`${direction}Filter`]: '',\n     });\n   }\n\n   handleLeftClear = () => this.handleClear('left');\n   handleRightClear = () => this.handleClear('right');\n\n   handleSelect = (direction, selectedItem, checked: boolean) => {\n     const { sourceSelectedKeys, targetSelectedKeys } = this.state;\n     const holder = direction === 'left' ? [...sourceSelectedKeys] : [...targetSelectedKeys];\n     const index = holder.indexOf(selectedItem.key);\n     if (index > -1) {\n       holder.splice(index, 1);\n     }\n     if (checked) {\n       holder.push(selectedItem.key);\n     }\n     this.handleSelectChange(direction, holder);\n\n     if (!this.props.selectedKeys) {\n       this.setState({\n         [this.getSelectedKeysName(direction)]: holder,\n       });\n     }\n   }\n\n   handleLeftSelect = (selectedItem, checked: boolean) => {\n     return this.handleSelect('left', selectedItem, checked);\n   }\n\n   handleRightSelect = (selectedItem, checked: boolean) => {\n     return this.handleSelect('right', selectedItem, checked);\n   }\n\n   handleScroll = (direction, e) => {\n     const { onScroll } = this.props;\n     if (onScroll) {\n       onScroll(direction, e);\n     }\n   }\n\n   handleLeftScroll = (e) => this.handleScroll('left', e);\n   handleRightScroll = (e) => this.handleScroll('right', e);\n\n   getTitles(transferLocale) {\n     const { props } = this;\n     if (props.titles) {\n       return props.titles;\n     }\n     return transferLocale.titles;\n   }\n\n   getSelectedKeysName(direction) {\n     return direction === 'left' ? 'sourceSelectedKeys' : 'targetSelectedKeys';\n   }\n\n   renderTransfer = (locale) => {\n     const {\n       prefixCls = 'jc-transfer',\n       className,\n       operations = [],\n       showSearch,\n       notFoundContent,\n       searchPlaceholder,\n       body,\n       footer,\n       listStyle,\n       filterOption,\n       render,\n       lazy,\n     } = this.props;\n     const { leftFilter, rightFilter, sourceSelectedKeys, targetSelectedKeys } = this.state;\n\n     const { leftDataSource, rightDataSource } = this.splitDataSource(this.props);\n     const leftActive = targetSelectedKeys.length > 0;\n     const rightActive = sourceSelectedKeys.length > 0;\n\n     const cls = classNames(className, prefixCls);\n\n     const titles = this.getTitles(locale);\n     return (\n       <div className={cls}>\n         <List\n           prefixCls={`${prefixCls}-list`}\n           titleText={titles[0]}\n           dataSource={leftDataSource}\n           filter={leftFilter}\n           filterOption={filterOption}\n           style={listStyle}\n           checkedKeys={sourceSelectedKeys}\n           handleFilter={this.handleLeftFilter}\n           handleClear={this.handleLeftClear}\n           handleSelect={this.handleLeftSelect}\n           handleSelectAll={this.handleLeftSelectAll}\n           render={render}\n           showSearch={showSearch}\n           searchPlaceholder={searchPlaceholder || locale.searchPlaceholder}\n           notFoundContent={notFoundContent || locale.notFoundContent}\n           itemUnit={locale.itemUnit}\n           itemsUnit={locale.itemsUnit}\n           body={body}\n           footer={footer}\n           lazy={lazy}\n           onScroll={this.handleLeftScroll}\n         />\n         <Operation\n           className={`${prefixCls}-operation`}\n           rightActive={rightActive}\n           rightArrowText={operations[0]}\n           moveToRight={this.moveToRight}\n           leftActive={leftActive}\n           leftArrowText={operations[1]}\n           moveToLeft={this.moveToLeft}\n         />\n         <List\n           prefixCls={`${prefixCls}-list`}\n           titleText={titles[1]}\n           dataSource={rightDataSource}\n           filter={rightFilter}\n           filterOption={filterOption}\n           style={listStyle}\n           checkedKeys={targetSelectedKeys}\n           handleFilter={this.handleRightFilter}\n           handleClear={this.handleRightClear}\n           handleSelect={this.handleRightSelect}\n           handleSelectAll={this.handleRightSelectAll}\n           render={render}\n           showSearch={showSearch}\n           searchPlaceholder={searchPlaceholder || locale.searchPlaceholder}\n           notFoundContent={notFoundContent || locale.notFoundContent}\n           itemUnit={locale.itemUnit}\n           itemsUnit={locale.itemsUnit}\n           body={body}\n           footer={footer}\n           lazy={lazy}\n           onScroll={this.handleRightScroll}\n         />\n       </div>\n     );\n   }\n\n   render() {\n     return (\n       <LocaleReceiver\n         componentName=\"Transfer\"\n         defaultLocale={defaultLocale.Transfer}\n       >\n         {this.renderTransfer}\n       </LocaleReceiver>\n     );\n   }\n }\n"]}