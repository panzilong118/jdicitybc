{"version":3,"sources":["../../components/util/leaflet-baidumap.js"],"names":["L","TileLayer","ChinaProvider","extend","initialize","type","options","getProviderConf","url","opt","prototype","call","split","providerName","mapName","mapType","providers","subdomains","mapConf","mapOptions","styles","Object","assign","name","tms","TianDiTu","Normal","Map","Annotion","Satellite","Terrain","Baidu","bigfont","Custom","Time","time","Date","now","GaoDe","Google","Geoq","Color","PurplishBlue","Gray","Warm","Cold","tileLayer","chinaProvider","CRS","Proj","resolutions","res","level","Math","pow","i","origin","bounds"],"mappings":"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","file":"leaflet-baidumap.js","sourcesContent":["/**\n * usage:\n *\n * normal:\n *  const map = L.map('map', {\n *    crs: L.CRS.Baidu, // if use baidu\n *    center: [31.59, 120.29],\n *    zoom: 12,\n *    maxZoom: 18,\n *    minZoom: 5\n *  })\n *  L.tileLayer.chinaProvider('TianDiTu.Normal.Map').addTo(map)\n *  L.tileLayer.chinaProvider('TianDiTu.Normal.Annotion').addTo(map)\n *\n */\n/* eslint-disable */\nimport L from 'leaflet'\nimport 'proj4leaflet'\n\nL.TileLayer.ChinaProvider = L.TileLayer.extend({\n  initialize: function (type, options = {}) { // (type, Object)\n    const { url, options: opt } = L.TileLayer.ChinaProvider.getProviderConf(type, options)\n    L.TileLayer.prototype.initialize.call(this, url, opt);\n  }\n});\n\nL.TileLayer.ChinaProvider.getProviderConf = function (type, options = {}) {\n  const [providerName, mapName, mapType] = type.split('.');\n  const { subdomains, [mapName]: mapConf } = L.TileLayer.ChinaProvider.providers[providerName]\n  const url = mapConf[mapType];\n  const {options: mapOptions = {}} = mapConf;\n  if(providerName === 'Baidu') {\n    const { styles } = mapOptions\n    if(typeof styles === 'function') {\n      mapOptions.styles = styles(options)\n    }\n    options = Object.assign(mapOptions, {\n      name: options.name,\n      tms: true\n    }, options)\n  }\n  options.subdomains = mapOptions.subdomains || subdomains\n  return { url, options }\n}\n\nL.TileLayer.ChinaProvider.providers = {\n  TianDiTu: {\n    Normal: {\n      Map: \"http://t{s}.tianditu.cn/DataServer?T=vec_w&X={x}&Y={y}&L={z}\",\n      Annotion: \"http://t{s}.tianditu.cn/DataServer?T=cva_w&X={x}&Y={y}&L={z}\"\n    },\n    Satellite: {\n      Map: \"http://t{s}.tianditu.cn/DataServer?T=img_w&X={x}&Y={y}&L={z}\",\n      Annotion: \"http://t{s}.tianditu.cn/DataServer?T=cia_w&X={x}&Y={y}&L={z}\"\n    },\n    Terrain: {\n      Map: \"http://t{s}.tianditu.cn/DataServer?T=ter_w&X={x}&Y={y}&L={z}\",\n      Annotion: \"http://t{s}.tianditu.cn/DataServer?T=cta_w&X={x}&Y={y}&L={z}\"\n    },\n    subdomains: ['0', '1', '2', '3', '4', '5', '6', '7']\n  },\n  Baidu: {\n    Normal: {\n      Map: 'http://online{s}.map.bdimg.com/onlinelabel/?qt=tile&x={x}&y={y}&z={z}&styles={styles}&scaler=1&p=1',\n      options: {\n        styles: ({bigfont}) => bigfont ? 'ph' : 'pl'\n      }\n    },\n    Satellite: {\n      Map: 'http://shangetu{s}.map.bdimg.com/it/u=x={x};y={y};z={z};v=009;type=sate&fm=46',\n      Annotion: 'http://online{s}.map.bdimg.com/tile/?qt=tile&x={x}&y={y}&z={z}&styles={styles}&v=020',\n      options: {\n        styles: ({bigfont}) => bigfont ? 'sh' : 'sl'\n      }\n    },\n    Custom: {\n      Map: 'http://api{s}.map.bdimg.com/customimage/tile?&x={x}&y={y}&z={z}&scale=1&customid={customid}',\n      options: {\n        subdomains: '012'\n      }\n    },\n    Time: {\n      Map: 'http://its.map.baidu.com:8002/traffic/TrafficTileService?x={x}&y={y}&level={z}&time={time}&label=web2D&v=017',\n      options: {\n        time: Date.now()\n      }\n    },\n    subdomains: '0123456789'\n  },\n  GaoDe: {\n    Normal: {\n      Map: 'http://webrd0{s}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&scale=1&style=8&x={x}&y={y}&z={z}'\n    },\n    Satellite: {\n      Map: 'http://webst0{s}.is.autonavi.com/appmaptile?style=6&x={x}&y={y}&z={z}',\n      Annotion: 'http://webst0{s}.is.autonavi.com/appmaptile?style=8&x={x}&y={y}&z={z}'\n    },\n    subdomains: [\"1\", \"2\", \"3\", \"4\"]\n  },\n\n  Google: {\n    Normal: {\n      Map: \"http://www.google.cn/maps/vt?lyrs=m@189&gl=cn&x={x}&y={y}&z={z}\"\n    },\n    Satellite: {\n      Map: \"http://www.google.cn/maps/vt?lyrs=s@189&gl=cn&x={x}&y={y}&z={z}\"\n    },\n    subdomains: []\n  },\n\n  Geoq: {\n    Normal: {\n      Map: \"http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineCommunity/MapServer/tile/{z}/{y}/{x}\",\n      Color: \"http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetColor/MapServer/tile/{z}/{y}/{x}\",\n      PurplishBlue: \"http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}\",\n      Gray: \"http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetGray/MapServer/tile/{z}/{y}/{x}\",\n      Warm: \"http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetWarm/MapServer/tile/{z}/{y}/{x}\",\n      Cold: \"http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetCold/MapServer/tile/{z}/{y}/{x}\"\n    },\n    subdomains: []\n  }\n};\n\nL.tileLayer.chinaProvider = function (type, options) {\n  return new L.TileLayer.ChinaProvider(type, options);\n};\n\n//请引入 proj4.js 和 proj4leaflet.js\nL.CRS.Baidu = new L.Proj.CRS(\n  'EPSG:900913',\n  `+proj=merc\n    +a=6378206\n    +b=6356584.314245179\n    +lat_ts=0.0\n    +lon_0=0.0\n    +x_0=0\n    +y_0=0\n    +k=1.0\n    +units=m\n    +nadgrids=@null\n    +wktext\n    +no_defs`, {\n  resolutions: function () {\n    var res = [],\n      level = 19;\n    res[0] = Math.pow(2, 18);\n    for (var i = 1; i < level; i++) {\n      res[i] = Math.pow(2, (18 - i))\n    }\n    return res;\n  }(),\n  origin: [0, 0],\n  bounds: L.bounds([20037508.342789244, 0], [0, 20037508.342789244])\n});\n"]}