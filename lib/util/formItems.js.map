{"version":3,"sources":["../../components/util/formItems.js"],"names":["getInputFormItem","getFormItemWraper","FormItem","Item","label","name","messageInfo","placehoder","rule","formItemLayout","initialValue","className","getFieldDecorator","props","form","options","rules","required","message","push","opt","decorator","render"],"mappings":";;;;;;;;;;;;;;;;QAcgBA,gB,GAAAA,gB;QAkCAC,iB,GAAAA,iB;;;;;;AAhDhB;;;;;;AAKA,IAAMC,WAAW,eAAKC,IAAtB;AACA;;;;;;;;AAQO,SAASH,gBAAT,OASJ;AAAA,MARDI,KAQC,QARDA,KAQC;AAAA,MAPDC,IAOC,QAPDA,IAOC;AAAA,8BANDC,WAMC;AAAA,MANDA,WAMC,oCANa,KAMb;AAAA,MALDC,UAKC,QALDA,UAKC;AAAA,MAJDC,IAIC,QAJDA,IAIC;AAAA,MAHDC,cAGC,QAHDA,cAGC;AAAA,MAFDC,YAEC,QAFDA,YAEC;AAAA,MADDC,SACC,QADDA,SACC;AAAA,MACeC,iBADf,GACuC,KAAKC,KAD5C,CACOC,IADP,CACeF,iBADf;;AAED,MAAMG,UAAU;AACdC,WAAO,CAAC;AACNC,gBAAU,IADJ;AAENC,eAAYZ,WAAZ,SAA2BF;AAFrB,KAAD;AADO,GAAhB;AAMA,MAAII,IAAJ,EAAUO,QAAQC,KAAR,CAAcG,IAAd,CAAmBX,IAAnB;AACV,MAAIE,YAAJ,EAAkBK,QAAQL,YAAR,GAAuBA,YAAvB;;AAElB,SACE;AAAC,YAAD;AAAA;AACE,uBADF;AAEE,iBAAWC,SAFb;AAGE,aAAOP;AAHT,OAIMK,cAJN;AAOIG,sBAAkBP,IAAlB,EAAwBU,OAAxB,EAAiC,iDAAO,aAAaR,UAApB,GAAjC;AAPJ,GADF;AAYD;;AAEM,SAASN,iBAAT,GAAqD;AAAA,MAA1BmB,GAA0B,uEAApB,EAAoB;AAAA,MAAhBC,SAAgB,uEAAJ,EAAI;AAAA,MAC1CT,iBAD0C,GAClB,KAAKC,KADa,CAClDC,IADkD,CAC1CF,iBAD0C;;AAE1D,SAAO,UAAUR,KAAV,EAAiBC,IAAjB,EAAuBiB,MAAvB,EAA+B;AACpC,WACE;AAAC,cAAD;AAAA;AACE,yBADF;AAEE,eAAOlB;AAFT,SAGMgB,GAHN;AAMIR,wBAAkBP,IAAlB;AACEW,eAAO,CAAC;AACNC,oBAAU,IADJ;AAENC,mBAAYd,KAAZ;AAFM,SAAD;AADT,SAKKiB,SALL,GAMGC,QANH;AANJ,KADF;AAiBD,GAlBD;AAmBD","file":"formItems.js","sourcesContent":["import React from 'react';\nimport {\n  Input, Form\n} from 'antd';\n\nconst FormItem = Form.Item;\n/**\n * usage: getInputFormItem.bind(this, ...)\n * @param {*} label\n * @param {*} name\n * @param {*} message\n * @param {*} placehoder\n * @param {*} rule\n */\nexport function getInputFormItem({\n  label,\n  name,\n  messageInfo = '请输入',\n  placehoder,\n  rule,\n  formItemLayout,\n  initialValue,\n  className\n}) {\n  const { form: { getFieldDecorator } } = this.props;\n  const options = {\n    rules: [{\n      required: true,\n      message: `${messageInfo} ${label}`\n    }]\n  };\n  if (rule) options.rules.push(rule);\n  if (initialValue) options.initialValue = initialValue;\n\n  return (\n    <FormItem\n      hasFeedback\n      className={className}\n      label={label}\n      {...formItemLayout}\n    >\n      {\n        getFieldDecorator(name, options)(<Input placeholder={placehoder} />)\n      }\n    </FormItem>\n  );\n}\n\nexport function getFormItemWraper(opt = {}, decorator = {}) {\n  const { form: { getFieldDecorator } } = this.props;\n  return function (label, name, render) {\n    return (\n      <FormItem\n        hasFeedback\n        label={label}\n        {...opt}\n      >\n        {\n          getFieldDecorator(name, {\n            rules: [{\n              required: true,\n              message: `${label}是必填项`\n            }],\n            ...decorator\n          })(render())\n        }\n      </FormItem>\n    );\n  };\n}\n"]}