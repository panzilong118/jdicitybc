{"version":3,"sources":["../../components/util/loadScripts.js"],"names":["compareExistFiles","tag","urls","files","document","getElementsByTagName","type","paths","i","len","length","push","getAttribute","loadScripts","scriptsArr","callback","parentArg","scripts","parent","documentElement","loaded","node","createElement","onload","onreadystatechange","rs","readyState","src","appendChild"],"mappings":";;;;;;;AAAA;;AAEO,IAAMA,gDAAoB,SAApBA,iBAAoB,CAACC,GAAD,EAAMC,IAAN,EAAe;AAC9C,MAAMC,QAAQC,SAASC,oBAAT,CAA8BJ,GAA9B,CAAd;AACA,MAAMK,OAAOL,QAAQ,QAAR,GAAmB,KAAnB,GAA2B,MAAxC;AACA,MAAMM,QAAQ,EAAd;AACA,OAAK,IAAIC,IAAI,CAAR,EAAWC,MAAMN,MAAMO,MAA5B,EAAoCF,IAAIC,GAAxC,EAA6CD,GAA7C,EAAkD;AAChDD,UAAMI,IAAN,CAAWR,MAAMK,CAAN,EAASI,YAAT,CAAsBN,IAAtB,CAAX;AACD;AACD,SAAO,wBAAWJ,IAAX,EAAiBK,KAAjB,CAAP;AACD,CARM;;AAUA,IAAMM,oCAAc,SAAdA,WAAc,CAACC,UAAD,EAAaC,QAAb,EAA8C;AAAA,MAAvBC,SAAuB,uEAAX,MAAW;;AACvE,MAAMC,UAAUjB,kBAAkB,QAAlB,EAA4Bc,UAA5B,CAAhB;AACA,MAAIG,QAAQP,MAAR,KAAmB,CAAvB,EAA0B;AAAE;AAC1BK,gBAAYA,UAAZ;AACA;AACD;AACD,MAAMG,SAASd,SAASC,oBAAT,CAA8BW,SAA9B,EAAyC,CAAzC,KACVZ,SAASe,eADd;AAEA,MAAIC,SAAS,CAAb;AACA,OAAK,IAAIZ,IAAI,CAAR,EAAWC,MAAMQ,QAAQP,MAA9B,EAAsCF,IAAIC,GAA1C,EAA+CD,GAA/C,EAAoD;AAClD,QAAIa,OAAOjB,SAASkB,aAAT,CAAuB,QAAvB,CAAX;AACA;AACAD,SAAKE,MAAL,GAAcF,KAAKG,kBAAL,GAA0B,YAAY;AAClD,UAAMC,KAAK,KAAKC,UAAhB;AACA,UAAI,OAAOD,EAAP,KAAc,WAAd,IAA6BA,OAAO,QAApC,IAAgDA,OAAO,UAA3D,EAAuE;AACrEL;AACA;AACA,aAAKG,MAAL,GAAc,KAAKC,kBAAL,GAA0B,IAAxC;AACAH,eAAO,IAAP;AACA,YAAID,WAAWH,QAAQP,MAAvB,EAA+B;AAC7BK,sBAAYA,UAAZ;AACD;AACF;AACF,KAXD;AAYAM,SAAKM,GAAL,GAAWV,QAAQT,CAAR,CAAX;AACAU,WAAOU,WAAP,CAAmBP,IAAnB;AACD;AACF,CA3BM","file":"loadScripts.js","sourcesContent":["import { difference } from 'lodash';\n\nexport const compareExistFiles = (tag, urls) => {\n  const files = document.getElementsByTagName(tag);\n  const type = tag === 'script' ? 'src' : 'href';\n  const paths = [];\n  for (let i = 0, len = files.length; i < len; i++) {\n    paths.push(files[i].getAttribute(type));\n  }\n  return difference(urls, paths);\n};\n\nexport const loadScripts = (scriptsArr, callback, parentArg = 'head') => {\n  const scripts = compareExistFiles('script', scriptsArr);\n  if (scripts.length === 0) { // 如果script都已经存在 则直接执行callback\n    callback && callback();\n    return;\n  }\n  const parent = document.getElementsByTagName(parentArg)[0]\n    || document.documentElement;\n  let loaded = 0;\n  for (let i = 0, len = scripts.length; i < len; i++) {\n    let node = document.createElement('script');\n    // eslint-disable-next-line\n    node.onload = node.onreadystatechange = function () {\n      const rs = this.readyState;\n      if (typeof rs === 'undefined' || rs === 'loaded' || rs === 'complete') {\n        loaded++;\n        // eslint-disable-next-line\n        this.onload = this.onreadystatechange = null;\n        node = null;\n        if (loaded === scripts.length) {\n          callback && callback();\n        }\n      }\n    };\n    node.src = scripts[i];\n    parent.appendChild(node);\n  }\n};\n"]}