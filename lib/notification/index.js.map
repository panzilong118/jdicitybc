{"version":3,"sources":["../../components/notification/index.js"],"names":["React","notificationInstance","defaultDuration","defaultTop","defaultBottom","defaultPlacement","defaultGetContainer","setNotificationConfig","options","duration","placement","bottom","top","getContainer","undefined","getPlacementStyle","style","left","right","getNotificationInstance","prefixCls","callback","cacheKey","newInstance","className","notification","typeToIcon","success","info","error","warning","notice","args","outerPrefixCls","iconNode","icon","type","iconType","autoMarginTag","description","content","message","btn","closable","onClose","key","api","open","close","Object","keys","forEach","removeNotice","config","destroy","warn"],"mappings":"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","file":"index.js","sourcesContent":["/**\r\n * Created by gaoqingli on 2018/4/19.\r\n */\r\nimport * as React from 'react';\r\n\r\nimport Notification from 'rc-notification';\r\n\r\nimport Icon from '../icon';\r\n\r\nexport type NotificationPlacement = 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\r\n\r\nexport type IconType = 'success' | 'info' | 'error' | 'warning';\r\n\r\nconst notificationInstance = {};\r\nlet defaultDuration = 4.5;\r\nlet defaultTop = 24;\r\nlet defaultBottom = 24;\r\nlet defaultPlacement = 'topRight';\r\nlet defaultGetContainer;\r\n\r\nfunction setNotificationConfig(options) {\r\n    const { duration, placement, bottom, top, getContainer } = options;\r\n    if (duration !== undefined) {\r\n        defaultDuration = duration;\r\n    }\r\n    if (placement !== undefined) {\r\n        defaultPlacement = placement;\r\n    }\r\n    if (bottom !== undefined) {\r\n        defaultBottom = bottom;\r\n    }\r\n    if (top !== undefined) {\r\n        defaultTop = top;\r\n    }\r\n    if (getContainer !== undefined) {\r\n        defaultGetContainer = getContainer;\r\n    }\r\n}\r\n\r\nfunction getPlacementStyle(placement) {\r\n    let style;\r\n    switch (placement) {\r\n    case 'topLeft':\r\n        style = {\r\n            left: 0,\r\n            top: defaultTop,\r\n            bottom: 'auto',\r\n        };\r\n        break;\r\n    case 'topRight':\r\n        style = {\r\n            right: 0,\r\n            top: defaultTop,\r\n            bottom: 'auto',\r\n        };\r\n        break;\r\n    case 'bottomLeft':\r\n        style = {\r\n            left: 0,\r\n            top: 'auto',\r\n            bottom: defaultBottom,\r\n        };\r\n        break;\r\n    default:\r\n        style = {\r\n            right: 0,\r\n            top: 'auto',\r\n            bottom: defaultBottom,\r\n        };\r\n        break;\r\n    }\r\n    return style;\r\n}\r\n\r\nfunction getNotificationInstance(prefixCls, placement, callback) {\r\n    const cacheKey = `${prefixCls}-${placement}`;\r\n    if (notificationInstance[cacheKey]) {\r\n        callback(notificationInstance[cacheKey]);\r\n        return;\r\n    }\r\n    (Notification).newInstance({\r\n        prefixCls,\r\n        className: `${prefixCls}-${placement}`,\r\n        style: getPlacementStyle(placement),\r\n        getContainer: defaultGetContainer,\r\n    }, (notification: any) => {\r\n        notificationInstance[cacheKey] = notification;\r\n        callback(notification);\r\n    });\r\n}\r\n\r\nconst typeToIcon = {\r\n    success: 'check-circle-o',\r\n    info: 'info-circle-o',\r\n    error: 'cross-circle-o',\r\n    warning: 'exclamation-circle-o',\r\n};\r\n\r\nfunction notice(args) {\r\n    const outerPrefixCls = args.prefixCls || 'jc-notification';\r\n    const prefixCls = `${outerPrefixCls}-notice`;\r\n    const duration = args.duration === undefined ? defaultDuration : args.duration;\r\n\r\n    let iconNode: React.ReactNode = null;\r\n    if (args.icon) {\r\n        iconNode = (\r\n            <span className={`${prefixCls}-icon`}>\r\n                {args.icon}\r\n            </span>\r\n        );\r\n    } else if (args.type) {\r\n        const iconType = typeToIcon[args.type];\r\n        iconNode = (\r\n            <Icon\r\n                className={`${prefixCls}-icon ${prefixCls}-icon-${args.type}`}\r\n                type={iconType}\r\n            />\r\n        );\r\n    }\r\n\r\n    const autoMarginTag = (!args.description && iconNode)\r\n        ? <span className={`${prefixCls}-message-single-line-auto-margin`} />\r\n        : null;\r\n\r\n    getNotificationInstance(outerPrefixCls, args.placement || defaultPlacement, (notification) => {\r\n        notification.notice({\r\n            content: (\r\n                <div className={iconNode ? `${prefixCls}-with-icon` : ''}>\r\n                    {iconNode}\r\n                    <div className={`${prefixCls}-message`}>\r\n                        {autoMarginTag}\r\n                        {args.message}\r\n                    </div>\r\n                    <div className={`${prefixCls}-description`}>{args.description}</div>\r\n                    {args.btn ? <span className={`${prefixCls}-btn`}>{args.btn}</span> : null}\r\n                </div>\r\n            ),\r\n            duration,\r\n            closable: true,\r\n            onClose: args.onClose,\r\n            key: args.key,\r\n            style: args.style || {},\r\n            className: args.className,\r\n        });\r\n    });\r\n}\r\n\r\nconst api = {\r\n    open: notice,\r\n    close(key) {\r\n        Object.keys(notificationInstance)\r\n            .forEach(cacheKey => notificationInstance[cacheKey].removeNotice(key));\r\n    },\r\n    config: setNotificationConfig,\r\n    destroy() {\r\n        Object.keys(notificationInstance).forEach((cacheKey) => {\r\n            notificationInstance[cacheKey].destroy();\r\n            delete notificationInstance[cacheKey];\r\n        });\r\n    },\r\n};\r\n\r\n['success', 'info', 'warning', 'error'].forEach((type) => {\r\n    api[type] = (args) => {\r\n        return api.open({\r\n            ...args,\r\n            type,\r\n        });\r\n    };\r\n});\r\n\r\napi.warn = api.warning;\r\n\r\nexport default api;\r\n"]}