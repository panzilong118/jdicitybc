{"version":3,"sources":["../../components/radio/group.js"],"names":["getCheckedValue","children","value","matched","Children","forEach","radio","props","checked","valueAssist","undefined","RadioGroup","valueAssistSecord","defaultValue","checkedValue","state","radioGroup","onChange","onRadioChange","disabled","name","nextProps","setState","nextState","options","size","prefixCls","className","classString","length","map","option","label","style","onMouseEnter","onMouseLeave","id","Component","defaultProps","propTypes","any","func","string","node","bool","childContextTypes","ev","lastValue","target"],"mappings":"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","file":"group.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport shallowEqual from 'shallowequal';\r\nimport Radio from './radio';\r\n\r\nfunction getCheckedValue(children) {\r\n    let value = null;\r\n    let matched = false;\r\n    React.Children.forEach(children, (radio) => {\r\n        if (radio && radio.props && radio.props.checked) {\r\n            const valueAssist = radio.props.value;\r\n            value = valueAssist;\r\n            matched = true;\r\n        }\r\n    });\r\n    return matched ? { value } : undefined;\r\n}\r\n\r\nexport default class RadioGroup extends React.Component {\r\n    static defaultProps = {\r\n        disabled: false,\r\n    };\r\n\r\n    static propTypes = {\r\n        defaultValue: PropTypes.any,\r\n        value: PropTypes.any,\r\n        onChange: PropTypes.func,\r\n        // size: PropTypes.oneOf(['large', 'default', 'small']),\r\n        // onMouseEnter: React.MouseEventHandler,\r\n        // onMouseLeave: React.MouseEventHandler,\r\n        name: PropTypes.string,\r\n        children: PropTypes.node,\r\n        // id: PropTypes.string,\r\n        disabled: PropTypes.bool,\r\n    };\r\n\r\n  static childContextTypes = {\r\n      radioGroup: PropTypes.any,\r\n  };\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      let value;\r\n      if ('value' in props) {\r\n          const valueAssistSecord = props.value;\r\n          value = valueAssistSecord;\r\n      } else if ('defaultValue' in props) {\r\n          value = props.defaultValue;\r\n      } else {\r\n          const checkedValue = getCheckedValue(props.children);\r\n          value = checkedValue && checkedValue.value;\r\n      }\r\n      this.state = {\r\n          value,\r\n      };\r\n  }\r\n\r\n  getChildContext() {\r\n      return {\r\n          radioGroup: {\r\n              onChange: this.onRadioChange,\r\n              value: this.state.value,\r\n              disabled: this.props.disabled,\r\n              name: this.props.name,\r\n          },\r\n      };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n      if ('value' in nextProps) {\r\n          this.setState({\r\n              value: nextProps.value,\r\n          });\r\n      } else {\r\n          const checkedValue = getCheckedValue(nextProps.children);\r\n          if (checkedValue) {\r\n              this.setState({\r\n                  value: checkedValue.value,\r\n              });\r\n          }\r\n      }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n      return !shallowEqual(this.props, nextProps) ||\r\n      !shallowEqual(this.state, nextState);\r\n  }\r\n\r\n  onRadioChange = (ev) => {\r\n      const lastValue = this.state.value;\r\n      const { value } = ev.target;\r\n      if (!('value' in this.props)) {\r\n          this.setState({\r\n              value,\r\n          });\r\n      }\r\n\r\n      const { onChange } = this.props;\r\n      if (onChange && value !== lastValue) {\r\n          onChange(ev);\r\n      }\r\n  }\r\n  render() {\r\n      const { props } = this;\r\n      const { options, size } = props;\r\n      const prefixCls = props.prefixCls || 'jc-radio-group';\r\n      const className = props.prefixCls || '';\r\n      const classString = classNames(prefixCls, {\r\n          [`${prefixCls}-${size}`]: size,\r\n      }, className);\r\n\r\n      let { children } = props;\r\n\r\n      // 如果存在 options, 优先使用\r\n      if (options && options.length > 0) {\r\n          children = options.map((option) => {\r\n              if (typeof option === 'string') { // 此处类型自动推导为 string\r\n                  return (\r\n                      <Radio\r\n                          key={option.value} // key值原取为{index},ESLint校验key值不可以为index\r\n                          disabled={this.props.disabled}\r\n                          value={option}\r\n                          onChange={this.onRadioChange}\r\n                          checked={this.state.value === option}\r\n                      >\r\n                          {option}\r\n                      </Radio>\r\n                  );\r\n              } // 此处类型自动推导为 { label: string value: string }\r\n              return (\r\n                  <Radio\r\n                      key={option.value}\r\n                      disabled={option.disabled || this.props.disabled}\r\n                      value={option.value}\r\n                      onChange={this.onRadioChange}\r\n                      checked={this.state.value === option.value}\r\n                  >\r\n                      {option.label}\r\n                  </Radio>\r\n              );\r\n          });\r\n      }\r\n\r\n      return (\r\n          <div\r\n              className={classString}\r\n              style={props.style}\r\n              onMouseEnter={props.onMouseEnter}\r\n              onMouseLeave={props.onMouseLeave}\r\n              id={props.id}\r\n          >\r\n              {children}\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\n"]}