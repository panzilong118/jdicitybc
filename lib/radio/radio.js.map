{"version":3,"sources":["../../components/radio/radio.js"],"names":["Radio","saveCheckbox","node","rcCheckbox","nextProps","nextState","nextContext","props","state","context","radioGroup","focus","blur","prefixCls","className","children","style","restProps","radioProps","name","onChange","checked","value","disabled","wrapperClassString","onMouseEnter","onMouseLeave","undefined","Component","defaultProps","type","propTypes","bool","string","defaultChecked","MouseEventHandler","onKeyPress","KeyboardEventHandler","onKeyDown","any","tabIndex","number","size","oneOf","id","contextTypes","Group","instanceOf","Button"],"mappings":"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","file":"radio.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport RcCheckbox from 'rc-checkbox';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport RadioGroup from './group';\nimport RadioButton from './radioButton';\n\nexport default class Radio extends React.Component {\n  static defaultProps = {\n      prefixCls: 'jc-radio',\n      type: 'radio',\n  };\n\n  static propTypes = {\n      checked: PropTypes.bool,\n      prefixCls: PropTypes.string,\n      className: PropTypes.string,\n      defaultChecked: PropTypes.bool,\n      style: {},\n      disabled: PropTypes.bool,\n      onChange: () => {},\n      onMouseEnter: React.MouseEventHandler,\n      onMouseLeave: React.MouseEventHandler,\n      onKeyPress: React.KeyboardEventHandler,\n      onKeyDown: React.KeyboardEventHandler,\n      value: PropTypes.any,\n      tabIndex: PropTypes.number,\n      name: PropTypes.string,\n      children: PropTypes.node,\n      type: PropTypes.string,\n      size: PropTypes.oneOf(['large', 'default', 'small']),\n      id: PropTypes.string,\n\n  }\n\n  static contextTypes = {\n      radioGroup: PropTypes.any,\n  };\n\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\n      return !shallowEqual(this.props, nextProps) ||\n           !shallowEqual(this.state, nextState) ||\n           !shallowEqual(this.context.radioGroup, nextContext.radioGroup);\n  }\n\n  rcCheckbox;\n\n  focus() {\n      this.rcCheckbox.focus();\n  }\n\n  blur() {\n      this.rcCheckbox.blur();\n  }\n\n  saveCheckbox = (node) => {\n      this.rcCheckbox = node;\n  }\n\n  render() {\n      const { props, context } = this;\n      const {\n          prefixCls,\n          className,\n          children,\n          style,\n          ...restProps\n      } = props;\n      const { radioGroup } = context;\n      const radioProps = { ...restProps };\n      if (radioGroup) {\n          radioProps.name = radioGroup.name;\n          radioProps.onChange = radioGroup.onChange;\n          radioProps.checked = props.value === radioGroup.value;\n          radioProps.disabled = props.disabled || radioGroup.disabled;\n      }\n      const wrapperClassString = classNames(className, {\n          [`${prefixCls}-wrapper`]: true,\n          [`${prefixCls}-wrapper-checked`]: radioProps.checked,\n          [`${prefixCls}-wrapper-disabled`]: radioProps.disabled,\n      });\n\n      return (\n          <label\n              className={wrapperClassString}\n              style={style}\n              onMouseEnter={props.onMouseEnter}\n              onMouseLeave={props.onMouseLeave}\n          >\n              <RcCheckbox\n                  {...radioProps}\n                  prefixCls={prefixCls}\n                  ref={this.saveCheckbox}\n              />\n              {children !== undefined ? <span>{children}</span> : null}\n          </label>\n      );\n  }\n}\n\nRadio.propTypes = {\n    Group: PropTypes.instanceOf(RadioGroup),\n    Button: PropTypes.instanceOf(RadioButton)\n};\n"]}