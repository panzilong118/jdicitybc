{"version":3,"sources":["../../components/timeline/TimelineItem.js"],"names":["React","TimelineItem","props","prefixCls","className","color","last","children","pending","dot","restProps","itemClassName","dotClassName","borderColor","test","undefined","Component","defaultProps"],"mappings":";;;;;;;;;;;AAKA;;IAAYA,K;;AACZ;;;;;;;;;;;;;;;;+eANA;;;;;IAQqBC,Y;;;;;;;;;;;6BAQV;AAAA;;AAAA,mBACkF,KAAKC,KADvF;AAAA,UACCC,SADD,UACCA,SADD;AAAA,UACYC,SADZ,UACYA,SADZ;AAAA,gCACuBC,KADvB;AAAA,UACuBA,KADvB,gCAC+B,EAD/B;AAAA,UACmCC,IADnC,UACmCA,IADnC;AAAA,UACyCC,QADzC,UACyCA,QADzC;AAAA,UACmDC,OADnD,UACmDA,OADnD;AAAA,UAC4DC,GAD5D,UAC4DA,GAD5D;AAAA,UACoEC,SADpE;;AAGP,UAAMC,gBAAgB,0EAChBR,SADgB,YACG,IADH,gCAEhBA,SAFgB,iBAEQG,IAFR,gCAGhBH,SAHgB,oBAGWK,OAHX,iBAInBJ,SAJmB,CAAtB;;AAMA,UAAMQ,eAAe,4EACfT,SADe,iBACS,IADT,iCAEfA,SAFe,wBAEgBM,GAFhB,iCAGfN,SAHe,mBAGQE,KAHR,EAGkB,IAHlB,iBAArB;;AAMA,aACE;AAAA;AAAA,qBAAQK,SAAR,IAAmB,WAAWC,aAA9B;AACE,qCAAK,WAAcR,SAAd,eAAL,GADF;AAEE;AAAA;AAAA;AACE,uBAAWS,YADb;AAEE,mBAAO,EAAEC,aAAa,iBAAiBC,IAAjB,CAAsBT,KAAtB,IAA+BU,SAA/B,GAA2CV,KAA1D;AAFT;AAIGI;AAJH,SAFF;AAQE;AAAA;AAAA,YAAK,WAAcN,SAAd,kBAAL;AACGI;AADH;AARF,OADF;AAcD;;;;EArCuCP,MAAMgB,S;;AAA3Bf,Y,CACZgB,Y,GAAe;AACpBd,aAAW,aADS;AAEpBE,SAAO,MAFa;AAGpBC,QAAM,KAHc;AAIpBE,WAAS;AAJW,C;kBADHP,Y","file":"TimelineItem.js","sourcesContent":["/**\n * @author panzilong\n * @version 1.0.0\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nexport default class TimelineItem extends React.Component {\n  static defaultProps = {\n    prefixCls: 'jc-timeline',\n    color: 'blue',\n    last: false,\n    pending: false,\n  };\n\n  render() {\n    const { prefixCls, className, color = '', last, children, pending, dot, ...restProps } = this.props;\n\n    const itemClassName = classNames({\n      [`${prefixCls}-item`]: true,\n      [`${prefixCls}-item-last`]: last,\n      [`${prefixCls}-item-pending`]: pending,\n    }, className);\n\n    const dotClassName = classNames({\n      [`${prefixCls}-item-head`]: true,\n      [`${prefixCls}-item-head-custom`]: dot,\n      [`${prefixCls}-item-head-${color}`]: true,\n    });\n\n    return (\n      <li {...restProps} className={itemClassName}>\n        <div className={`${prefixCls}-item-tail`} />\n        <div\n          className={dotClassName}\n          style={{ borderColor: /blue|red|green/.test(color) ? undefined : color }}\n        >\n          {dot}\n        </div>\n        <div className={`${prefixCls}-item-content`}>\n          {children}\n        </div>\n      </li>\n    );\n  }\n}\n"]}