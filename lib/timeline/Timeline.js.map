{"version":3,"sources":["../../components/timeline/Timeline.js"],"names":["React","Timeline","props","prefixCls","children","pending","pendingDot","className","restProps","pendingNode","classString","falsylessItems","Children","toArray","filter","item","items","map","ele","idx","cloneElement","last","count","pendingItem","Component","Item","defaultProps"],"mappings":";;;;;;;;;;;AAKA;;IAAYA,K;;AACZ;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;+eARA;;;;;IAUqBC,Q;;;;;;;;;;;6BAMV;AAAA,mBACuE,KAAKC,KAD5E;AAAA,UACCC,SADD,UACCA,SADD;AAAA,UACYC,QADZ,UACYA,QADZ;AAAA,UACsBC,OADtB,UACsBA,OADtB;AAAA,UAC+BC,UAD/B,UAC+BA,UAD/B;AAAA,UAC2CC,SAD3C,UAC2CA,SAD3C;AAAA,UACyDC,SADzD;;AAEP,UAAMC,cAAc,OAAOJ,OAAP,KAAmB,SAAnB,GAA+B,IAA/B,GAAsCA,OAA1D;AACA,UAAMK,cAAc,0BAAWP,SAAX,sBACdA,SADc,eACQ,CAAC,CAACE,OADV,GAEjBE,SAFiB,CAApB;AAGA;AACA,UAAMI,iBAAiBX,MAAMY,QAAN,CAAeC,OAAf,CAAuBT,QAAvB,EAAiCU,MAAjC,CAAwC;AAAA,eAAQ,CAAC,CAACC,IAAV;AAAA,OAAxC,CAAvB;AACA,UAAMC,QAAQhB,MAAMY,QAAN,CAAeK,GAAf,CAAmBN,cAAnB,EAAmC,UAACO,GAAD,EAA+BC,GAA/B;AAAA,eAC/CnB,MAAMoB,YAAN,CAAmBF,GAAnB,EAAwB;AACtBG,gBAAMF,QAASnB,MAAMY,QAAN,CAAeU,KAAf,CAAqBX,cAArB,IAAuC;AADhC,SAAxB,CAD+C;AAAA,OAAnC,CAAd;AAKA,UAAMY,cAAe,CAAC,CAAClB,OAAH,GAClB;AAAA;AAAA;AACE,mBAAS,CAAC,CAACA,OADb;AAEE,eAAKC,cAAc,sCAAM,MAAK,SAAX;AAFrB;AAIGG;AAJH,OADkB,GAOhB,IAPJ;AAQA,aACE;AAAA;AAAA,qBAAQD,SAAR,IAAmB,WAAWE,WAA9B;AACGM,aADH;AAEGO;AAFH,OADF;AAMD;;;;EAjCmCvB,MAAMwB,S;;AAAvBvB,Q,CACZwB,I;AADYxB,Q,CAEZyB,Y,GAAe;AACpBvB,aAAW;AADS,C;kBAFHF,Q","file":"Timeline.js","sourcesContent":["/**\n * @author panzilong\n * @version 1.0.0\n */\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport TimelineItem, { TimeLineItemProps } from './TimelineItem';\nimport Icon from '../icon';\n\nexport default class Timeline extends React.Component {\n  static Item = TimelineItem;\n  static defaultProps = {\n    prefixCls: 'jc-timeline',\n  };\n\n  render() {\n    const { prefixCls, children, pending, pendingDot, className, ...restProps } = this.props;\n    const pendingNode = typeof pending === 'boolean' ? null : pending;\n    const classString = classNames(prefixCls, {\n      [`${prefixCls}-pending`]: !!pending,\n    }, className);\n    // Remove falsy items\n    const falsylessItems = React.Children.toArray(children).filter(item => !!item);\n    const items = React.Children.map(falsylessItems, (ele: React.ReactElement<any>, idx) =>\n      React.cloneElement(ele, {\n        last: idx === (React.Children.count(falsylessItems) - 1),\n      }),\n    );\n    const pendingItem = (!!pending) ? (\n      <TimelineItem\n        pending={!!pending}\n        dot={pendingDot || <Icon type=\"loading\" />}\n      >\n        {pendingNode}\n      </TimelineItem>\n    ) : null;\n    return (\n      <ul {...restProps} className={classString}>\n        {items}\n        {pendingItem}\n      </ul>\n    );\n  }\n}\n"]}