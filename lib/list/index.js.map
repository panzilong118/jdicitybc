{"version":3,"sources":["../../components/list/index.js"],"names":["React","List","props","renderItem","item","index","dataSource","rowKey","key","keys","renderEmpty","contextLocale","locale","prefixCls","emptyText","grid","loadMore","pagination","footer","bordered","split","className","children","itemLayout","size","header","loading","rest","loadingProp","spinning","isLoading","sizeCls","classString","isSomethingAfterLastItem","paginationContent","childrenContent","minHeight","length","items","map","childrenList","Children","child","cloneElement","gutter","Table","content","Component","Item","childContextTypes","any","defaultProps"],"mappings":"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","file":"index.js","sourcesContent":["/**\r\n * @author panzilong\r\n * @version 1.0.0\r\n */\r\nimport * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { SpinProps } from '../spin';\r\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\r\nimport defaultLocale from '../locale-provider/default';\r\n\r\nimport Spin from '../spin';\r\nimport Pagination from '../pagination';\r\nimport { Row } from '../grid';\r\n\r\nimport Item from './Item';\r\n\r\nexport default class List extends React.Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.keys = {};\r\n  }\r\n\r\n  static Item = Item;\r\n\r\n  static childContextTypes = {\r\n    grid: PropTypes.any,\r\n  };\r\n\r\n  static defaultProps = {\r\n    dataSource: [],\r\n    prefixCls: 'jc-list',\r\n    bordered: false,\r\n    split: true,\r\n    loading: false,\r\n    pagination: false,\r\n  };\r\n\r\n  getChildContext() {\r\n    return {\r\n      grid: this.props.grid,\r\n    };\r\n  }\r\n\r\n  renderItem = (item, index) => {\r\n    const { dataSource, renderItem, rowKey } = this.props;\r\n    let key;\r\n\r\n    if (typeof rowKey === 'function') {\r\n      key = rowKey(dataSource[index]);\r\n    } else if (typeof rowKey === 'string') {\r\n      key = dataSource[rowKey];\r\n    } else {\r\n      key = dataSource.key;\r\n    }\r\n\r\n    if (!key) {\r\n      key = `list-item-${index}`;\r\n    }\r\n\r\n    this.keys[index] = key;\r\n\r\n    return renderItem(item, index);\r\n  }\r\n\r\n  isSomethingAfterLastItem() {\r\n    const { loadMore, pagination, footer } = this.props;\r\n    return !!(loadMore || pagination || footer);\r\n  }\r\n\r\n  renderEmpty = (contextLocale) => {\r\n    const locale = { ...contextLocale, ...this.props.locale };\r\n    return <div className={`${this.props.prefixCls}-empty-text`}>{locale.emptyText}</div>;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      bordered,\r\n      split,\r\n      className,\r\n      children,\r\n      itemLayout,\r\n      loadMore,\r\n      pagination,\r\n      prefixCls,\r\n      grid,\r\n      dataSource,\r\n      size,\r\n      rowKey,\r\n      renderItem,\r\n      header,\r\n      footer,\r\n      loading,\r\n      ...rest,\r\n    } = this.props;\r\n\r\n    let loadingProp = loading;\r\n    if (typeof loadingProp === 'boolean') {\r\n      loadingProp = {\r\n        spinning: loadingProp,\r\n      };\r\n    }\r\n    const isLoading = (loadingProp && loadingProp.spinning);\r\n\r\n    // large => lg\r\n    // small => sm\r\n    let sizeCls = '';\r\n    switch (size) {\r\n      case 'large':\r\n        sizeCls = 'lg';\r\n        break;\r\n      case 'small':\r\n        sizeCls = 'sm';\r\n      default:\r\n        break;\r\n    }\r\n\r\n    const classString = classNames(prefixCls, className, {\r\n      [`${prefixCls}-vertical`]: itemLayout === 'vertical',\r\n      [`${prefixCls}-${sizeCls}`]: sizeCls,\r\n      [`${prefixCls}-split`]: split,\r\n      [`${prefixCls}-bordered`]: bordered,\r\n      [`${prefixCls}-loading`]: isLoading,\r\n      [`${prefixCls}-grid`]: grid,\r\n      [`${prefixCls}-something-after-last-item`]: this.isSomethingAfterLastItem(),\r\n    });\r\n\r\n    const paginationContent = (\r\n      <div className={`${prefixCls}-pagination`}>\r\n        <Pagination {...pagination} />\r\n      </div>\r\n    );\r\n\r\n    let childrenContent;\r\n    childrenContent = isLoading && <div style={{ minHeight: 53 }} />;\r\n    if (dataSource.length > 0) {\r\n      const items = dataSource.map((item, index) => this.renderItem(item, index));\r\n      const childrenList = React.Children.map(items, (child, index) => React.cloneElement(child, {\r\n          key: this.keys[index],\r\n        }),\r\n      );\r\n\r\n      childrenContent = grid ? (\r\n        <Row gutter={grid.gutter}>{childrenList}</Row>\r\n      ) : childrenList;\r\n    } else if (!children && !isLoading) {\r\n      childrenContent = (\r\n        <LocaleReceiver\r\n          componentName=\"Table\"\r\n          defaultLocale={defaultLocale.Table}\r\n        >\r\n          {this.renderEmpty}\r\n        </LocaleReceiver>\r\n      );\r\n    }\r\n\r\n    const content = (\r\n      <div>\r\n        <Spin {...loadingProp}>{childrenContent}</Spin>\r\n        {loadMore}\r\n        {(!loadMore && pagination) ? paginationContent : null}\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={classString} {...rest}>\r\n        {header && <div className={`${prefixCls}-header`}>{header}</div>}\r\n        {content}\r\n        {children}\r\n        {footer && <div className={`${prefixCls}-footer`}>{footer}</div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]}